/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "../src/conf.js":
/*!**********************!*\
  !*** ../src/conf.js ***!
  \**********************/
/*! exports provided: createEmptyConf, getConf, getPathDefaultsIfNew, memorizeSettings, clearConf, prepareConfHalt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createEmptyConf\", function() { return createEmptyConf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getConf\", function() { return getConf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getPathDefaultsIfNew\", function() { return getPathDefaultsIfNew; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"memorizeSettings\", function() { return memorizeSettings; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clearConf\", function() { return clearConf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"prepareConfHalt\", function() { return prepareConfHalt; });\n/* harmony import */ var _persistence__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./persistence */ \"../src/persistence.js\");\n/* harmony import */ var _confvalid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./confvalid */ \"../src/confvalid.js\");\n/* $Id: conf.js, v1.0 2019/11/30 VaderDarth Exp $\r\n * OpenCPN dashboard_tactics plug-in\r\n * Licensed under MIT - see distribution.\r\n */\n//An actor to load, find and store configuration\nvar alertsenabled = window.instrustat.alerts;\nvar dbglevel = window.instrustat.debuglevel;\n\n\nfunction createEmptyConf() {\n  return {\n    version: 1,\n    path: '',\n    title: '',\n    symbol: '',\n    unit: '',\n    display: 'dial',\n    decimals: 1,\n    minval: 0,\n    loalert: 0,\n    hialert: 0,\n    maxval: 100,\n    multiplier: 1,\n    divider: 1,\n    offset: 0\n  };\n}\nfunction getConf(that) {\n  if (dbglevel > 1) console.log('getConf()');\n\n  if (that.uid === '' || that.uid === null) {\n    if (dbglevel > 1) console.log('getConf(): no that.uid.');\n    return;\n  }\n\n  var emptyConf = createEmptyConf();\n  var loadedConf = Object(_persistence__WEBPACK_IMPORTED_MODULE_0__[\"loadConf\"])(that.uid, that.locInfo.protocol);\n  that.conf = Object(_confvalid__WEBPACK_IMPORTED_MODULE_1__[\"checkConf\"])(loadedConf, emptyConf);\n  if (that.conf === null) that.conf = emptyConf;\n  return;\n}\nfunction getPathDefaultsIfNew(that) {\n  if (dbglevel > 1) console.log('getPathDefaultsIfNew() - that.path: ', that.path);\n  var emptyConf = createEmptyConf();\n  var defConfObj;\n\n  try {\n    defConfObj = window.instrustat.skpathlookup(that.path);\n    defConfObj.path = that.path; // override eventual wildcards\n  } catch (error) {\n    if (dbglevel > 0) console.error('getPathDefaultsIfNew(): exception occurred when parsing common.js, looking for ', that.path, ', got error: ', error);\n    if (alertsenabled) alert(window.instrulang.errCommonJs + '\\n' + that.path + '\\n' + error);\n    return;\n  }\n\n  if (defConfObj === null) {\n    if (dbglevel > 1) console.log('getPathDefaultsIfNew(): could not get default object with the selected path, ', that.path);\n    return;\n  }\n\n  if (dbglevel > 1) console.log('getPathDefaultsIfNew(): got following static object for path (', that.path, ') : ', defConfObj);\n  that.conf = Object(_confvalid__WEBPACK_IMPORTED_MODULE_1__[\"checkConf\"])(defConfObj, emptyConf);\n  if (that.conf === null) that.conf = emptyConf;\n  Object(_persistence__WEBPACK_IMPORTED_MODULE_0__[\"saveConf\"])(that.uid, that.conf);\n  return;\n}\nfunction memorizeSettings(that) {\n  if (that.conf !== null) Object(_persistence__WEBPACK_IMPORTED_MODULE_0__[\"saveConf\"])(that.uid, that.conf);\n}\nfunction clearConf(that) {\n  that.conf = null;\n  that.perspath = false;\n  that.path = '';\n}\nfunction prepareConfHalt(that) {\n  if (dbglevel > 0) console.log('prepareConfHalt()');\n\n  if (that.conf === null) {\n    if (dbglevel > 1) console.log('checkConf(): configuration object is null, nothing to do.');\n    return;\n  }\n\n  if (that.uid === null || that.uid === '') {\n    if (dbglevel > 1) console.log('checkConf(): there is no valid UID, nothing to do.');\n    return;\n  }\n\n  Object(_persistence__WEBPACK_IMPORTED_MODULE_0__[\"saveConf\"])(that.uid, that.conf);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL2NvbmYuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2NvbmYuanM/YWRkYiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiAkSWQ6IGNvbmYuanMsIHYxLjAgMjAxOS8xMS8zMCBWYWRlckRhcnRoIEV4cCAkXHJcbiAqIE9wZW5DUE4gZGFzaGJvYXJkX3RhY3RpY3MgcGx1Zy1pblxyXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgLSBzZWUgZGlzdHJpYnV0aW9uLlxyXG4gKi9cclxuXHJcbi8vQW4gYWN0b3IgdG8gbG9hZCwgZmluZCBhbmQgc3RvcmUgY29uZmlndXJhdGlvblxyXG52YXIgYWxlcnRzZW5hYmxlZCA9IHdpbmRvdy5pbnN0cnVzdGF0LmFsZXJ0c1xyXG52YXIgZGJnbGV2ZWwgPSB3aW5kb3cuaW5zdHJ1c3RhdC5kZWJ1Z2xldmVsXHJcbmltcG9ydCB7IGxvYWRDb25mLCBzYXZlQ29uZiB9IGZyb20gJy4vcGVyc2lzdGVuY2UnXHJcbmltcG9ydCAge2NoZWNrQ29uZiB9IGZyb20gJy4vY29uZnZhbGlkJ1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUVtcHR5Q29uZigpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgICAgdmVyc2lvbiAgICA6IDEsXHJcbiAgICAgICAgcGF0aCAgICAgICA6ICcnLFxyXG4gICAgICAgIHRpdGxlICAgICAgOiAnJyxcclxuICAgICAgICBzeW1ib2wgICAgIDogJycsXHJcbiAgICAgICAgdW5pdCAgICAgICA6ICcnLFxyXG4gICAgICAgIGRpc3BsYXkgICAgOiAnZGlhbCcsXHJcbiAgICAgICAgZGVjaW1hbHMgICA6IDEsXHJcbiAgICAgICAgbWludmFsICAgICA6IDAsXHJcbiAgICAgICAgbG9hbGVydCAgICA6IDAsXHJcbiAgICAgICAgaGlhbGVydCAgICA6IDAsXHJcbiAgICAgICAgbWF4dmFsICAgICA6IDEwMCxcclxuICAgICAgICBtdWx0aXBsaWVyIDogMSxcclxuICAgICAgICBkaXZpZGVyICAgIDogMSxcclxuICAgICAgICBvZmZzZXQgICAgIDogMFxyXG4gICAgfVxyXG59XHJcbiBcclxuZXhwb3J0IGZ1bmN0aW9uIGdldENvbmYoIHRoYXQgKSB7XHJcbiAgICBpZiAoIGRiZ2xldmVsID4gMSApXHJcbiAgICAgICAgY29uc29sZS5sb2coJ2dldENvbmYoKScpXHJcbiAgICBpZiAoICh0aGF0LnVpZCA9PT0gJycpIHx8ICh0aGF0LnVpZCA9PT0gbnVsbCkgKSB7XHJcbiAgICAgICAgaWYgKCBkYmdsZXZlbCA+IDEgKSBjb25zb2xlLmxvZygnZ2V0Q29uZigpOiBubyB0aGF0LnVpZC4nKVxyXG4gICAgICAgIHJldHVyblxyXG4gICAgfVxyXG4gICAgdmFyIGVtcHR5Q29uZiA9IGNyZWF0ZUVtcHR5Q29uZigpXHJcbiAgICB2YXIgbG9hZGVkQ29uZiA9IGxvYWRDb25mKCB0aGF0LnVpZCwgdGhhdC5sb2NJbmZvLnByb3RvY29sIClcclxuICAgIHRoYXQuY29uZiA9IGNoZWNrQ29uZiggbG9hZGVkQ29uZiwgZW1wdHlDb25mIClcclxuICAgIGlmICggdGhhdC5jb25mID09PSBudWxsIClcclxuICAgICAgICB0aGF0LmNvbmYgPSBlbXB0eUNvbmZcclxuICAgIHJldHVyblxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0UGF0aERlZmF1bHRzSWZOZXcgKCB0aGF0ICkge1xyXG4gICAgaWYgKCBkYmdsZXZlbCA+IDEgKSBjb25zb2xlLmxvZyhcclxuICAgICAgICAnZ2V0UGF0aERlZmF1bHRzSWZOZXcoKSAtIHRoYXQucGF0aDogJywgdGhhdC5wYXRoKVxyXG4gICAgdmFyIGVtcHR5Q29uZiA9IGNyZWF0ZUVtcHR5Q29uZigpXHJcbiAgICB2YXIgZGVmQ29uZk9ialxyXG4gICAgdHJ5IHtcclxuICAgICAgICBkZWZDb25mT2JqID0gd2luZG93Lmluc3RydXN0YXQuc2twYXRobG9va3VwKCB0aGF0LnBhdGggKVxyXG4gICAgICAgIGRlZkNvbmZPYmoucGF0aCA9IHRoYXQucGF0aCAvLyBvdmVycmlkZSBldmVudHVhbCB3aWxkY2FyZHNcclxuICAgIH1cclxuICAgIGNhdGNoICggZXJyb3IgKSB7XHJcbiAgICAgICAgaWYgKCBkYmdsZXZlbCA+IDAgKSBjb25zb2xlLmVycm9yKFxyXG4gICAgICAgICAgICAnZ2V0UGF0aERlZmF1bHRzSWZOZXcoKTogZXhjZXB0aW9uIG9jY3VycmVkIHdoZW4gcGFyc2luZyBjb21tb24uanMsIGxvb2tpbmcgZm9yICcsXHJcbiAgICAgICAgICAgIHRoYXQucGF0aCwgJywgZ290IGVycm9yOiAnLCBlcnJvcilcclxuICAgICAgICBpZiAoIGFsZXJ0c2VuYWJsZWQgKVxyXG4gICAgICAgICAgICBhbGVydCggd2luZG93Lmluc3RydWxhbmcuZXJyQ29tbW9uSnMgKyAnXFxuJyArIHRoYXQucGF0aCArICdcXG4nICsgZXJyb3IgKVxyXG4gICAgICAgIHJldHVyblxyXG4gICAgfVxyXG4gICAgaWYgKCBkZWZDb25mT2JqID09PSBudWxsICkge1xyXG4gICAgICAgIGlmICggZGJnbGV2ZWwgPiAxICkgY29uc29sZS5sb2coXHJcbiAgICAgICAgICAgICdnZXRQYXRoRGVmYXVsdHNJZk5ldygpOiBjb3VsZCBub3QgZ2V0IGRlZmF1bHQgb2JqZWN0IHdpdGggdGhlIHNlbGVjdGVkIHBhdGgsICcsIHRoYXQucGF0aClcclxuICAgICAgICByZXR1cm5cclxuICAgIH1cclxuICAgIGlmICggZGJnbGV2ZWwgPiAxICkgY29uc29sZS5sb2coXHJcbiAgICAgICAgJ2dldFBhdGhEZWZhdWx0c0lmTmV3KCk6IGdvdCBmb2xsb3dpbmcgc3RhdGljIG9iamVjdCBmb3IgcGF0aCAoJywgdGhhdC5wYXRoLCAnKSA6ICcsIGRlZkNvbmZPYmopXHJcbiAgICB0aGF0LmNvbmYgPSBjaGVja0NvbmYoIGRlZkNvbmZPYmosIGVtcHR5Q29uZiApXHJcbiAgICBpZiAoIHRoYXQuY29uZiA9PT0gbnVsbCApXHJcbiAgICAgICAgdGhhdC5jb25mID0gZW1wdHlDb25mXHJcbiAgICBzYXZlQ29uZiggdGhhdC51aWQsIHRoYXQuY29uZiApXHJcbiAgICByZXR1cm5cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIG1lbW9yaXplU2V0dGluZ3MgKCB0aGF0ICkge1xyXG4gICAgaWYgKCB0aGF0LmNvbmYgIT09IG51bGwgKVxyXG4gICAgICAgIHNhdmVDb25mKCB0aGF0LnVpZCwgdGhhdC5jb25mIClcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyQ29uZiAoIHRoYXQgKSB7XHJcbiAgICB0aGF0LmNvbmYgPSBudWxsXHJcbiAgICB0aGF0LnBlcnNwYXRoID0gZmFsc2VcclxuICAgIHRoYXQucGF0aCA9ICcnXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBwcmVwYXJlQ29uZkhhbHQgKCB0aGF0ICkge1xyXG4gICAgaWYgKCBkYmdsZXZlbCA+IDAgKSBjb25zb2xlLmxvZygncHJlcGFyZUNvbmZIYWx0KCknKVxyXG4gICAgaWYgKCB0aGF0LmNvbmYgPT09IG51bGwgKSB7XHJcbiAgICAgICAgaWYgKCBkYmdsZXZlbCA+IDEgKSBjb25zb2xlLmxvZygnY2hlY2tDb25mKCk6IGNvbmZpZ3VyYXRpb24gb2JqZWN0IGlzIG51bGwsIG5vdGhpbmcgdG8gZG8uJylcclxuICAgICAgICByZXR1cm5cclxuICAgIH1cclxuICAgIGlmICggKHRoYXQudWlkID09PSBudWxsKSB8fCAodGhhdC51aWQgPT09ICcnKSApIHtcclxuICAgICAgICBpZiAoIGRiZ2xldmVsID4gMSApIGNvbnNvbGUubG9nKCdjaGVja0NvbmYoKTogdGhlcmUgaXMgbm8gdmFsaWQgVUlELCBub3RoaW5nIHRvIGRvLicpXHJcbiAgICAgICAgcmV0dXJuXHJcbiAgICB9XHJcbiAgICBzYXZlQ29uZiggdGhhdC51aWQsIHRoYXQuY29uZiApXHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7OztBQUtBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWRBO0FBZ0JBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBR0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../src/conf.js\n");

/***/ }),

/***/ "../src/confupgrade.js":
/*!*****************************!*\
  !*** ../src/confupgrade.js ***!
  \*****************************/
/*! exports provided: upgradeConfVersion */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"upgradeConfVersion\", function() { return upgradeConfVersion; });\n/* $Id: confupgrade.js, v1.0 2019/11/30 VaderDarth Exp $\r\n * OpenCPN dashboard_tactics plug-in\r\n * Licensed under MIT - see distribution.\r\n */\n// An actor to upgrade a configuration\nvar alertsenabled = window.instrustat.alerts;\nvar dbglevel = window.instrustat.debuglevel;\n/* ------------------------------------------------------------------------------------------- */\n\nfunction upgradeConfVersion(loadecConfVersion, loadedConf) {\n  return null; // for now, only one version possible exists: 1.\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL2NvbmZ1cGdyYWRlLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9jb25mdXBncmFkZS5qcz9iMmNlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qICRJZDogY29uZnVwZ3JhZGUuanMsIHYxLjAgMjAxOS8xMS8zMCBWYWRlckRhcnRoIEV4cCAkXHJcbiAqIE9wZW5DUE4gZGFzaGJvYXJkX3RhY3RpY3MgcGx1Zy1pblxyXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgLSBzZWUgZGlzdHJpYnV0aW9uLlxyXG4gKi9cclxuXHJcbi8vIEFuIGFjdG9yIHRvIHVwZ3JhZGUgYSBjb25maWd1cmF0aW9uXHJcbnZhciBhbGVydHNlbmFibGVkID0gd2luZG93Lmluc3RydXN0YXQuYWxlcnRzXHJcbnZhciBkYmdsZXZlbCA9IHdpbmRvdy5pbnN0cnVzdGF0LmRlYnVnbGV2ZWxcclxuXHJcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHVwZ3JhZGVDb25mVmVyc2lvbiggbG9hZGVjQ29uZlZlcnNpb24sIGxvYWRlZENvbmYgKSB7XHJcbiAgICByZXR1cm4gbnVsbCAvLyBmb3Igbm93LCBvbmx5IG9uZSB2ZXJzaW9uIHBvc3NpYmxlIGV4aXN0czogMS5cclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTs7OztBQUtBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../src/confupgrade.js\n");

/***/ }),

/***/ "../src/confvalid.js":
/*!***************************!*\
  !*** ../src/confvalid.js ***!
  \***************************/
/*! exports provided: checkConf */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"checkConf\", function() { return checkConf; });\n/* harmony import */ var _confupgrade__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./confupgrade */ \"../src/confupgrade.js\");\n/* $Id: confvalid.js, v1.0 2019/11/30 VaderDarth Exp $\r\n * OpenCPN dashboard_tactics plug-in\r\n * Licensed under MIT - see distribution.\r\n */\n// An actor to validate a configuration\nvar alertsenabled = window.instrustat.alerts;\nvar dbglevel = window.instrustat.debuglevel;\n // Polyfills, for IE back-end (!) on Windows used by WebView\n\nif (!Object.entries) Object.entries = function (obj) {\n  var ownProps = Object.keys(obj);\n  var i = ownProps.length;\n  var resArray = new Array(i); // preallocate the Array\n\n  while (i > 0) {\n    i--;\n    resArray[parseInt(i)] = [ownProps[parseInt(i)], obj[ownProps[parseInt(i)]]];\n  }\n\n  return resArray;\n};\nif (!Object.keys) Object.keys = function (o) {\n  var k = [],\n      p;\n\n  for (p in o) {\n    if (Object.prototype.hasOwnProperty.call(o, p)) k.push(p);\n  }\n\n  return k;\n};\n\nfunction areEqualShallowKeys(a, b) {\n  for (var key in a) {\n    if (!(key in b)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction getVersionNumber(ofConf) {\n  var retval = 0;\n\n  try {\n    if (dbglevel > 2) console.log('getVersionNumber(): searching for a version number:');\n    Object.entries(ofConf).forEach(function (key, value) {\n      if (dbglevel > 2) console.log('getVersionNUmber(): key ', key, ' key.length ', key.length, ' value ', value);\n      if (key.length > 1) if (key[0] === 'version') {\n        var vers = key[1];\n        if (dbglevel > 2) console.log('getVersionNUmber(): vers ', vers);\n        if (typeof vers === 'number') if (dbglevel > 2) console.log('getVersionNUmber(): vers is a typeof \"number\"');\n\n        if (key[1] !== null && typeof key[1] === 'number') {\n          if (dbglevel > 2) console.log('getVersionNUmber(): version key and number value found');\n          retval = key[1];\n        }\n      }\n    });\n  } catch (error) {\n    if (dbglevel > 1) console.log('getVersionNUmber(): exception while inspecting the object (entries), error: ', error);\n  }\n\n  return retval;\n}\n/* ------------------------------------------------------------------------------------------- */\n\n\nfunction checkConf(loadedConf, refConf) {\n  if (loadedConf === null) {\n    if (dbglevel > 1) console.log('checkConf(): inspected object is null, returning null');\n    return null;\n  }\n\n  if (refConf === null) {\n    if (dbglevel > 1) console.log('checkConf(): reference object is null, returning null');\n    return null;\n  } // Inspect the returned object against incompatibility or older version number\n\n\n  var refConfKeys = null;\n  var loadedConfKeys = null;\n\n  try {\n    refConfKeys = Object.keys(refConf);\n    loadedConfKeys = Object.keys(loadedConf);\n  } catch (error) {\n    if (dbglevel > 1) console.log('checkConf(): exception while inspecting the object keys, error: ', error);\n    return null;\n  }\n\n  var loadedConfVersion = getVersionNumber(loadedConf);\n\n  if (loadedConfVersion === 0) {\n    if (dbglevel > 1) console.log('checkConf(): the object has unkwon or zero version number - ignoring!');\n    return null;\n  }\n\n  if (loadedConfVersion < refConf.version) {\n    if (dbglevel > 1) console.log('checkConf(): Object with lower version number, ', loadedConfVersion, ' compared to current version number, ', refConf.version, ' - upgrading.');\n    loadedConf = Object(_confupgrade__WEBPACK_IMPORTED_MODULE_0__[\"upgradeConfVersion\"])(loadedConfVersion, loadedConf);\n\n    if (loadedConf === null) {\n      if (dbglevel > 1) console.log('checkConf(): upgradeConfVersion() fails in upgrade, returns null, ignoring all.');\n      return null;\n    }\n  } else if (loadedConfKeys.length !== refConfKeys.length) {\n    if (dbglevel > 1) console.log('checkConf(): the object has different number of keys, ', loadedConfKeys.length, ' compared to thr reference object\\'s number of keys, ', refConfKeys.length, ' - cannot continue.');\n    if (alertsenabled) alert(window.instrulang.errNofConfKeysDoNotMatch1 + '\\n' + window.instrulang.errNofConfKeysDoNotMatch2 + '\\n' + window.instrulang.errNofConfKeysDoNotMatch3 + ' ' + refConfKeys.length, +' ' + window.instrulang.errNofConfKeysDoNotMatch4 + ' ' + loadedConfKeys.length);\n    return null;\n  }\n\n  if (typeof loadedConf.path === 'undefined') {\n    if (dbglevel > 1) console.log('checkConf(): the object has no defined memeber \"path\".');\n    return null;\n  }\n\n  if (loadedConf.path === null || loadedConf.path === '') {\n    if (dbglevel > 1) console.log('checkConf(): the object has a member \"path\" but it is empty.');\n    return null;\n  } // Make a shallow comparison for the same keys\n\n\n  try {\n    if (!areEqualShallowKeys(refConf, loadedConf)) {\n      if (dbglevel > 1) console.log('checkConf(): Objects do not have the same keys (EqualyShallow test).', ' Cannot continue.');\n      return null;\n    }\n  } catch (error) {\n    if (dbglevel > 1) console.log('checkConf(): exception while inspecting the object (EqualyShallow - keys), error: ', error);\n    return null;\n  }\n\n  return loadedConf;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/confvalid.js\n");

/***/ }),

/***/ "../src/escapeHTML.js":
/*!****************************!*\
  !*** ../src/escapeHTML.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return sanitizer; });\n/* $Id: escapeHTML.js, v1.0 2019/11/30 VaderDarth Exp $\r\n * OpenCPN dashboard_tactics plug-in\r\n * Licensed under MIT - see distribution.\r\n */\n// Implementation originally Mozilla\n// https://github.com/mozilla-b2g/gaia/commit/5bd5ac20771a76a2f359cfbd14875c8fab86c247\nfunction sanitizer() {\n  var Tagged = {\n    _entity: /[&<>\"'/]/g,\n    _entities: {\n      '&': '&amp;',\n      '<': '&lt;',\n      '>': '&gt;',\n      '\"': '&quot;',\n      '\\'': '&apos;',\n      '/': '&#x2F;'\n    },\n    getEntity: function getEntity(s) {\n      return Tagged._entities[String(s)];\n    },\n\n    /**\r\n     * Escapes HTML for all values in a tagged template string.\r\n     */\n    escapeHTML: function escapeHTML(strings) {\n      var result = '';\n\n      for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        values[_key - 1] = arguments[_key];\n      }\n\n      for (var i = 0; i < strings.length; i++) {\n        result += strings[parseInt(i)];\n        if (i < values.length) result += String(values[parseInt(i)]).replace(Tagged._entity, Tagged.getEntity);\n      }\n\n      return result;\n    },\n\n    /**\r\n     * Escapes HTML and returns a wrapped object to be used during DOM insertion\r\n     */\n    createSafeHTML: function createSafeHTML(strings) {\n      for (var _len2 = arguments.length, values = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        values[_key2 - 1] = arguments[_key2];\n      }\n\n      var escaped = Tagged.escapeHTML.apply(Tagged, [strings].concat(values));\n      return {\n        __html: escaped,\n        toString: function toString() {\n          return '[object WrappedHTMLObject]';\n        },\n        info: 'This is a wrapped HTML object. See https://developer.mozilla.or' + 'g/en-US/Firefox_OS/Security/Security_Automation for more.'\n      };\n    },\n\n    /**\r\n     * Unwrap safe HTML created by createSafeHTML or a custom replacement that\r\n     * underwent security review.\r\n     */\n    unwrapSafeHTML: function unwrapSafeHTML(htmlObject) {\n      return htmlObject.__html;\n    }\n  };\n  return Tagged;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL2VzY2FwZUhUTUwuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL2VzY2FwZUhUTUwuanM/ZmUyNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiAkSWQ6IGVzY2FwZUhUTUwuanMsIHYxLjAgMjAxOS8xMS8zMCBWYWRlckRhcnRoIEV4cCAkXHJcbiAqIE9wZW5DUE4gZGFzaGJvYXJkX3RhY3RpY3MgcGx1Zy1pblxyXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgLSBzZWUgZGlzdHJpYnV0aW9uLlxyXG4gKi9cclxuXHJcbi8vIEltcGxlbWVudGF0aW9uIG9yaWdpbmFsbHkgTW96aWxsYVxyXG4vLyBodHRwczovL2dpdGh1Yi5jb20vbW96aWxsYS1iMmcvZ2FpYS9jb21taXQvNWJkNWFjMjA3NzFhNzZhMmYzNTljZmJkMTQ4NzVjOGZhYjg2YzI0N1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2FuaXRpemVyKCkge1xyXG4gICAgdmFyIFRhZ2dlZCA9IHtcclxuICAgICAgICBfZW50aXR5OiAvWyY8PlwiJy9dL2csXHJcbiAgICBcclxuICAgICAgICBfZW50aXRpZXM6IHtcclxuICAgICAgICAgICAgJyYnOiAnJmFtcDsnLFxyXG4gICAgICAgICAgICAnPCc6ICcmbHQ7JyxcclxuICAgICAgICAgICAgJz4nOiAnJmd0OycsXHJcbiAgICAgICAgICAgICdcIic6ICcmcXVvdDsnLFxyXG4gICAgICAgICAgICAnXFwnJzogJyZhcG9zOycsXHJcbiAgICAgICAgICAgICcvJzogJyYjeDJGOydcclxuICAgICAgICB9LFxyXG4gICAgICAgIFxyXG4gICAgICAgIGdldEVudGl0eTogZnVuY3Rpb24gKHMpIHtcclxuICAgICAgICAgICAgcmV0dXJuIFRhZ2dlZC5fZW50aXRpZXNbU3RyaW5nKHMpXVxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgXHJcbiAgICAgICAgLyoqXHJcbiAgICAgICAgICogRXNjYXBlcyBIVE1MIGZvciBhbGwgdmFsdWVzIGluIGEgdGFnZ2VkIHRlbXBsYXRlIHN0cmluZy5cclxuICAgICAgICAgKi9cclxuICAgICAgICBlc2NhcGVIVE1MOiBmdW5jdGlvbiAoc3RyaW5ncywgLi4udmFsdWVzKSB7XHJcbiAgICAgICAgICAgIHZhciByZXN1bHQgPSAnJ1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHJpbmdzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICByZXN1bHQgKz0gc3RyaW5nc1twYXJzZUludChpKV1cclxuICAgICAgICAgICAgICAgIGlmIChpIDwgdmFsdWVzLmxlbmd0aClcclxuICAgICAgICAgICAgICAgICAgICByZXN1bHQgKz0gU3RyaW5nKHZhbHVlc1twYXJzZUludChpKV0pLnJlcGxhY2UoVGFnZ2VkLl9lbnRpdHksIFRhZ2dlZC5nZXRFbnRpdHkpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIHJldHVybiByZXN1bHRcclxuICAgICAgICB9LFxyXG4gICAgICAgIC8qKlxyXG4gICAgICAgICAqIEVzY2FwZXMgSFRNTCBhbmQgcmV0dXJucyBhIHdyYXBwZWQgb2JqZWN0IHRvIGJlIHVzZWQgZHVyaW5nIERPTSBpbnNlcnRpb25cclxuICAgICAgICAgKi9cclxuICAgICAgICBjcmVhdGVTYWZlSFRNTDogZnVuY3Rpb24gKHN0cmluZ3MsIC4uLnZhbHVlcykge1xyXG4gICAgICAgICAgICB2YXIgZXNjYXBlZCA9IFRhZ2dlZC5lc2NhcGVIVE1MKHN0cmluZ3MsIC4uLnZhbHVlcylcclxuICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgIF9faHRtbDogZXNjYXBlZCxcclxuICAgICAgICAgICAgICAgIHRvU3RyaW5nOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdbb2JqZWN0IFdyYXBwZWRIVE1MT2JqZWN0XSdcclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBpbmZvOiAnVGhpcyBpcyBhIHdyYXBwZWQgSFRNTCBvYmplY3QuIFNlZSBodHRwczovL2RldmVsb3Blci5tb3ppbGxhLm9yJytcclxuICAgICAgICAgICAgICAgICAgICAnZy9lbi1VUy9GaXJlZm94X09TL1NlY3VyaXR5L1NlY3VyaXR5X0F1dG9tYXRpb24gZm9yIG1vcmUuJ1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSxcclxuICAgICAgICAvKipcclxuICAgICAgICAgKiBVbndyYXAgc2FmZSBIVE1MIGNyZWF0ZWQgYnkgY3JlYXRlU2FmZUhUTUwgb3IgYSBjdXN0b20gcmVwbGFjZW1lbnQgdGhhdFxyXG4gICAgICAgICAqIHVuZGVyd2VudCBzZWN1cml0eSByZXZpZXcuXHJcbiAgICAgICAgICovXHJcbiAgICAgICAgdW53cmFwU2FmZUhUTUw6IGZ1bmN0aW9uIChodG1sT2JqZWN0KSB7XHJcbiAgICAgICAgICAgIHJldHVybiBodG1sT2JqZWN0Ll9faHRtbFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHJldHVybiBUYWdnZWRcclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTs7OztBQUtBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQU5BO0FBU0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0E7QUFDQTtBQUNBO0FBRkE7QUFBQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7OztBQUdBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUxBO0FBUUE7QUFDQTtBQUFBOzs7O0FBSUE7QUFDQTtBQUNBO0FBbERBO0FBb0RBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../src/escapeHTML.js\n");

/***/ }),

/***/ "../src/kbd.js":
/*!*********************!*\
  !*** ../src/kbd.js ***!
  \*********************/
/*! exports provided: kbdInit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"kbdInit\", function() { return kbdInit; });\n/* $Id: kbd.js, v1.0 2019/11/30 VaderDarth Exp $\r\n * OpenCPN dashboard_tactics plug-in\r\n * Licensed under MIT - see distribution.\r\n */\n// An actor for a state machine to deal with keyboard events\nvar dbglevel = window.instrustat.debuglevel;\nvar controlKey;\nvar arrowUpKey;\nvar arrowDownKey;\nvar notBothCtrlUp;\nvar notBothCtrlDown;\nfunction kbdInit() {\n  if (dbglevel > 0) console.log('kbd.js: kbdInit()');\n  controlKey = false;\n  arrowUpKey = false;\n  arrowDownKey = false;\n  notBothCtrlUp = true;\n  notBothCtrlDown = true;\n}\n\nfunction onKeyDown(e) {\n  if (event.defaultPrevented) return;\n  var handled = false;\n  if (dbglevel > 3) console.log('kbd.js: onKeyDown(), e:', e);\n  if (e.ctrlKey) controlKey = true;\n\n  if (e.keyIdentifier === 'Up' || e.key === 'Up' || e.key === 'ArrowUp') {\n    arrowUpKey = true;\n    handled = true;\n  }\n\n  if (e.keyIdentifier === 'Down' || e.key === 'Down' || e.key === 'ArrowDown') {\n    arrowDownKey = true;\n    handled = true;\n  }\n\n  if (notBothCtrlUp) {\n    if (controlKey && arrowUpKey) {\n      if (dbglevel > 2) console.log('kbd.js: Ctrl+Up');\n      window.iface.setswapdisp(-1);\n      notBothCtrlUp = false;\n    }\n  }\n\n  if (notBothCtrlDown) {\n    if (controlKey && arrowDownKey) {\n      if (dbglevel > 2) console.log('kbd.js: Ctrl+Dow');\n      window.iface.setswapdisp(1);\n      notBothCtrlDown = false;\n    }\n  }\n\n  if (handled) event.preventDefault();\n}\n\nfunction onKeyUp(e) {\n  if (event.defaultPrevented) return;\n  var handled = false;\n  if (dbglevel > 3) console.log('kbd.js: onKeyUp(), e:', e);\n  if (!e.ctrlKey) controlKey = false;\n\n  if (e.keyIdentifier === 'Up' || e.key === 'Up' || e.key === 'ArrowUp') {\n    arrowUpKey = false;\n    handled = true;\n  }\n\n  if (e.keyIdentifier === 'Down' || e.key === 'Down' || e.key === 'ArrowDown') {\n    arrowDownKey = false;\n    handled = true;\n  }\n\n  if (!notBothCtrlUp) {\n    if (!controlKey || !arrowUpKey) notBothCtrlUp = true;\n  }\n\n  if (!notBothCtrlDown) {\n    if (!controlKey || !arrowDownKey) notBothCtrlDown = true;\n  }\n\n  if (handled) event.preventDefault();\n}\n\ndocument.addEventListener('keydown', onKeyDown, false);\ndocument.addEventListener('keyup', onKeyUp, false);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL2tiZC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uLi9zcmMva2JkLmpzPzkwYjUiXSwic291cmNlc0NvbnRlbnQiOlsiLyogJElkOiBrYmQuanMsIHYxLjAgMjAxOS8xMS8zMCBWYWRlckRhcnRoIEV4cCAkXHJcbiAqIE9wZW5DUE4gZGFzaGJvYXJkX3RhY3RpY3MgcGx1Zy1pblxyXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgLSBzZWUgZGlzdHJpYnV0aW9uLlxyXG4gKi9cclxuXHJcbi8vIEFuIGFjdG9yIGZvciBhIHN0YXRlIG1hY2hpbmUgdG8gZGVhbCB3aXRoIGtleWJvYXJkIGV2ZW50c1xyXG5cclxudmFyIGRiZ2xldmVsID0gd2luZG93Lmluc3RydXN0YXQuZGVidWdsZXZlbFxyXG5cclxudmFyIGNvbnRyb2xLZXlcclxudmFyIGFycm93VXBLZXlcclxudmFyIGFycm93RG93bktleVxyXG52YXIgbm90Qm90aEN0cmxVcFxyXG52YXIgbm90Qm90aEN0cmxEb3duXHJcblxyXG5leHBvcnQgZnVuY3Rpb24ga2JkSW5pdCgpIHtcclxuICAgIGlmICggZGJnbGV2ZWwgPiAwIClcclxuICAgICAgICBjb25zb2xlLmxvZygna2JkLmpzOiBrYmRJbml0KCknKVxyXG4gICAgY29udHJvbEtleSA9IGZhbHNlXHJcbiAgICBhcnJvd1VwS2V5ID0gZmFsc2VcclxuICAgIGFycm93RG93bktleSA9IGZhbHNlXHJcbiAgICBub3RCb3RoQ3RybFVwID0gdHJ1ZVxyXG4gICAgbm90Qm90aEN0cmxEb3duID0gdHJ1ZVxyXG59XHJcblxyXG5mdW5jdGlvbiBvbktleURvd24oIGUgKSB7XHJcbiAgICBpZiAoZXZlbnQuZGVmYXVsdFByZXZlbnRlZClcclxuICAgICAgICByZXR1cm5cclxuICAgIHZhciBoYW5kbGVkID0gZmFsc2VcclxuICAgIGlmICggZGJnbGV2ZWwgPiAzIClcclxuICAgICAgICBjb25zb2xlLmxvZygna2JkLmpzOiBvbktleURvd24oKSwgZTonLCBlKVxyXG4gICAgaWYgKCBlLmN0cmxLZXkgKVxyXG4gICAgICAgIGNvbnRyb2xLZXkgPSB0cnVlXHJcbiAgICBpZiAoIChlLmtleUlkZW50aWZpZXIgPT09ICdVcCcpIHx8IChlLmtleSA9PT0gJ1VwJykgfHwgKGUua2V5ID09PSAnQXJyb3dVcCcpICkge1xyXG4gICAgICAgIGFycm93VXBLZXkgPSB0cnVlXHJcbiAgICAgICAgaGFuZGxlZCA9IHRydWVcclxuICAgIH1cclxuICAgIGlmICggKGUua2V5SWRlbnRpZmllciA9PT0gJ0Rvd24nKSB8fCAoZS5rZXkgPT09ICdEb3duJykgfHwgKGUua2V5ID09PSAnQXJyb3dEb3duJykgKSB7XHJcbiAgICAgICAgYXJyb3dEb3duS2V5ID0gdHJ1ZVxyXG4gICAgICAgIGhhbmRsZWQgPSB0cnVlXHJcbiAgICB9XHJcbiAgICBpZiAoIG5vdEJvdGhDdHJsVXAgKSB7XHJcbiAgICAgICAgaWYgKCBjb250cm9sS2V5ICYmIGFycm93VXBLZXkgKSB7XHJcbiAgICAgICAgICAgIGlmICggZGJnbGV2ZWwgPiAyIClcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdrYmQuanM6IEN0cmwrVXAnKVxyXG4gICAgICAgICAgICB3aW5kb3cuaWZhY2Uuc2V0c3dhcGRpc3AoIC0xIClcclxuICAgICAgICAgICAgbm90Qm90aEN0cmxVcCA9IGZhbHNlXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgaWYgKCBub3RCb3RoQ3RybERvd24gKSB7XHJcbiAgICAgICAgaWYgKCBjb250cm9sS2V5ICYmIGFycm93RG93bktleSApIHtcclxuICAgICAgICAgICAgaWYgKCBkYmdsZXZlbCA+IDIgKVxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2tiZC5qczogQ3RybCtEb3cnKVxyXG4gICAgICAgICAgICB3aW5kb3cuaWZhY2Uuc2V0c3dhcGRpc3AoIDEgKVxyXG4gICAgICAgICAgICBub3RCb3RoQ3RybERvd24gPSBmYWxzZVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIGlmIChoYW5kbGVkKVxyXG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KClcclxufVxyXG5cclxuZnVuY3Rpb24gb25LZXlVcCggZSApIHtcclxuICAgIGlmIChldmVudC5kZWZhdWx0UHJldmVudGVkKVxyXG4gICAgICAgIHJldHVyblxyXG4gICAgdmFyIGhhbmRsZWQgPSBmYWxzZVxyXG4gICAgaWYgKCBkYmdsZXZlbCA+IDMgKVxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdrYmQuanM6IG9uS2V5VXAoKSwgZTonLCBlKVxyXG4gICAgaWYgKCAhZS5jdHJsS2V5IClcclxuICAgICAgICBjb250cm9sS2V5ID0gZmFsc2VcclxuICAgIGlmICggKGUua2V5SWRlbnRpZmllciA9PT0gJ1VwJykgfHwgKGUua2V5ID09PSAnVXAnKSB8fCAoZS5rZXkgPT09ICdBcnJvd1VwJykgKSB7XHJcbiAgICAgICAgYXJyb3dVcEtleSA9IGZhbHNlXHJcbiAgICAgICAgaGFuZGxlZCA9IHRydWVcclxuICAgIH1cclxuICAgIGlmICggKGUua2V5SWRlbnRpZmllciA9PT0gJ0Rvd24nKSB8fCAoZS5rZXkgPT09ICdEb3duJykgfHwgKGUua2V5ID09PSAnQXJyb3dEb3duJykgKSB7XHJcbiAgICAgICAgYXJyb3dEb3duS2V5ID0gZmFsc2VcclxuICAgICAgICBoYW5kbGVkID0gdHJ1ZVxyXG4gICAgfVxyXG4gICAgaWYgKCAhbm90Qm90aEN0cmxVcCApIHtcclxuICAgICAgICBpZiAoICFjb250cm9sS2V5IHx8ICFhcnJvd1VwS2V5IClcclxuICAgICAgICAgICAgbm90Qm90aEN0cmxVcCA9IHRydWVcclxuICAgIH1cclxuICAgIGlmICggIW5vdEJvdGhDdHJsRG93biApIHtcclxuICAgICAgICBpZiAoICFjb250cm9sS2V5IHx8ICFhcnJvd0Rvd25LZXkgKVxyXG4gICAgICAgICAgICBub3RCb3RoQ3RybERvd24gPSB0cnVlXHJcbiAgICB9XHJcbiAgICBpZiAoaGFuZGxlZClcclxuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpXHJcbn1cclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBvbktleURvd24sIGZhbHNlKVxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXl1cCcsIG9uS2V5VXAsIGZhbHNlKVxyXG5cclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7Ozs7QUFLQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///../src/kbd.js\n");

/***/ }),

/***/ "../src/location.js":
/*!**************************!*\
  !*** ../src/location.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return getLocInfo; });\n/* $Id: location.js, v1.0 2019/11/30 VaderDarth Exp $\r\n * OpenCPN dashboard_tactics plug-in\r\n * Licensed under MIT - see distribution.\r\n */\nfunction getLocInfo() {\n  var href = '';\n  var protocol = '';\n  var hostname = '';\n  var domain = '';\n  var port = '';\n\n  if (window.location) {\n    href = window.location.href;\n    console.log('href: ', href);\n    protocol = window.location.protocol;\n    console.log('protocol: ', protocol);\n    hostname = window.location.hostname;\n    console.log('hostname: ', hostname);\n    if (window.location.domain) domain = window.location.domain;else domain = '';\n    console.log('domain: ', domain);\n    if (window.location.port) port = window.location.port;else port = '';\n    port = window.location.port;\n    console.log('port: ', port);\n  }\n\n  return {\n    href: href,\n    protocol: protocol,\n    hostname: hostname,\n    domain: domain,\n    port: port\n  };\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL2xvY2F0aW9uLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9sb2NhdGlvbi5qcz8yMmY4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qICRJZDogbG9jYXRpb24uanMsIHYxLjAgMjAxOS8xMS8zMCBWYWRlckRhcnRoIEV4cCAkXHJcbiAqIE9wZW5DUE4gZGFzaGJvYXJkX3RhY3RpY3MgcGx1Zy1pblxyXG4gKiBMaWNlbnNlZCB1bmRlciBNSVQgLSBzZWUgZGlzdHJpYnV0aW9uLlxyXG4gKi9cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdldExvY0luZm8oKSB7XHJcbiAgICB2YXIgaHJlZiA9ICcnXHJcbiAgICB2YXIgcHJvdG9jb2wgPSAnJ1xyXG4gICAgdmFyIGhvc3RuYW1lID0gJydcclxuICAgIHZhciBkb21haW4gPSAnJ1xyXG4gICAgdmFyIHBvcnQgPSAnJ1xyXG4gICAgaWYgKCB3aW5kb3cubG9jYXRpb24gKSB7XHJcbiAgICAgICAgaHJlZiA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmXHJcbiAgICAgICAgY29uc29sZS5sb2coJ2hyZWY6ICcsIGhyZWYgKVxyXG4gICAgICAgIHByb3RvY29sID0gd2luZG93LmxvY2F0aW9uLnByb3RvY29sXHJcbiAgICAgICAgY29uc29sZS5sb2coJ3Byb3RvY29sOiAnLCBwcm90b2NvbCApXHJcbiAgICAgICAgaG9zdG5hbWUgPSB3aW5kb3cubG9jYXRpb24uaG9zdG5hbWVcclxuICAgICAgICBjb25zb2xlLmxvZygnaG9zdG5hbWU6ICcsIGhvc3RuYW1lIClcclxuICAgICAgICBpZiAoIHdpbmRvdy5sb2NhdGlvbi5kb21haW4gKVxyXG4gICAgICAgICAgICBkb21haW4gPSB3aW5kb3cubG9jYXRpb24uZG9tYWluXHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgICAgICBkb21haW4gPSAnJ1xyXG4gICAgICAgIGNvbnNvbGUubG9nKCdkb21haW46ICcsIGRvbWFpbiApXHJcbiAgICAgICAgaWYgKCB3aW5kb3cubG9jYXRpb24ucG9ydCApXHJcbiAgICAgICAgICAgIHBvcnQgPSB3aW5kb3cubG9jYXRpb24ucG9ydFxyXG4gICAgICAgIGVsc2VcclxuICAgICAgICAgICAgcG9ydCA9ICcnXHJcbiAgICAgICAgcG9ydCA9IHdpbmRvdy5sb2NhdGlvbi5wb3J0XHJcbiAgICAgICAgY29uc29sZS5sb2coJ3BvcnQ6ICcsIHBvcnQgKVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBocmVmOiBocmVmLFxyXG4gICAgICAgIHByb3RvY29sOiBwcm90b2NvbCxcclxuICAgICAgICBob3N0bmFtZTogaG9zdG5hbWUsXHJcbiAgICAgICAgZG9tYWluOiBkb21haW4sXHJcbiAgICAgICAgcG9ydDogcG9ydFxyXG4gICAgfVxyXG59XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBOzs7O0FBS0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSUE7QUFDQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBTEE7QUFPQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///../src/location.js\n");

/***/ }),

/***/ "../src/menu.js":
/*!**********************!*\
  !*** ../src/menu.js ***!
  \**********************/
/*! exports provided: setMenuAllPaths, setMenuRunTime, setMenuBackToLoading */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setMenuAllPaths\", function() { return setMenuAllPaths; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setMenuRunTime\", function() { return setMenuRunTime; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setMenuBackToLoading\", function() { return setMenuBackToLoading; });\n/* harmony import */ var _escapeHTML__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./escapeHTML */ \"../src/escapeHTML.js\");\n/* $Id: menu.js, v1.0 2019/11/30 VaderDarth Exp $\r\n * OpenCPN dashboard_tactics plug-in\r\n * Licensed under MIT - see distribution.\r\n */\nvar alertsenabled = window.instrustat.alerts; // An actor for a state machine to build user menu strucures\n\n\nvar Sanitizer = Object(_escapeHTML__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\nvar menu = document.querySelector('.menu');\nvar waitmsg = {\n  allpaths: [window.instrulang.menuPathWaitMsg]\n};\nvar runmsg = {\n  allpaths: [window.instrulang.menuPathRunningReconfig]\n};\nvar isOnLoad = false;\nvar isRunTime = false;\nfunction setMenuAllPaths(that, onload, runtime) {\n  isOnLoad = onload || false;\n  isRunTime = runtime || false;\n  var menuul = '<ul id=\"mi1-u-0\" class=\"menu\">';\n  var submenustart = 0;\n  var topics = ['', '', '', '', '', '', '', '', ''];\n  var htmlObj;\n\n  for (var i = 0; i < that.allpaths.length; i++) {\n    var pathe = that.allpaths[parseInt(i)];\n    var pathel = pathe.split('.');\n    var j;\n\n    for (j = 0; j < pathel.length - 1; j++) {\n      if (pathel[parseInt(j)] !== topics[parseInt(j)]) {\n        topics[parseInt(j)] = pathel[parseInt(j)];\n        if (j === 0) for (var z = 1; z < topics.length; z++) {\n          topics[parseInt(z)] = '';\n        }\n\n        while (submenustart > j) {\n          menuul += '</ul>';\n          menuul += '</li>';\n          submenustart--;\n        }\n\n        submenustart++;\n        menuul += '<li id=\"mi1-l-' + i + '-' + j;\n        menuul += '\" class=\"menu-item menu-item-submenu\">';\n        menuul += '<button id=\"mi1-b-' + i + '-' + j;\n        menuul += '\" type=\"button\" class=\"menu-btn\">';\n        menuul += '<span id=\"mi1-s-' + i + '-' + j;\n        menuul += '\" class=\"menu-text\">';\n        menuul += pathel[parseInt(j)];\n        menuul += '</span></button>';\n        menuul += '<ul id=\"mi1-u-' + i + '-' + j;\n        menuul += '\" class=\"menu\">';\n      }\n    }\n\n    menuul += '<li id=\"mi1-l-' + i + '-' + j + '\" class=\"menu-item\">';\n    menuul += '<button id=\"mif-b-';\n    menuul += that.allpaths[parseInt(i)];\n\n    if (!isRunTime && !isOnLoad) {\n      if (window.instrustat.hasPathEntry(pathe) >= 0) menuul += '\" type=\"button\" class=\"menu-btn hasdef\">';else menuul += '\" type=\"button\" class=\"menu-btn\">';\n    } else menuul += '\" type=\"button\" class=\"menu-btn\">';\n\n    menuul += '<span id=\"mif-s-';\n    menuul += that.allpaths[parseInt(i)];\n    menuul += '\" class=\"menu-text\">';\n    menuul += pathel[parseInt(j)];\n    menuul += '</span></button></li>';\n  }\n\n  menuul += '</li></ul>';\n  htmlObj = Sanitizer.createSafeHTML(menuul);\n  document.getElementById('pathMenu').innerHTML = Sanitizer.unwrapSafeHTML(htmlObj);\n  document.getElementById('pathMenu').overflow = 'hidden';\n  menu = document.querySelector('.menu');\n  that.menu = menu;\n  if (isRunTime) document.getElementById('skPath').innerHTML = '&nbsp';else if (isOnLoad) {\n    htmlObj = Sanitizer.createSafeHTML(window.instrulang.loading);\n    document.getElementById('skPath').innerHTML = Sanitizer.unwrapSafeHTML(htmlObj);\n  } else {\n    htmlObj = Sanitizer.createSafeHTML(window.instrulang.rightClickHereToSubscribe);\n    document.getElementById('skPath').innerHTML = Sanitizer.unwrapSafeHTML(htmlObj);\n  }\n}\n\nvar setemptypath = function () {\n  setMenuAllPaths(waitmsg, true, false);\n  return;\n}();\n\nfunction setMenuRunTime(that) {\n  setMenuAllPaths(runmsg, false, true);\n  return;\n}\nfunction setMenuBackToLoading(that) {\n  setMenuAllPaths(waitmsg, true, false);\n  return;\n}\n/* Menu */\n\n/* Original Copyright (c) 2019 by Ryan Morr (https://codepen.io/ryanmorr/pen/JdOvYR)\r\n   Modified for OpenCPN gauge / display usage */\n\nfunction showMenu() {\n  menu.classList.add('menu-show');\n}\n\nfunction hideMenu() {\n  menu.classList.remove('menu-show');\n}\n\nfunction onMouseDown(e) {\n  document.removeEventListener('mousedown', onMouseDown);\n  e = e.srcElement;\n  var idsplit;\n\n  if (e.nodeName === 'BUTTON' || e.nodeName === 'SPAN') {\n    if (e.id !== '') {\n      idsplit = e.id.split('-');\n\n      if (idsplit[0] === 'mif') {\n        if (!isOnLoad) {\n          if (isRunTime) window.iface.setchgconf('chgconf');else if (window.instrustat.hasPathEntry(idsplit[2]) >= 0) window.iface.setselected(idsplit[2]);else {\n            if (alertsenabled) alert(idsplit[2] + '\\n' + window.instrulang.pathHasNoDescription1 + '\\n' + window.instrulang.pathHasNoDescription2 + '\\n' + window.instrulang.pathHasNoDescription3);\n            window.iface.setrescan();\n          }\n        }\n\n        hideMenu();\n      } else {\n        if (idsplit[0] === 'mi1') document.addEventListener('mousedown', onMouseDown);else hideMenu();\n      }\n    } else {\n      hideMenu();\n    }\n  } else {\n    if (e.id !== '') {\n      idsplit = e.id.split('-');\n      if (idsplit[0] === 'mi1') document.addEventListener('mousedown', onMouseDown);else hideMenu();\n    } else hideMenu();\n  }\n}\n\nfunction onContextMenu(e) {\n  e.preventDefault();\n  showMenu();\n  document.addEventListener('mousedown', onMouseDown);\n}\n\ndocument.addEventListener('contextmenu', onContextMenu, false);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/menu.js\n");

/***/ }),

/***/ "../src/mixin.js":
/*!***********************!*\
  !*** ../src/mixin.js ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// Source https://git.io/JveGD courtesy of https://github.com/jakesgordon under MIT license\nmodule.exports = function (target, sources) {\n  var n;\n  var source;\n  var key;\n\n  for (n = 1; n < arguments.length; n++) {\n    source = arguments[parseInt(n)];\n\n    for (key in source) {\n      if (source.hasOwnProperty(key)) target[String(key)] = source[String(key)];\n    }\n  }\n\n  return target;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL21peGluLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4uL3NyYy9taXhpbi5qcz8wMjczIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNvdXJjZSBodHRwczovL2dpdC5pby9KdmVHRCBjb3VydGVzeSBvZiBodHRwczovL2dpdGh1Yi5jb20vamFrZXNnb3Jkb24gdW5kZXIgTUlUIGxpY2Vuc2VcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odGFyZ2V0LCBzb3VyY2VzKSB7XHJcbiAgICB2YXIgblxyXG4gICAgdmFyIHNvdXJjZVxyXG4gICAgdmFyIGtleVxyXG4gICAgZm9yKCBuID0gMSA7IG4gPCBhcmd1bWVudHMubGVuZ3RoIDsgbisrICkge1xyXG4gICAgICAgIHNvdXJjZSA9IGFyZ3VtZW50c1sgcGFyc2VJbnQobikgXVxyXG4gICAgICAgIGZvciAoIGtleSBpbiBzb3VyY2UgKSB7XHJcbiAgICAgICAgICAgIGlmICggc291cmNlLmhhc093blByb3BlcnR5KGtleSkgKVxyXG4gICAgICAgICAgICAgICAgdGFyZ2V0WyBTdHJpbmcoa2V5KSBdID0gc291cmNlWyBTdHJpbmcoa2V5KSBdXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRhcmdldFxyXG59XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUFBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../src/mixin.js\n");

/***/ }),

/***/ "../src/persistence.js":
/*!*****************************!*\
  !*** ../src/persistence.js ***!
  \*****************************/
/*! exports provided: loadConf, saveConf */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"loadConf\", function() { return loadConf; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"saveConf\", function() { return saveConf; });\n/* $Id: persistence.js, v1.0 2019/11/30 VaderDarth Exp $\r\n * OpenCPN dashboard_tactics plug-in\r\n * Licensed under MIT - see distribution.\r\n */\n\n/*\r\n  LocalStorage (JSON objects) - works (usually) with file:// URIs on WebKitbut can be\r\n  blocked by policy. On MSIE it is cookies which work on WebView backend. Likewise,\r\n  the cookies are blocked usually by a policy. So the http:// should be suggested\r\n  to the end user if nothing works on his/her WebKit/MSIE.\r\n*/\nvar alertsenabled = window.instrustat.alerts;\nvar dbglevel = window.instrustat.debuglevel;\nvar bSelfTest = false;\nvar sLocProtocol = '';\nvar bLocalStorage = false;\nvar bCookies = false;\nvar bStatic = false;\n/* -------------------------------------------------------------------------------- */\n\nfunction saveObj(cid, cobj) {\n  if (dbglevel > 0) console.log('saveObj(): ', cid, cobj); // let's avoid mess\n\n  var nCid = cid || null;\n\n  if (nCid === null || nCid === '') {\n    if (dbglevel > 0) console.error('persistence.js saveObj(): no cid');\n    return false;\n  }\n\n  var nCobj = cobj || null;\n\n  if (nCobj === null) {\n    if (dbglevel > 0) console.error('persistence.js saveObj(): cobj is null');\n    return false;\n  }\n\n  try {\n    localStorage.setItem(cid, JSON.stringify(cobj));\n    return true;\n  } catch (error) {\n    if (dbglevel > 0) console.error('persistence.js saveObj(): error: ', error);\n    return false;\n  }\n}\n\nfunction getObj(cid) {\n  if (dbglevel > 0) console.log('getObj(): ', cid); // let's avoid chasing phantom data\n\n  var nCid = cid || null;\n\n  if (nCid === null || nCid === '') {\n    if (dbglevel > 0) console.error('persistence.js getObj(): no cid');\n    return null;\n  }\n\n  try {\n    return JSON.parse(localStorage.getItem(cid));\n  } catch (error) {\n    if (dbglevel > 0) console.error('persistence.js getObj(): error: ', error);\n    return null;\n  }\n}\n\nfunction deleteObj(cid) {\n  if (dbglevel > 0) console.log('deleteObj(): ', cid); // deleting phantom data would be useless\n\n  var nCid = cid || null;\n\n  if (nCid === null || nCid === '') {\n    if (dbglevel > 0) console.error('persistence.js deleteObj(): no cid');\n    return false;\n  }\n\n  try {\n    localStorage.removeItem(cid);\n    return true;\n  } catch (error) {\n    if (dbglevel > 0) console.error('persistence.js deleteObj(): error: ', error);\n    return false;\n  }\n} // Cookies (do not use w/ file:// URIs, only http:// or https::// )\n\n\nfunction saveParam(cname, cid, cvalue, inexdays) {\n  if (dbglevel > 0) console.log('saveParam(): ', cname, cid, cvalue, inexdays); // let's avoid creating useless cookies\n\n  var nCname = cname || null;\n\n  if (nCname === null || nCname === '') {\n    if (dbglevel > 0) console.error('persistence.js saveParam(): no cname');\n    return false;\n  }\n\n  var nCid = cid || null;\n\n  if (nCid === null || nCid === '') {\n    if (dbglevel > 0) console.error('persistence.js saveParam(): no cid');\n    return false;\n  }\n\n  var nCvalue = cvalue || null;\n\n  if (nCvalue === null) {\n    if (dbglevel > 0) console.error('persistence.js saveParam(): cvalue is null');\n    return false;\n  }\n\n  var d = new Date();\n  var expires = '';\n  var exdays = inexdays || null;\n  if (exdays === null) exdays = 365; // unused will disappear after 1 year\n\n  d.setTime(d.getTime() + exdays * 24 * 60 * 60 * 1000);\n  expires = ';expires=' + d.toUTCString();\n  var cookiestr = cid + '-' + cname + '=' + cvalue + expires + ';path=/';\n  if (dbglevel > 0) console.log('saveParam():', cookiestr);\n\n  try {\n    document.cookie = cookiestr;\n    return true;\n  } catch (error) {\n    if (dbglevel > 0) console.error('persistence.js saveParam(): cvalue is document.cookie exception: ', error);\n    return false;\n  }\n}\n\nfunction getParam(cname, cid) {\n  if (dbglevel > 0) console.log('getParam(): ', cname, cid); // let's avoid chasing phantom cookies\n\n  var nCname = cname || null;\n\n  if (nCname === null || nCname === '') {\n    if (dbglevel > 0) console.error('persistence.js getParam(): no cname');\n    return null;\n  }\n\n  var nCid = cid || null;\n\n  if (nCid === null || nCid === '') {\n    if (dbglevel > 0) console.error('persistence.js getParam(): no cid');\n    return null;\n  }\n\n  var allpiparit = document.cookie;\n  if (dbglevel > 2) console.log('persistence.js getParam(): document.cookie: \"', allpiparit, '\"');\n  var piparit = allpiparit.split(';');\n  var firstelemname = cid + '-' + cname;\n  var elemname = ' ' + firstelemname;\n\n  try {\n    for (var i = 0; i < piparit.length; i++) {\n      var pipari = piparit[parseInt(i)].split('=');\n\n      if (pipari.length === 2) {\n        if (dbglevel > 2) console.log('persistence.js getParam(): pipari[0] :\"', pipari[0], '\" pipari[1]:\"', pipari[1], '\"');\n        var comp = elemname;\n        if (i === 0) comp = firstelemname;\n\n        if (pipari[0] === comp) {\n          if (dbglevel > 0) console.log('getParam(): returning:\"', pipari[1]);\n          return pipari[1];\n        }\n      } else if (dbglevel > 2) {\n        console.log('persistence.js getParam(): ill-formed piparit[', i, '] :\"', piparit[parseInt(i)]);\n      }\n    }\n  } catch (error) {\n    if (dbglevel > 2) console.log('persistence.js getParam(): piparit :\"', piparit, '\" caused an exception, error: ', error);\n  }\n\n  if (dbglevel > 0) console.log('getParam(): ', name, ' not found.');\n  return null;\n}\n\nfunction deleteParam(cname, cid) {\n  if (dbglevel > 0) console.log('deleteParam(): ', cname, cid); // deleting phantom cookies would be useless\n\n  var nCname = cname || null;\n\n  if (nCname === null || nCname === '') {\n    if (dbglevel > 0) console.error('persistence.js deleteParam(): no cname');\n    return false;\n  }\n\n  var nCid = cid || null;\n\n  if (nCid === null || nCid === '') {\n    if (dbglevel > 0) console.error('persistence.js deleteParam(): no cid');\n    return false;\n  }\n\n  var expires = ';expires=Thu, 01 Jan 1970 00:00:00 UTC';\n  var cookiestr = cid + '-' + cname + '=' + expires + ';path=/';\n  if (dbglevel > 1) console.log('deleteParam():', cookiestr);\n\n  try {\n    document.cookie = cookiestr;\n    return true;\n  } catch (error) {\n    if (dbglevel > 0) console.error('persistence.js deleteParam(): cvalue is document.cookie exception: ', error);\n    return false;\n  }\n}\n\nfunction saveCookieObj(cid, cobj) {\n  if (dbglevel > 0) console.log('saveCookieObj(): ', cid, cobj); // let's avoid mess\n\n  var nCid = cid || null;\n\n  if (nCid === null || nCid === '') {\n    if (dbglevel > 0) console.error('persistence.js saveCookieObj(): no cid');\n    return false;\n  }\n\n  var nCobj = cobj || null;\n\n  if (nCobj === null) {\n    if (dbglevel > 0) console.error('persistence.js saveCookieObj(): cobj is null');\n    return false;\n  }\n\n  try {\n    saveParam('confObj', cid, JSON.stringify(cobj));\n    return true;\n  } catch (error) {\n    if (dbglevel > 0) console.error('persistence.js saveCookieObj(): error: ', error);\n    return false;\n  }\n}\n\nfunction getCookieObj(cid) {\n  if (dbglevel > 0) console.log('getCookieObj(): ', cid); // let's avoid chasing phantom data\n\n  var nCid = cid || null;\n\n  if (nCid === null || nCid === '') {\n    if (dbglevel > 0) console.error('persistence.js getCookieObj(): no cid');\n    return null;\n  }\n\n  try {\n    return JSON.parse(getParam('confObj', cid));\n  } catch (error) {\n    if (dbglevel > 0) console.error('persistence.js getCookieObj(): error: ', error);\n    return null;\n  }\n}\n\nfunction deleteCookieObj(cid) {\n  if (dbglevel > 0) console.log('deleteCookieObj(): ', cid); // deleting phantom data would be useless\n\n  var nCid = cid || null;\n\n  if (nCid === null || nCid === '') {\n    if (dbglevel > 0) console.error('persistence.js deleteCookieObj(): no cid');\n    return false;\n  }\n\n  try {\n    deleteParam('confObj', cid);\n    return true;\n  } catch (error) {\n    if (dbglevel > 0) console.error('persistence.js deleteCookieObj(): error: ', error);\n    return false;\n  }\n}\n\nfunction selfTest(locProtocol) {\n  if (bSelfTest) return;\n  bSelfTest = true;\n  if (dbglevel > 0) console.log('perstince.js SelfTest()');\n  var protocol = locProtocol;\n\n  try {\n    var sKey = 'test.persistence.js';\n    var sTest = 'test';\n    localStorage.setItem(sKey, sTest);\n    var sComp = localStorage.getItem(sKey);\n    localStorage.removeItem(sKey);\n\n    if (sTest === sComp) {\n      bLocalStorage = true;\n      if (dbglevel > 0) console.log('localStorage() support is available, protocol: ', protocol);\n    } else if (dbglevel > 0) console.log('localStorage() support but verification failed, protocol: ', protocol);\n  } catch (error) {\n    if (dbglevel > 0) console.log('localStorage() support not available, protocol: ', protocol);\n  }\n\n  var cNameTest = 'test-cookie-by-persistence-js';\n  var cCidTest = String(Math.floor(Math.random() * Math.floor(999999)));\n  var cValTest = 'test';\n\n  try {\n    if (saveParam(cNameTest, cCidTest, cValTest)) {\n      var cValComp = getParam(cNameTest, cCidTest);\n\n      if (cValComp === cValTest) {\n        if (dbglevel > 0) console.log('document.cookie support is available, protocol: ', protocol);\n        bCookies = true;\n        if (!deleteParam(cNameTest, cCidTest)) if (dbglevel > 0) console.log('document.cookie: warning: cannot delete the test cookie: ', cNameTest, '-', cCidTest);\n      } else {\n        if (dbglevel > 0) console.log('document.cookie support not available (cannot read back)', ', protocol: ', protocol);\n      }\n    } else {\n      if (dbglevel > 0) console.log('document.cookie support not available (cannot save), protocol: ', protocol);\n    }\n  } catch (error) {\n    if (dbglevel > 0) console.log('document.cookie support not available, protocol: ', protocol, ' error: ', error);\n  }\n\n  return;\n}\n/* -------------------------------------------------------------------------------- */\n\n\nfunction loadConf(cid, locProtocol) {\n  if (dbglevel > 0) console.log('persistence.js loadConf() ', cid, locProtocol);\n  sLocProtocol = locProtocol || ''; // Priority for static confiruation even if we do not encourage for it\n\n  var statConf = null;\n\n  try {\n    statConf = window.instrustatconf.getObj(cid);\n  } catch (error) {\n    if (dbglevel > 0) console.error('persistence.js loadConf() - instrustatconf.getObj() error: ', error);\n    if (alertsenabled) alert(window.instrulang.errCommonJs + '\\n' + error);\n    return null;\n  } // then tis exception is worthwhile to tell the user\n\n\n  if (statConf !== null) {\n    bStatic = true;\n    return statConf;\n  }\n\n  if (dbglevel > 1) console.log('persistence.js loadConf(): no static config found'); // Using local storage is indeed better, but is any available from backend?\n\n  if (!bSelfTest) {\n    selfTest(locProtocol);\n  }\n\n  if (!bLocalStorage && !bCookies) {\n    if (dbglevel > 0) console.error('persistence.js: loadConf(): no local storage support available,');\n    if (dbglevel > 1) console.log('probably a back-end (IE or WebKit) policy prevents the usage ', 'for the used protocol: ', locProtocol);\n    if (alertsenabled) alert(window.instrulang.savingNotAvailable + '\\n' + window.instrulang.systemPolicyPrevents + '\\n' + window.instrulang.theProtocolIs + ' \"' + locProtocol + '//\"\\n' + window.instrulang.tryAnotherProtocol + '\\n');\n    return null;\n  }\n\n  if (bLocalStorage) return getObj(cid);\n  return getCookieObj(cid);\n}\nfunction saveConf(cid, confObj) {\n  var inCid = cid || null;\n\n  if (inCid === null || inCid === '') {\n    if (dbglevel > 1) console.log('persistence.js saveConf(): there is no valid UID, cannot save.');\n    return false;\n  }\n\n  var inConfObj = confObj || null;\n\n  if (inConfObj === null) {\n    if (dbglevel > 0) console.error('persistence.js: saveConf(): no configuration object provided to save!');\n    return false;\n  }\n\n  if (bStatic) return false; // nothing to save\n\n  if (!bSelfTest) selfTest(sLocProtocol);\n\n  if (!bLocalStorage && !bCookies) {\n    if (dbglevel > 0) console.error('persistence.js saveConf(): no storage available');\n    return false;\n  }\n\n  if (bLocalStorage) return saveObj(cid, inConfObj); // cookies are available!\n\n  return saveCookieObj(cid, inConfObj);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/persistence.js\n");

/***/ }),

/***/ "../src/state-machine-visualize.js":
/*!*****************************************!*\
  !*** ../src/state-machine-visualize.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return visualize; });\n// Source https://git.io/JveGn courtesy of https://github.com/jakesgordon under MIT license\n//-------------------------------------------------------------------------------------------------\nvar mixin = __webpack_require__(/*! ./mixin */ \"../src/mixin.js\"); //-------------------------------------------------------------------------------------------------\n\n\nfunction pad(name) {\n  return ' ' + name + ' ';\n}\n\nfunction quote(name) {\n  return '\"' + name + '\"';\n} //-------------------------------------------------------------------------------------------------\n\n\nfunction dotcfg(fsm, options) {\n  options = options || {};\n  var config = dotcfg.fetch(fsm),\n      name = options.name,\n      rankdir = dotcfg.rankdir(options.orientation),\n      states = dotcfg.states(config, options),\n      transitions = dotcfg.transitions(config, options),\n      result = {};\n  if (name) result.name = name;\n  if (rankdir) result.rankdir = rankdir;\n  if (states && states.length > 0) result.states = states;\n  if (transitions && transitions.length > 0) result.transitions = transitions;\n  return result;\n} //-------------------------------------------------------------------------------------------------\n\n\ndotcfg.fetch = function (fsm) {\n  return typeof fsm === 'function' ? fsm.prototype._fsm.config : fsm._fsm.config;\n};\n\ndotcfg.rankdir = function (orientation) {\n  if (orientation === 'horizontal') return 'LR';else if (orientation === 'vertical') return 'TB';\n};\n\ndotcfg.states = function (config, options) {\n  var index;\n  var states = config.states;\n\n  if (!options.init) {\n    // if not showing init transition, then slice out the implied init :from state\n    index = states.indexOf(config.init.from);\n    states = states.slice(0, index).concat(states.slice(index + 1));\n  }\n\n  return states;\n};\n\ndotcfg.transitions = function (config, options) {\n  var n;\n  var max;\n  var transition;\n  var init = config.init;\n  var transitions = config.options.transitions || []; // easier to visualize using the ORIGINAL transition declarations rather than our run-time mapping\n\n  var output = [];\n  if (options.init && init.active) dotcfg.transition(init.name, init.from, init.to, init.dot, config, options, output);\n\n  for (n = 0, max = transitions.length; n < max; n++) {\n    transition = config.options.transitions[parseInt(n)];\n    dotcfg.transition(transition.name, transition.from, transition.to, transition.dot, config, options, output);\n  }\n\n  return output;\n};\n\ndotcfg.transition = function (name, from, to, dot, config, options, output) {\n  var n;\n  var max;\n  var wildcard = config.defaults.wildcard;\n  if (Array.isArray(from)) for (n = 0, max = from.length; n < max; n++) {\n    dotcfg.transition(name, from[parseInt(n)], to, dot, config, options, output);\n  } else if (from === wildcard || typeof from === 'undefined') for (n = 0, max = config.states.length; n < max; n++) {\n    dotcfg.transition(name, config.states[parseInt(n)], to, dot, config, options, output);\n  } else if (to === wildcard || typeof to === 'undefined') dotcfg.transition(name, from, from, dot, config, options, output);else if (typeof to === 'function') {// do nothing, can't display conditional transition\n  } else output.push(mixin({}, {\n    from: from,\n    to: to,\n    label: pad(name)\n  }, dot || {}));\n};\n\nfunction dotify(dotcfg) {\n  dotcfg = dotcfg || {};\n  var name = dotcfg.name || 'fsm';\n  var states = dotcfg.states || [];\n  var transitions = dotcfg.transitions || [];\n  var rankdir = dotcfg.rankdir;\n  var output = [];\n  var n;\n  var max;\n  output.push('digraph ' + quote(name) + ' {');\n  if (rankdir) output.push('  rankdir=' + rankdir + ';');\n\n  for (n = 0, max = states.length; n < max; n++) {\n    output.push(dotify.state(states[parseInt(n)]));\n  }\n\n  for (n = 0, max = transitions.length; n < max; n++) {\n    output.push(dotify.edge(transitions[parseInt(n)]));\n  }\n\n  output.push('}');\n  return output.join('\\n');\n}\n\ndotify.state = function (state) {\n  return '  ' + quote(state) + ';';\n};\n\ndotify.edge = function (edge) {\n  return '  ' + quote(edge.from) + ' -> ' + quote(edge.to) + dotify.edge.attr(edge) + ';';\n};\n\ndotify.edge.attr = function (edge) {\n  var n;\n  var max;\n  var keys = Object.keys(edge).sort();\n  var output = [];\n\n  for (n = 0, max = keys.length; n < max; n++) {\n    var key = keys[parseInt(n)];\n    if (key !== 'from' && key !== 'to') output.push(key + '=' + quote(edge[String(key)]));\n  }\n\n  return output.length > 0 ? ' [ ' + output.join(' ; ') + ' ]' : '';\n}; //-------------------------------------------------------------------------------------------------\n\n\nfunction visualize(fsm, options) {\n  return dotify(dotcfg(fsm, options));\n} //-------------------------------------------------------------------------------------------------//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../src/state-machine-visualize.js\n");

/***/ }),

/***/ "../src/version.js":
/*!*************************!*\
  !*** ../src/version.js ***!
  \*************************/
/*! exports provided: packagename, version */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"packagename\", function() { return packagename; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"version\", function() { return version; });\nfunction packagename() {\n  return 'instrujs';\n}\nfunction version() {\n  return 'v0.0.1';\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vc3JjL3ZlcnNpb24uanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi4vc3JjL3ZlcnNpb24uanM/Yzg2NiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gcGFja2FnZW5hbWUoKSB7XHJcbiAgICByZXR1cm4gJ2luc3RydWpzJ1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiB2ZXJzaW9uKCkge1xyXG4gICAgcmV0dXJuICd2MC4wLjEnXHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../src/version.js\n");

/***/ }),

/***/ "./node_modules/exports-loader/index.js?iface!../src/iface.js":
/*!***********************************************************!*\
  !*** ./node_modules/exports-loader?iface!../src/iface.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("/* $Id: siface.js, v1.0 2019/11/30 VaderDarth Exp $\r\n * OpenCPN dashboard_tactics plug-in\r\n * Licensed under MIT - see distribution.\r\n */\nvar ifacedbglevel = window.instrustat.debuglevel; // import sanitizer code port\n\nvar escapeHTML = __webpack_require__(/*! ./escapeHTML */ \"../src/escapeHTML.js\");\n\nvar Sanitizer = escapeHTML[\"default\"]();\nvar iface = {\n  eventsetid: null,\n  elemsetid: null,\n  uid: '',\n  regeventsetid: function regeventsetid(newelem, newevent) {\n    this.elemsetid = newelem;\n    this.eventsetid = newevent;\n  },\n  setid: function setid(newuid) {\n    this.uid = newuid;\n    if (this.eventsetid === null || this.elemsetid === null) return;\n    this.elemsetid.dispatchEvent(this.eventsetid);\n  },\n  getid: function getid() {\n    if (this.uid === null || this.uid === '') return '';\n    this.clearFlag(this.elemsetid);\n    return this.uid;\n  },\n  eventsetall: null,\n  elemsetall: null,\n  allpaths: [],\n  regeventsetall: function regeventsetall(newelem, newevent) {\n    this.elemsetall = newelem;\n    this.eventsetall = newevent;\n  },\n  setall: function setall(alist) {\n    var emptylist = [];\n    this.allpaths = emptylist;\n    var varlistitems = alist.split(',');\n\n    for (var i = 0; i < varlistitems.length; i++) {\n      this.allpaths.push(varlistitems[parseInt(i)]);\n    }\n\n    if (this.eventsetall === null || this.elemsetall === null) return;\n    this.elemsetall.dispatchEvent(this.eventsetall);\n  },\n  getall: function getall() {\n    if (this.allpaths.length === 0) return [];\n    this.clearFlag(this.elemsetall);\n    return this.allpaths;\n  },\n  eventsetalldb: null,\n  elemsetalldb: null,\n  allpathsdb: [],\n  regeventsetalldb: function regeventsetalldb(newelem, newevent) {\n    this.elemsetalldb = newelem;\n    this.eventsetalldb = newevent;\n  },\n  setalldb: function setalldb(alist) {\n    var emptylist = [];\n    this.allpathsdb = emptylist;\n    var varlistitems = alist.split(',');\n\n    for (var i = 0; i < varlistitems.length; i++) {\n      this.allpathsdb.push(varlistitems[parseInt(i)]);\n    }\n\n    if (this.eventsetalldb === null || this.elemsetalldb === null) return;\n    this.elemsetalldb.dispatchEvent(this.eventsetalldb);\n  },\n  getalldb: function getalldb() {\n    if (this.allpathsdb.length === 0) return [];\n    this.clearFlag(this.elemsetalldb);\n    return this.allpathsdb;\n  },\n  eventselected: null,\n  elemselected: null,\n  selectedpath: '',\n  regeventselected: function regeventselected(newelem, newevent) {\n    this.elemselected = newelem;\n    this.eventselected = newevent;\n  },\n  setselected: function setselected(newpath) {\n    try {\n      if (this.eventselected === null || this.elemselected === null) return;\n      this.selectedpath = newpath;\n      if (ifacedbglevel > 0) console.log('iface.setselected - selectedpath: ', this.selectedpath);\n      this.elemselected.dispatchEvent(this.eventselected);\n    } catch (error) {\n      this.selectedpath = '';\n      if (ifacedbglevel > 1) console.log('iface.setselected - state machine error', error);\n      return;\n    }\n  },\n  getselected: function getselected() {\n    if (this.selectedpath === null || this.selectedpath === '') return '';\n    return this.selectedpath;\n  },\n  eventrescan: null,\n  elemrescan: null,\n  regeventrescan: function regeventrescan(newelem, newevent) {\n    this.elemrescan = newelem;\n    this.eventrescan = newevent;\n  },\n  setrescan: function setrescan() {\n    try {\n      if (this.eventrescan === null || this.elemrescan === null) return;\n      this.elemrescan.dispatchEvent(this.eventrescan);\n    } catch (error) {\n      if (ifacedbglevel > 1) console.log('iface.setrescan - state machine error', error);\n      return;\n    }\n  },\n  eventacksubs: null,\n  elemacksubs: null,\n  acksubspath: '',\n  regeventacksubs: function regeventacksubs(newelem, newevent) {\n    this.elemacksubs = newelem;\n    this.eventacksubs = newevent;\n  },\n  acksubs: function acksubs(forpath) {\n    try {\n      if (this.eventacksubs === null || this.elemacksubs === null) return;\n      this.acksubspath = forpath;\n      if (ifacedbglevel > 0) console.log('iface.setacksubs - acksubspath: ', this.acksubspath);\n      this.elemacksubs.dispatchEvent(this.eventacksubs);\n    } catch (error) {\n      this.acksubspath = '';\n      if (ifacedbglevel > 1) console.log('iface.setacksubs - state machine error', error);\n      return;\n    }\n  },\n  getacksubs: function getacksubs() {\n    if (this.acksubspath === null || this.acksubspath === '') return '';\n    return this.acksubspath;\n  },\n  eventackschema: null,\n  elemackschema: null,\n  dbschema: '',\n  regeventackschema: function regeventackschema(newelem, newevent) {\n    this.elemackschema = newelem;\n    this.eventackschema = newevent;\n  },\n  ackschema: function ackschema(newschema) {\n    try {\n      if (this.eventackschema === null || this.elemackschema === null) return;\n      this.dbschema = newschema;\n      if (ifacedbglevel > 0) console.log('iface.setackschema - ackschema: ', this.dbschema);\n      this.elemackschema.dispatchEvent(this.eventackschema);\n    } catch (error) {\n      this.dbschema = '';\n      if (ifacedbglevel > 1) console.log('iface.setackschema - state machine error', error);\n      return;\n    }\n  },\n  getdbschema: function getdbschema() {\n    if (this.dbschema === null || this.dbschema === '') return '';\n    return this.dbschema;\n  },\n  eventchgconf: null,\n  elemchgconf: null,\n  chgconfpath: '',\n  regeventchgconf: function regeventchgconf(newelem, newevent) {\n    this.elemchgconf = newelem;\n    this.eventchgconf = newevent;\n  },\n  setchgconf: function setchgconf(newpath) {\n    try {\n      if (this.eventchgconf === null || this.elemchgconf === null) return;\n      this.chgconfpath = newpath;\n      if (ifacedbglevel > 0) console.log('iface.setchgconf - chgconfpath: ', this.chgconfpath);\n      this.elemchgconf.dispatchEvent(this.eventchgconf);\n    } catch (error) {\n      this.chgconfpath = '';\n      if (ifacedbglevel > 1) console.log('iface.setchgconf - state machine error', error);\n      return;\n    }\n  },\n  getchgconf: function getchgconf() {\n    if (this.chgconfpath === null || this.chgconfpath === '') return '';\n    return this.chgconfpath;\n  },\n  eventnewdata: null,\n  elemnewdata: null,\n  value: 0.0,\n  regeventnewdata: function regeventnewdata(newelem, newevent) {\n    this.elemnewdata = newelem;\n    this.eventnewdata = newevent;\n  },\n  newdata: function newdata(newvalue) {\n    this.value = newvalue;\n    if (this.eventnewdata === null || this.elemnewdata === null) return;\n    this.elemnewdata.dispatchEvent(this.eventnewdata);\n  },\n  getdata: function getdata() {\n    if (this.value === null) return 0.0;\n    return this.value;\n  },\n  eventswapdisp: null,\n  elemswapdisp: null,\n  swapdirection: 0,\n  regeventswapdisp: function regeventswapdisp(newelem, newevent) {\n    this.elemswapdisp = newelem;\n    this.eventswapdisp = newevent;\n  },\n  setswapdisp: function setswapdisp(newswapdirection) {\n    try {\n      if (this.eventswapdisp === null || this.elemswapdisp === null) return;\n      this.swapdirection = newswapdirection;\n      if (ifacedbglevel > 0) console.log('iface.setswapdisp - swapdirection: ', this.swapdirection);\n      this.elemswapdisp.dispatchEvent(this.eventswapdisp);\n    } catch (error) {\n      this.swapdirection = 0;\n      if (ifacedbglevel > 1) console.log('iface.setswapdisp - state machine error', error);\n      return;\n    }\n  },\n  getswapdisp: function getswapdisp() {\n    return this.swapdirection;\n  },\n  eventluminsty: null,\n  elemluminsty: null,\n  luminsty: '',\n  regeventluminsty: function regeventluminsty(newelem, newevent) {\n    this.elemluminsty = newelem;\n    this.eventluminsty = newevent;\n  },\n  setluminsty: function setluminsty(newluminsty) {\n    this.luminsty = newluminsty;\n    if (this.eventluminsty === null || this.elemluminsty === null) return;\n    this.elemluminsty.dispatchEvent(this.eventluminsty);\n  },\n  getluminsty: function getluminsty() {\n    if (this.luminsty === null || this.luminsty === '') return '';\n    return this.luminsty;\n  },\n  eventclosing: null,\n  elemclosing: null,\n  regeventclosing: function regeventclosing(newelem, newevent) {\n    this.elemclosing = newelem;\n    this.eventclosing = newevent;\n  },\n  setclosing: function setclosing() {\n    try {\n      if (this.eventclosing === null || this.elemclosing === null) return;\n      if (ifacedbglevel > 0) console.log('iface.setclosing - closingpath: ', this.closingpath);\n      this.elemclosing.dispatchEvent(this.eventclosing);\n    } catch (error) {\n      if (ifacedbglevel > 1) console.log('iface.setclosing - state machine error', error);\n      return;\n    }\n  },\n  graphwizdot: '',\n  setgraphwizdot: function setgraphwizdot(newgraphwizdot) {\n    this.graphwizdot = newgraphwizdot;\n  },\n  getgraphwizdot: function getgraphwizdot() {\n    if (this.graphwizdot === null || this.graphwizdot === '') return 'not.available';\n    return this.graphwizdot;\n  },\n  setFlag: function setFlag(elemid, request) {\n    if (ifacedbglevel > 1) console.log('setFlag() elemid: ', elemid, ' request: ', request);\n    var el = document.getElementById(elemid);\n    var htmlCandidate = 'instrujs:' + request + '!';\n    var htmlObj = Sanitizer.createSafeHTML(htmlCandidate);\n    el.innerHTML = Sanitizer.unwrapSafeHTML(htmlObj);\n    var doc = window.document;\n    var sel;\n    var range;\n\n    if (window.getSelection && doc.createRange) {\n      sel = window.getSelection();\n      range = doc.createRange();\n      range.selectNodeContents(el);\n      sel.removeAllRanges();\n      sel.addRange(range);\n    } else if (doc.body.createTextRange) {\n      range = doc.body.createTextRange();\n      range.moveToElementText(el);\n      range.select();\n    }\n  },\n  clearFlag: function clearFlag(elemid) {\n    if (ifacedbglevel > 1) console.log('clearFlag(): elemid content before clean: ', elemid.innerHTML);\n\n    if (window.getSelection) {\n      window.getSelection().removeAllRanges();\n    } else if (document.selection) {\n      document.selection.empty();\n    }\n\n    elemid.innerHTML = '';\n  },\n  clearFlagById: function clearFlagById(id) {\n    var el = document.getElementById(id);\n    this.clearFlag(el);\n  }\n};\nwindow.iface = iface;\n/*** EXPORTS FROM exports-loader ***/\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = iface;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/exports-loader/index.js?iface!../src/iface.js\n");

/***/ }),

/***/ "./node_modules/javascript-state-machine/lib/state-machine.js":
/*!********************************************************************!*\
  !*** ./node_modules/javascript-state-machine/lib/state-machine.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 5);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(target, sources) {\n  var n, source, key;\n  for(n = 1 ; n < arguments.length ; n++) {\n    source = arguments[n];\n    for(key in source) {\n      if (source.hasOwnProperty(key))\n        target[key] = source[key];\n    }\n  }\n  return target;\n}\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//-------------------------------------------------------------------------------------------------\n\nvar mixin = __webpack_require__(0);\n\n//-------------------------------------------------------------------------------------------------\n\nmodule.exports = {\n\n  build: function(target, config) {\n    var n, max, plugin, plugins = config.plugins;\n    for(n = 0, max = plugins.length ; n < max ; n++) {\n      plugin = plugins[n];\n      if (plugin.methods)\n        mixin(target, plugin.methods);\n      if (plugin.properties)\n        Object.defineProperties(target, plugin.properties);\n    }\n  },\n\n  hook: function(fsm, name, additional) {\n    var n, max, method, plugin,\n        plugins = fsm.config.plugins,\n        args    = [fsm.context];\n\n    if (additional)\n      args = args.concat(additional)\n\n    for(n = 0, max = plugins.length ; n < max ; n++) {\n      plugin = plugins[n]\n      method = plugins[n][name]\n      if (method)\n        method.apply(plugin, args);\n    }\n  }\n\n}\n\n//-------------------------------------------------------------------------------------------------\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//-------------------------------------------------------------------------------------------------\n\nfunction camelize(label) {\n\n  if (label.length === 0)\n    return label;\n\n  var n, result, word, words = label.split(/[_-]/);\n\n  // single word with first character already lowercase, return untouched\n  if ((words.length === 1) && (words[0][0].toLowerCase() === words[0][0]))\n    return label;\n\n  result = words[0].toLowerCase();\n  for(n = 1 ; n < words.length ; n++) {\n    result = result + words[n].charAt(0).toUpperCase() + words[n].substring(1).toLowerCase();\n  }\n\n  return result;\n}\n\n//-------------------------------------------------------------------------------------------------\n\ncamelize.prepended = function(prepend, label) {\n  label = camelize(label);\n  return prepend + label[0].toUpperCase() + label.substring(1);\n}\n\n//-------------------------------------------------------------------------------------------------\n\nmodule.exports = camelize;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//-------------------------------------------------------------------------------------------------\n\nvar mixin    = __webpack_require__(0),\n    camelize = __webpack_require__(2);\n\n//-------------------------------------------------------------------------------------------------\n\nfunction Config(options, StateMachine) {\n\n  options = options || {};\n\n  this.options     = options; // preserving original options can be useful (e.g visualize plugin)\n  this.defaults    = StateMachine.defaults;\n  this.states      = [];\n  this.transitions = [];\n  this.map         = {};\n  this.lifecycle   = this.configureLifecycle();\n  this.init        = this.configureInitTransition(options.init);\n  this.data        = this.configureData(options.data);\n  this.methods     = this.configureMethods(options.methods);\n\n  this.map[this.defaults.wildcard] = {};\n\n  this.configureTransitions(options.transitions || []);\n\n  this.plugins = this.configurePlugins(options.plugins, StateMachine.plugin);\n\n}\n\n//-------------------------------------------------------------------------------------------------\n\nmixin(Config.prototype, {\n\n  addState: function(name) {\n    if (!this.map[name]) {\n      this.states.push(name);\n      this.addStateLifecycleNames(name);\n      this.map[name] = {};\n    }\n  },\n\n  addStateLifecycleNames: function(name) {\n    this.lifecycle.onEnter[name] = camelize.prepended('onEnter', name);\n    this.lifecycle.onLeave[name] = camelize.prepended('onLeave', name);\n    this.lifecycle.on[name]      = camelize.prepended('on',      name);\n  },\n\n  addTransition: function(name) {\n    if (this.transitions.indexOf(name) < 0) {\n      this.transitions.push(name);\n      this.addTransitionLifecycleNames(name);\n    }\n  },\n\n  addTransitionLifecycleNames: function(name) {\n    this.lifecycle.onBefore[name] = camelize.prepended('onBefore', name);\n    this.lifecycle.onAfter[name]  = camelize.prepended('onAfter',  name);\n    this.lifecycle.on[name]       = camelize.prepended('on',       name);\n  },\n\n  mapTransition: function(transition) {\n    var name = transition.name,\n        from = transition.from,\n        to   = transition.to;\n    this.addState(from);\n    if (typeof to !== 'function')\n      this.addState(to);\n    this.addTransition(name);\n    this.map[from][name] = transition;\n    return transition;\n  },\n\n  configureLifecycle: function() {\n    return {\n      onBefore: { transition: 'onBeforeTransition' },\n      onAfter:  { transition: 'onAfterTransition'  },\n      onEnter:  { state:      'onEnterState'       },\n      onLeave:  { state:      'onLeaveState'       },\n      on:       { transition: 'onTransition'       }\n    };\n  },\n\n  configureInitTransition: function(init) {\n    if (typeof init === 'string') {\n      return this.mapTransition(mixin({}, this.defaults.init, { to: init, active: true }));\n    }\n    else if (typeof init === 'object') {\n      return this.mapTransition(mixin({}, this.defaults.init, init, { active: true }));\n    }\n    else {\n      this.addState(this.defaults.init.from);\n      return this.defaults.init;\n    }\n  },\n\n  configureData: function(data) {\n    if (typeof data === 'function')\n      return data;\n    else if (typeof data === 'object')\n      return function() { return data; }\n    else\n      return function() { return {};  }\n  },\n\n  configureMethods: function(methods) {\n    return methods || {};\n  },\n\n  configurePlugins: function(plugins, builtin) {\n    plugins = plugins || [];\n    var n, max, plugin;\n    for(n = 0, max = plugins.length ; n < max ; n++) {\n      plugin = plugins[n];\n      if (typeof plugin === 'function')\n        plugins[n] = plugin = plugin()\n      if (plugin.configure)\n        plugin.configure(this);\n    }\n    return plugins\n  },\n\n  configureTransitions: function(transitions) {\n    var i, n, transition, from, to, wildcard = this.defaults.wildcard;\n    for(n = 0 ; n < transitions.length ; n++) {\n      transition = transitions[n];\n      from  = Array.isArray(transition.from) ? transition.from : [transition.from || wildcard]\n      to    = transition.to || wildcard;\n      for(i = 0 ; i < from.length ; i++) {\n        this.mapTransition({ name: transition.name, from: from[i], to: to });\n      }\n    }\n  },\n\n  transitionFor: function(state, transition) {\n    var wildcard = this.defaults.wildcard;\n    return this.map[state][transition] ||\n           this.map[wildcard][transition];\n  },\n\n  transitionsFor: function(state) {\n    var wildcard = this.defaults.wildcard;\n    return Object.keys(this.map[state]).concat(Object.keys(this.map[wildcard]));\n  },\n\n  allStates: function() {\n    return this.states;\n  },\n\n  allTransitions: function() {\n    return this.transitions;\n  }\n\n});\n\n//-------------------------------------------------------------------------------------------------\n\nmodule.exports = Config;\n\n//-------------------------------------------------------------------------------------------------\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\nvar mixin      = __webpack_require__(0),\n    Exception  = __webpack_require__(6),\n    plugin     = __webpack_require__(1),\n    UNOBSERVED = [ null, [] ];\n\n//-------------------------------------------------------------------------------------------------\n\nfunction JSM(context, config) {\n  this.context   = context;\n  this.config    = config;\n  this.state     = config.init.from;\n  this.observers = [context];\n}\n\n//-------------------------------------------------------------------------------------------------\n\nmixin(JSM.prototype, {\n\n  init: function(args) {\n    mixin(this.context, this.config.data.apply(this.context, args));\n    plugin.hook(this, 'init');\n    if (this.config.init.active)\n      return this.fire(this.config.init.name, []);\n  },\n\n  is: function(state) {\n    return Array.isArray(state) ? (state.indexOf(this.state) >= 0) : (this.state === state);\n  },\n\n  isPending: function() {\n    return this.pending;\n  },\n\n  can: function(transition) {\n    return !this.isPending() && !!this.seek(transition);\n  },\n\n  cannot: function(transition) {\n    return !this.can(transition);\n  },\n\n  allStates: function() {\n    return this.config.allStates();\n  },\n\n  allTransitions: function() {\n    return this.config.allTransitions();\n  },\n\n  transitions: function() {\n    return this.config.transitionsFor(this.state);\n  },\n\n  seek: function(transition, args) {\n    var wildcard = this.config.defaults.wildcard,\n        entry    = this.config.transitionFor(this.state, transition),\n        to       = entry && entry.to;\n    if (typeof to === 'function')\n      return to.apply(this.context, args);\n    else if (to === wildcard)\n      return this.state\n    else\n      return to\n  },\n\n  fire: function(transition, args) {\n    return this.transit(transition, this.state, this.seek(transition, args), args);\n  },\n\n  transit: function(transition, from, to, args) {\n\n    var lifecycle = this.config.lifecycle,\n        changed   = this.config.options.observeUnchangedState || (from !== to);\n\n    if (!to)\n      return this.context.onInvalidTransition(transition, from, to);\n\n    if (this.isPending())\n      return this.context.onPendingTransition(transition, from, to);\n\n    this.config.addState(to);  // might need to add this state if it's unknown (e.g. conditional transition or goto)\n\n    this.beginTransit();\n\n    args.unshift({             // this context will be passed to each lifecycle event observer\n      transition: transition,\n      from:       from,\n      to:         to,\n      fsm:        this.context\n    });\n\n    return this.observeEvents([\n                this.observersForEvent(lifecycle.onBefore.transition),\n                this.observersForEvent(lifecycle.onBefore[transition]),\n      changed ? this.observersForEvent(lifecycle.onLeave.state) : UNOBSERVED,\n      changed ? this.observersForEvent(lifecycle.onLeave[from]) : UNOBSERVED,\n                this.observersForEvent(lifecycle.on.transition),\n      changed ? [ 'doTransit', [ this ] ]                       : UNOBSERVED,\n      changed ? this.observersForEvent(lifecycle.onEnter.state) : UNOBSERVED,\n      changed ? this.observersForEvent(lifecycle.onEnter[to])   : UNOBSERVED,\n      changed ? this.observersForEvent(lifecycle.on[to])        : UNOBSERVED,\n                this.observersForEvent(lifecycle.onAfter.transition),\n                this.observersForEvent(lifecycle.onAfter[transition]),\n                this.observersForEvent(lifecycle.on[transition])\n    ], args);\n  },\n\n  beginTransit: function()          { this.pending = true;                 },\n  endTransit:   function(result)    { this.pending = false; return result; },\n  failTransit:  function(result)    { this.pending = false; throw result;  },\n  doTransit:    function(lifecycle) { this.state = lifecycle.to;           },\n\n  observe: function(args) {\n    if (args.length === 2) {\n      var observer = {};\n      observer[args[0]] = args[1];\n      this.observers.push(observer);\n    }\n    else {\n      this.observers.push(args[0]);\n    }\n  },\n\n  observersForEvent: function(event) { // TODO: this could be cached\n    var n = 0, max = this.observers.length, observer, result = [];\n    for( ; n < max ; n++) {\n      observer = this.observers[n];\n      if (observer[event])\n        result.push(observer);\n    }\n    return [ event, result, true ]\n  },\n\n  observeEvents: function(events, args, previousEvent, previousResult) {\n    if (events.length === 0) {\n      return this.endTransit(previousResult === undefined ? true : previousResult);\n    }\n\n    var event     = events[0][0],\n        observers = events[0][1],\n        pluggable = events[0][2];\n\n    args[0].event = event;\n    if (event && pluggable && event !== previousEvent)\n      plugin.hook(this, 'lifecycle', args);\n\n    if (observers.length === 0) {\n      events.shift();\n      return this.observeEvents(events, args, event, previousResult);\n    }\n    else {\n      var observer = observers.shift(),\n          result = observer[event].apply(observer, args);\n      if (result && typeof result.then === 'function') {\n        return result.then(this.observeEvents.bind(this, events, args, event))\n                     .catch(this.failTransit.bind(this))\n      }\n      else if (result === false) {\n        return this.endTransit(false);\n      }\n      else {\n        return this.observeEvents(events, args, event, result);\n      }\n    }\n  },\n\n  onInvalidTransition: function(transition, from, to) {\n    throw new Exception(\"transition is invalid in current state\", transition, from, to, this.state);\n  },\n\n  onPendingTransition: function(transition, from, to) {\n    throw new Exception(\"transition is invalid while previous transition is still in progress\", transition, from, to, this.state);\n  }\n\n});\n\n//-------------------------------------------------------------------------------------------------\n\nmodule.exports = JSM;\n\n//-------------------------------------------------------------------------------------------------\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//-----------------------------------------------------------------------------------------------\n\nvar mixin    = __webpack_require__(0),\n    camelize = __webpack_require__(2),\n    plugin   = __webpack_require__(1),\n    Config   = __webpack_require__(3),\n    JSM      = __webpack_require__(4);\n\n//-----------------------------------------------------------------------------------------------\n\nvar PublicMethods = {\n  is:                  function(state)       { return this._fsm.is(state)                                     },\n  can:                 function(transition)  { return this._fsm.can(transition)                               },\n  cannot:              function(transition)  { return this._fsm.cannot(transition)                            },\n  observe:             function()            { return this._fsm.observe(arguments)                            },\n  transitions:         function()            { return this._fsm.transitions()                                 },\n  allTransitions:      function()            { return this._fsm.allTransitions()                              },\n  allStates:           function()            { return this._fsm.allStates()                                   },\n  onInvalidTransition: function(t, from, to) { return this._fsm.onInvalidTransition(t, from, to)              },\n  onPendingTransition: function(t, from, to) { return this._fsm.onPendingTransition(t, from, to)              },\n}\n\nvar PublicProperties = {\n  state: {\n    configurable: false,\n    enumerable:   true,\n    get: function() {\n      return this._fsm.state;\n    },\n    set: function(state) {\n      throw Error('use transitions to change state')\n    }\n  }\n}\n\n//-----------------------------------------------------------------------------------------------\n\nfunction StateMachine(options) {\n  return apply(this || {}, options);\n}\n\nfunction factory() {\n  var cstor, options;\n  if (typeof arguments[0] === 'function') {\n    cstor   = arguments[0];\n    options = arguments[1] || {};\n  }\n  else {\n    cstor   = function() { this._fsm.apply(this, arguments) };\n    options = arguments[0] || {};\n  }\n  var config = new Config(options, StateMachine);\n  build(cstor.prototype, config);\n  cstor.prototype._fsm.config = config; // convenience access to shared config without needing an instance\n  return cstor;\n}\n\n//-------------------------------------------------------------------------------------------------\n\nfunction apply(instance, options) {\n  var config = new Config(options, StateMachine);\n  build(instance, config);\n  instance._fsm();\n  return instance;\n}\n\nfunction build(target, config) {\n  if ((typeof target !== 'object') || Array.isArray(target))\n    throw Error('StateMachine can only be applied to objects');\n  plugin.build(target, config);\n  Object.defineProperties(target, PublicProperties);\n  mixin(target, PublicMethods);\n  mixin(target, config.methods);\n  config.allTransitions().forEach(function(transition) {\n    target[camelize(transition)] = function() {\n      return this._fsm.fire(transition, [].slice.call(arguments))\n    }\n  });\n  target._fsm = function() {\n    this._fsm = new JSM(this, config);\n    this._fsm.init(arguments);\n  }\n}\n\n//-----------------------------------------------------------------------------------------------\n\nStateMachine.version  = '3.0.1';\nStateMachine.factory  = factory;\nStateMachine.apply    = apply;\nStateMachine.defaults = {\n  wildcard: '*',\n  init: {\n    name: 'init',\n    from: 'none'\n  }\n}\n\n//===============================================================================================\n\nmodule.exports = StateMachine;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function(message, transition, from, to, current) {\n  this.message    = message;\n  this.transition = transition;\n  this.from       = from;\n  this.to         = to;\n  this.current    = current;\n}\n\n\n/***/ })\n/******/ ]);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/javascript-state-machine/lib/state-machine.js\n");

/***/ }),

/***/ "./node_modules/justgage/index.js":
/*!****************************************!*\
  !*** ./node_modules/justgage/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("//this file is to export the module\n\n  module.exports = __webpack_require__(/*! ./justgage.js */ \"./node_modules/justgage/justgage.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvanVzdGdhZ2UvaW5kZXguanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvanVzdGdhZ2UvaW5kZXguanM/M2RiMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvL3RoaXMgZmlsZSBpcyB0byBleHBvcnQgdGhlIG1vZHVsZVxuXG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4vanVzdGdhZ2UuanNcIik7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTsiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/justgage/index.js\n");

/***/ }),

/***/ "./node_modules/justgage/justgage.js":
/*!*******************************************!*\
  !*** ./node_modules/justgage/justgage.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n * JustGage - Animated gauges using RaphaelJS\n * Check http://www.justgage.com for official releases\n * Licensed under MIT.\n * @author Bojan Djuricic (@Toorshia)\n **/\n\n(function (root, factory) {\n  if (true) {\n    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! raphael */ \"./node_modules/raphael/raphael.min.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (raphael) { // AMD\n      return (root.JustGage = factory(raphael));\n    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else {}\n}(this, function (Raphael) {\n\n  var JustGage = function (config) {\n\n    var obj = this\n\n    obj.events = {}\n\n    // Helps in case developer wants to debug it. unobtrusive\n    if (isUndefined(config)) {\n      console.log('* justgage: Make sure to pass options to the constructor!');\n      return false;\n    }\n\n    if (!isUndefined(config.id)) {\n      obj.node = document.getElementById(config.id);\n      if (!obj.node) {\n        console.log('* justgage: No element with id : %s found', config.id);\n        return false;\n      }\n    } else if (!isUndefined(config.parentNode)) {\n      obj.node = config.parentNode;\n    } else {\n      console.log('* justgage: Make sure to pass the existing element id or parentNode to the constructor.');\n      return false;\n    }\n\n    var dataset = obj.node.dataset ? obj.node.dataset : {};\n\n    // check for defaults\n    var defaults = !isUndefined(config.defaults) ? config.defaults : false;\n    if (defaults !== false) {\n      config = extend({}, config, defaults);\n      delete config.defaults;\n    }\n\n    // configurable parameters\n    obj.config = {\n      // id : string\n      // this is container element id\n      id: config.id,\n\n      // value : float\n      // value gauge is showing\n      value: kvLookup('value', config, dataset, 0, 'float'),\n\n      // defaults : bool\n      // defaults parameter to use\n      defaults: kvLookup('defaults', config, dataset, 0, false),\n\n      // parentNode : node object\n      // this is container element\n      parentNode: kvLookup('parentNode', config, dataset, null),\n\n      // width : int\n      // gauge width\n      width: kvLookup('width', config, dataset, null),\n\n      // height : int\n      // gauge height\n      height: kvLookup('height', config, dataset, null),\n\n      // valueFontColor : string\n      // color of label showing current value\n      valueFontColor: kvLookup('valueFontColor', config, dataset, \"#010101\"),\n\n      // valueFontFamily : string\n      // color of label showing current value\n      valueFontFamily: kvLookup('valueFontFamily', config, dataset, \"Arial\"),\n\n      // symbol : string\n      // special symbol to show next to value\n      symbol: kvLookup('symbol', config, dataset, ''),\n\n      // min : float\n      // min value\n      min: kvLookup('min', config, dataset, 0, 'float'),\n\n      // minTxt : string\n      // min value text\n      minTxt: kvLookup('minTxt', config, dataset, false),\n\n      // max : float\n      // max value\n      max: kvLookup('max', config, dataset, 100, 'float'),\n\n      // maxTxt : string\n      // max value text\n      maxTxt: kvLookup('maxTxt', config, dataset, false),\n\n      // reverse : bool\n      // reverse min and max\n      reverse: kvLookup('reverse', config, dataset, false),\n\n      // humanFriendlyDecimal : int\n      // number of decimal places for our human friendly number to contain\n      humanFriendlyDecimal: kvLookup('humanFriendlyDecimal', config, dataset, 0),\n\n\n      // textRenderer: func\n      // function applied before rendering text\n      textRenderer: kvLookup('textRenderer', config, dataset, null),\n\n      // onAnimationEnd: func\n      // function applied after animation is done\n      onAnimationEnd: kvLookup('onAnimationEnd', config, dataset, null),\n\n      // gaugeWidthScale : float\n      // width of the gauge element\n      gaugeWidthScale: kvLookup('gaugeWidthScale', config, dataset, 1.0),\n\n      // gaugeColor : string\n      // background color of gauge element\n      gaugeColor: kvLookup('gaugeColor', config, dataset, \"#edebeb\"),\n\n      // label : string\n      // text to show below value\n      label: kvLookup('label', config, dataset, ''),\n\n      // labelFontColor : string\n      // color of label showing label under value\n      labelFontColor: kvLookup('labelFontColor', config, dataset, \"#b3b3b3\"),\n\n      // shadowOpacity : int\n      // 0 ~ 1\n      shadowOpacity: kvLookup('shadowOpacity', config, dataset, 0.2),\n\n      // shadowSize: int\n      // inner shadow size\n      shadowSize: kvLookup('shadowSize', config, dataset, 5),\n\n      // shadowVerticalOffset : int\n      // how much shadow is offset from top\n      shadowVerticalOffset: kvLookup('shadowVerticalOffset', config, dataset, 3),\n\n      // levelColors : string[]\n      // colors of indicator, from lower to upper, in RGB format\n      levelColors: kvLookup('levelColors', config, dataset, [\"#a9d70b\", \"#f9c802\", \"#ff0000\"], 'array', ','),\n\n      // startAnimationTime : int\n      // length of initial animation\n      startAnimationTime: kvLookup('startAnimationTime', config, dataset, 700),\n\n      // startAnimationType : string\n      // type of initial animation (linear, >, <,  <>, bounce)\n      startAnimationType: kvLookup('startAnimationType', config, dataset, '>'),\n\n      // refreshAnimationTime : int\n      // length of refresh animation\n      refreshAnimationTime: kvLookup('refreshAnimationTime', config, dataset, 700),\n\n      // refreshAnimationType : string\n      // type of refresh animation (linear, >, <,  <>, bounce)\n      refreshAnimationType: kvLookup('refreshAnimationType', config, dataset, '>'),\n\n      // donutStartAngle : int\n      // angle to start from when in donut mode\n      donutStartAngle: kvLookup('donutStartAngle', config, dataset, 90),\n\n      // valueMinFontSize : int\n      // absolute minimum font size for the value\n      valueMinFontSize: kvLookup('valueMinFontSize', config, dataset, 16),\n\n      // labelMinFontSize\n      // absolute minimum font size for the label\n      labelMinFontSize: kvLookup('labelMinFontSize', config, dataset, 10),\n\n      // minLabelMinFontSize\n      // absolute minimum font size for the minimum label\n      minLabelMinFontSize: kvLookup('minLabelMinFontSize', config, dataset, 10),\n\n      // maxLabelMinFontSize\n      // absolute minimum font size for the maximum label\n      maxLabelMinFontSize: kvLookup('maxLabelMinFontSize', config, dataset, 10),\n\n      // hideValue : bool\n      // hide value text\n      hideValue: kvLookup('hideValue', config, dataset, false),\n\n      // hideMinMax : bool\n      // hide min and max values\n      hideMinMax: kvLookup('hideMinMax', config, dataset, false),\n\n      // showInnerShadow : bool\n      // show inner shadow\n      showInnerShadow: kvLookup('showInnerShadow', config, dataset, false),\n\n      // humanFriendly : bool\n      // convert large numbers for min, max, value to human friendly (e.g. 1234567 -> 1.23M)\n      humanFriendly: kvLookup('humanFriendly', config, dataset, false),\n\n      // noGradient : bool\n      // whether to use gradual color change for value, or sector-based\n      noGradient: kvLookup('noGradient', config, dataset, false),\n\n      // donut : bool\n      // show full donut gauge\n      donut: kvLookup('donut', config, dataset, false),\n\n      // relativeGaugeSize : bool\n      // whether gauge size should follow changes in container element size\n      relativeGaugeSize: kvLookup('relativeGaugeSize', config, dataset, false),\n\n      // counter : bool\n      // animate level number change\n      counter: kvLookup('counter', config, dataset, false),\n\n      // decimals : int\n      // number of digits after floating point\n      decimals: kvLookup('decimals', config, dataset, 0),\n\n      // customSectors : object\n      // custom sectors colors. Expects an object with props\n      // percents : bool hi/lo are percents values\n      // ranges : array of objects : {hi, lo, color}\n      customSectors: kvLookup('customSectors', config, dataset, {}),\n\n      // formatNumber: boolean\n      // formats numbers with commas where appropriate\n      formatNumber: kvLookup('formatNumber', config, dataset, false),\n\n      // pointer : bool\n      // show value pointer\n      pointer: kvLookup('pointer', config, dataset, false),\n\n      // pointerOptions : object\n      // define pointer look\n      pointerOptions: kvLookup('pointerOptions', config, dataset, {}),\n\n      // displayRemaining: boolean\n      // replace display number with the number remaining to reach max\n      displayRemaining: kvLookup('displayRemaining', config, dataset, false)\n    };\n\n    // variables\n    var\n      canvasW,\n      canvasH,\n      widgetW,\n      widgetH,\n      aspect,\n      dx,\n      dy,\n      valueFontSize,\n      valueX,\n      valueY,\n      labelFontSize,\n      labelX,\n      labelY,\n      minFontSize,\n      minX,\n      minY,\n      maxFontSize,\n      maxX,\n      maxY;\n\n    // overflow values\n    if (obj.config.value > obj.config.max) obj.config.value = obj.config.max;\n    if (obj.config.value < obj.config.min) obj.config.value = obj.config.min;\n    obj.originalValue = kvLookup('value', config, dataset, -1, 'float');\n\n    // create canvas\n    if (obj.config.id !== null && (document.getElementById(obj.config.id)) !== null) {\n      obj.canvas = Raphael(obj.config.id, \"100%\", \"100%\");\n    } else if (obj.config.parentNode !== null) {\n      obj.canvas = Raphael(obj.config.parentNode, \"100%\", \"100%\");\n    }\n\n    // canvas dimensions\n    if (obj.config.relativeGaugeSize === true) {\n      if (obj.config.donut === true) {\n        obj.canvas.setViewBox(0, 0, 200, 200, true);\n        canvasW = 200;\n        canvasH = 200;\n      } else {\n        obj.canvas.setViewBox(0, 0, 200, 100, true);\n        canvasW = 200;\n        canvasH = 100;\n      }\n    } else if (obj.config.width !== null && obj.config.height !== null) {\n      canvasW = obj.config.width;\n      canvasH = obj.config.height;\n    } else if (obj.config.parentNode !== null) {\n      obj.canvas.setViewBox(0, 0, 200, 100, true);\n      canvasW = 200;\n      canvasH = 100;\n    } else {\n      canvasW = getStyle(document.getElementById(obj.config.id), \"width\").slice(0, -2) * 1;\n      canvasH = getStyle(document.getElementById(obj.config.id), \"height\").slice(0, -2) * 1;\n    }\n\n    // widget dimensions\n    if (obj.config.donut === true) {\n      if (canvasW > canvasH) { // landscape\n        widgetH = canvasH;\n        widgetW = widgetH;\n        // width less than height\n      } else if (canvasW < canvasH) { // portrait\n        widgetW = canvasW;\n        widgetH = widgetW;\n      } else { // square\n        widgetW = canvasW;\n        widgetH = widgetW;\n      }\n\n      // delta\n      dx = (canvasW - widgetW) / 2;\n      dy = (canvasH - widgetH) / 2;\n\n      // value\n      valueFontSize = ((widgetH / 6.4) > 16) ? (widgetH / 5.4) : 18;\n      valueX = dx + widgetW / 2;\n      if (obj.config.label !== '') {\n        valueY = dy + widgetH / 1.85;\n      } else {\n        valueY = dy + widgetH / 1.7;\n      }\n\n      // label\n      labelFontSize = ((widgetH / 16) > 10) ? (widgetH / 16) : 10;\n      labelX = dx + widgetW / 2;\n      labelY = valueY + labelFontSize;\n\n      // min\n      minFontSize = ((widgetH / 16) > 10) ? (widgetH / 16) : 10;\n      minX = dx + (widgetW / 10) + (widgetW / 6.666666666666667 * obj.config.gaugeWidthScale) / 2;\n      minY = labelY;\n\n      // max\n      maxFontSize = ((widgetH / 16) > 10) ? (widgetH / 16) : 10;\n      maxX = dx + widgetW - (widgetW / 10) - (widgetW / 6.666666666666667 * obj.config.gaugeWidthScale) / 2;\n      maxY = labelY;\n    } else {\n      if (canvasW > canvasH) { // landscape\n        widgetH = canvasH;\n        widgetW = widgetH * 2;\n        if (widgetW > canvasW) { //if width doesn't fit, rescale both\n          aspect = widgetW / canvasW;\n          widgetW = widgetW / aspect;\n          widgetH = widgetH / aspect;\n        }\n      } else if (canvasW < canvasH) { // portrait\n        widgetW = canvasW;\n        widgetH = widgetW / 2;\n      } else { // square\n        widgetW = canvasW;\n        widgetH = widgetW * 0.5;\n      }\n\n      // delta\n      dx = (canvasW - widgetW) / 2;\n      dy = (canvasH - widgetH) / 2;\n\n      // value\n      valueFontSize = ((widgetH / 6.5) > obj.config.valueMinFontSize) ? (widgetH / 6.5) : obj.config.valueMinFontSize;\n      valueX = dx + widgetW / 2;\n      valueY = dy + widgetH / 1.275;\n\n      // label\n      labelFontSize = ((widgetH / 16) > obj.config.labelMinFontSize) ? (widgetH / 16) : obj.config.labelMinFontSize;\n      labelX = dx + widgetW / 2;\n      labelY = valueY + valueFontSize / 2 + 5;\n\n      // min\n      minFontSize = ((widgetH / 16) > obj.config.minLabelMinFontSize) ? (widgetH / 16) : obj.config.minLabelMinFontSize;\n      minX = dx + (widgetW / 10) + (widgetW / 6.666666666666667 * obj.config.gaugeWidthScale) / 2;\n      minY = labelY;\n\n      // max\n      maxFontSize = ((widgetH / 16) > obj.config.maxLabelMinFontSize) ? (widgetH / 16) : obj.config.maxLabelMinFontSize;\n      maxX = dx + widgetW - (widgetW / 10) - (widgetW / 6.666666666666667 * obj.config.gaugeWidthScale) / 2;\n      maxY = labelY;\n    }\n\n    // parameters\n    obj.params = {\n      canvasW: canvasW,\n      canvasH: canvasH,\n      widgetW: widgetW,\n      widgetH: widgetH,\n      dx: dx,\n      dy: dy,\n      valueFontSize: valueFontSize,\n      valueX: valueX,\n      valueY: valueY,\n      labelFontSize: labelFontSize,\n      labelX: labelX,\n      labelY: labelY,\n      minFontSize: minFontSize,\n      minX: minX,\n      minY: minY,\n      maxFontSize: maxFontSize,\n      maxX: maxX,\n      maxY: maxY\n    };\n\n    // var clear\n    canvasW, canvasH, widgetW, widgetH, aspect, dx, dy, valueFontSize, valueX, valueY, labelFontSize, labelX, labelY, minFontSize, minX, minY, maxFontSize, maxX, maxY = null;\n\n    // pki - custom attribute for generating gauge paths\n    obj.canvas.customAttributes.pki = function (value, min, max, w, h, dx, dy, gws, donut, reverse) {\n\n      var alpha, Ro, Ri, Cx, Cy, Xo, Yo, Xi, Yi, path;\n\n      if (min < 0) {\n        max -= min;\n        value -= min;\n        min = 0;\n      }\n\n      if (donut) {\n        alpha = (1 - 2 * (value - min) / (max - min)) * Math.PI;\n        Ro = w / 2 - w / 30;\n        Ri = Ro - w / 6.666666666666667 * gws;\n\n        Cx = w / 2 + dx;\n        Cy = h / 2 + dy;\n\n        Xo = Cx + Ro * Math.cos(alpha);\n        Yo = Cy - Ro * Math.sin(alpha);\n        Xi = Cx + Ri * Math.cos(alpha);\n        Yi = Cy - Ri * Math.sin(alpha);\n\n        path = \"M\" + (Cx - Ri) + \",\" + Cy + \" \";\n        path += \"L\" + (Cx - Ro) + \",\" + Cy + \" \";\n        if (value - min > ((max - min) / 2)) {\n          path += \"A\" + Ro + \",\" + Ro + \" 0 0 1 \" + (Cx + Ro) + \",\" + Cy + \" \";\n        }\n        path += \"A\" + Ro + \",\" + Ro + \" 0 0 1 \" + Xo + \",\" + Yo + \" \";\n        path += \"L\" + Xi + \",\" + Yi + \" \";\n        if (value - min > ((max - min) / 2)) {\n          path += \"A\" + Ri + \",\" + Ri + \" 0 0 0 \" + (Cx + Ri) + \",\" + Cy + \" \";\n        }\n        path += \"A\" + Ri + \",\" + Ri + \" 0 0 0 \" + (Cx - Ri) + \",\" + Cy + \" \";\n        path += \"Z \";\n\n        return {\n          path: path\n        };\n      } else {\n        alpha = (1 - (value - min) / (max - min)) * Math.PI;\n        Ro = w / 2 - w / 10;\n        Ri = Ro - w / 6.666666666666667 * gws;\n\n        Cx = w / 2 + dx;\n        Cy = h / 1.25 + dy;\n\n        // Xo = w / 2 + dx + Ro * Math.cos(alpha);\n        // Yo = h - (h - Cy) - Ro * Math.sin(alpha);\n        // Xi = w / 2 + dx + Ri * Math.cos(alpha);\n        // Yi = h - (h - Cy) - Ri * Math.sin(alpha);\n\n        Xo = Cx + Ro * Math.cos(alpha);\n        Yo = Cy - Ro * Math.sin(alpha);\n        Xi = Cx + Ri * Math.cos(alpha);\n        Yi = Cy - Ri * Math.sin(alpha);\n\n        path = \"M\" + (Cx - Ri) + \",\" + Cy + \" \";\n        path += \"L\" + (Cx - Ro) + \",\" + Cy + \" \";\n        path += \"A\" + Ro + \",\" + Ro + \" 0 0 1 \" + Xo + \",\" + Yo + \" \";\n        path += \"L\" + Xi + \",\" + Yi + \" \";\n        path += \"A\" + Ri + \",\" + Ri + \" 0 0 0 \" + (Cx - Ri) + \",\" + Cy + \" \";\n        path += \"Z \";\n\n        return {\n          path: path\n        };\n      }\n\n      // var clear\n      alpha, Ro, Ri, Cx, Cy, Xo, Yo, Xi, Yi, path = null;\n    };\n\n    // ndl - custom attribute for generating needle path\n    obj.canvas.customAttributes.ndl = function (value, min, max, w, h, dx, dy, gws, donut) {\n\n      var dlt = w * 3.5 / 100;\n      var dlb = w / 15;\n      var dw = w / 100;\n\n      if (obj.config.pointerOptions.toplength != null && obj.config.pointerOptions.toplength != undefined) dlt = obj.config.pointerOptions.toplength;\n      if (obj.config.pointerOptions.bottomlength != null && obj.config.pointerOptions.bottomlength != undefined) dlb = obj.config.pointerOptions.bottomlength;\n      if (obj.config.pointerOptions.bottomwidth != null && obj.config.pointerOptions.bottomwidth != undefined) dw = obj.config.pointerOptions.bottomwidth;\n\n      var alpha, Ro, Ri, Cx, Cy, Xo, Yo, Xi, Yi, Xc, Yc, Xz, Yz, Xa, Ya, Xb, Yb, path;\n\n      if (donut) {\n\n        alpha = (1 - 2 * (value - min) / (max - min)) * Math.PI;\n        Ro = w / 2 - w / 30;\n        Ri = Ro - w / 6.666666666666667 * gws;\n\n        Cx = w / 2 + dx;\n        Cy = h / 2 + dy;\n\n        Xo = w / 2 + dx + Ro * Math.cos(alpha);\n        Yo = h - (h - Cy) - Ro * Math.sin(alpha);\n        Xi = w / 2 + dx + Ri * Math.cos(alpha);\n        Yi = h - (h - Cy) - Ri * Math.sin(alpha);\n\n        Xc = Xo + dlt * Math.cos(alpha);\n        Yc = Yo - dlt * Math.sin(alpha);\n        Xz = Xi - dlb * Math.cos(alpha);\n        Yz = Yi + dlb * Math.sin(alpha);\n\n        Xa = Xz + dw * Math.sin(alpha);\n        Ya = Yz + dw * Math.cos(alpha);\n        Xb = Xz - dw * Math.sin(alpha);\n        Yb = Yz - dw * Math.cos(alpha);\n\n        path = 'M' + Xa + ',' + Ya + ' ';\n        path += 'L' + Xb + ',' + Yb + ' ';\n        path += 'L' + Xc + ',' + Yc + ' ';\n        path += 'Z ';\n\n        return {\n          path: path\n        };\n\n      } else {\n        alpha = (1 - (value - min) / (max - min)) * Math.PI;\n        Ro = w / 2 - w / 10;\n        Ri = Ro - w / 6.666666666666667 * gws;\n\n        Cx = w / 2 + dx;\n        Cy = h / 1.25 + dy;\n\n        Xo = w / 2 + dx + Ro * Math.cos(alpha);\n        Yo = h - (h - Cy) - Ro * Math.sin(alpha);\n        Xi = w / 2 + dx + Ri * Math.cos(alpha);\n        Yi = h - (h - Cy) - Ri * Math.sin(alpha);\n\n        Xc = Xo + dlt * Math.cos(alpha);\n        Yc = Yo - dlt * Math.sin(alpha);\n        Xz = Xi - dlb * Math.cos(alpha);\n        Yz = Yi + dlb * Math.sin(alpha);\n\n        Xa = Xz + dw * Math.sin(alpha);\n        Ya = Yz + dw * Math.cos(alpha);\n        Xb = Xz - dw * Math.sin(alpha);\n        Yb = Yz - dw * Math.cos(alpha);\n\n        path = 'M' + Xa + ',' + Ya + ' ';\n        path += 'L' + Xb + ',' + Yb + ' ';\n        path += 'L' + Xc + ',' + Yc + ' ';\n        path += 'Z ';\n\n        return {\n          path: path\n        };\n      }\n\n      // var clear\n      alpha, Ro, Ri, Cx, Cy, Xo, Yo, Xi, Yi, Xc, Yc, Xz, Yz, Xa, Ya, Xb, Yb, path = null;\n    };\n\n    // gauge\n    obj.gauge = obj.canvas.path().attr({\n      \"stroke\": \"none\",\n      \"fill\": obj.config.gaugeColor,\n      pki: [\n        obj.config.max,\n        obj.config.min,\n        obj.config.max,\n        obj.params.widgetW,\n        obj.params.widgetH,\n        obj.params.dx,\n        obj.params.dy,\n        obj.config.gaugeWidthScale,\n        obj.config.donut,\n        obj.config.reverse\n      ]\n    });\n\n    // level\n    obj.level = obj.canvas.path().attr({\n      \"stroke\": \"none\",\n      \"fill\": getColor(obj.config.value, (obj.config.value - obj.config.min) / (obj.config.max - obj.config.min), obj.config.levelColors, obj.config.noGradient, obj.config.customSectors),\n      pki: [\n        obj.config.min,\n        obj.config.min,\n        obj.config.max,\n        obj.params.widgetW,\n        obj.params.widgetH,\n        obj.params.dx,\n        obj.params.dy,\n        obj.config.gaugeWidthScale,\n        obj.config.donut,\n        obj.config.reverse\n      ]\n    });\n    if (obj.config.donut) {\n      obj.level.transform(\"r\" + obj.config.donutStartAngle + \", \" + (obj.params.widgetW / 2 + obj.params.dx) + \", \" + (obj.params.widgetH / 2 + obj.params.dy));\n    }\n\n    if (obj.config.pointer) {\n      // needle\n      obj.needle = obj.canvas.path().attr({\n        \"stroke\": !isUndefined(obj.config.pointerOptions.stroke) ? obj.config.pointerOptions.stroke : \"none\",\n        \"stroke-width\": !isUndefined(obj.config.pointerOptions.stroke_width) ? obj.config.pointerOptions.stroke_width : 0,\n        \"stroke-linecap\": !isUndefined(obj.config.pointerOptions.stroke_linecap) ? obj.config.pointerOptions.stroke_linecap : \"square\",\n        \"fill\": !isUndefined(obj.config.pointerOptions.color) ? obj.config.pointerOptions.color : \"#000000\",\n        ndl: [\n          obj.config.min,\n          obj.config.min,\n          obj.config.max,\n          obj.params.widgetW,\n          obj.params.widgetH,\n          obj.params.dx,\n          obj.params.dy,\n          obj.config.gaugeWidthScale,\n          obj.config.donut\n        ]\n      });\n\n      if (obj.config.donut) {\n        obj.needle.transform(\"r\" + obj.config.donutStartAngle + \", \" + (obj.params.widgetW / 2 + obj.params.dx) + \", \" + (obj.params.widgetH / 2 + obj.params.dy));\n      }\n    }\n\n    // value\n    obj.txtValue = obj.canvas.text(obj.params.valueX, obj.params.valueY, 0);\n    obj.txtValue.attr({\n      \"font-size\": obj.params.valueFontSize,\n      \"font-weight\": \"bold\",\n      \"font-family\": obj.config.valueFontFamily,\n      \"fill\": obj.config.valueFontColor,\n      \"fill-opacity\": \"0\"\n    });\n    setDy(obj.txtValue, obj.params.valueFontSize, obj.params.valueY);\n\n    // label\n    obj.txtLabel = obj.canvas.text(obj.params.labelX, obj.params.labelY, obj.config.label);\n    obj.txtLabel.attr({\n      \"font-size\": obj.params.labelFontSize,\n      \"font-weight\": \"normal\",\n      \"font-family\": \"Arial\",\n      \"fill\": obj.config.labelFontColor,\n      \"fill-opacity\": \"0\"\n    });\n    setDy(obj.txtLabel, obj.params.labelFontSize, obj.params.labelY);\n\n    // min\n    var min = obj.config.min;\n    if (obj.config.reverse) {\n      min = obj.config.max;\n    }\n\n    obj.txtMinimum = min;\n    if (obj.config.minTxt) {\n      obj.txtMinimum = obj.config.minTxt;\n    } else if (obj.config.humanFriendly) {\n      obj.txtMinimum = humanFriendlyNumber(min, obj.config.humanFriendlyDecimal);\n    } else if (obj.config.formatNumber) {\n      obj.txtMinimum = formatNumber(min);\n    }\n    obj.txtMin = obj.canvas.text(obj.params.minX, obj.params.minY, obj.txtMinimum);\n    obj.txtMin.attr({\n      \"font-size\": obj.params.minFontSize,\n      \"font-weight\": \"normal\",\n      \"font-family\": \"Arial\",\n      \"fill\": obj.config.labelFontColor,\n      \"fill-opacity\": (obj.config.hideMinMax || obj.config.donut) ? \"0\" : \"1\"\n    });\n    setDy(obj.txtMin, obj.params.minFontSize, obj.params.minY);\n\n    // max\n    var max = obj.config.max;\n    if (obj.config.reverse) {\n      max = obj.config.min;\n    }\n    obj.txtMaximum = max;\n    if (obj.config.maxTxt) {\n      obj.txtMaximum = obj.config.maxTxt;\n    } else if (obj.config.humanFriendly) {\n      obj.txtMaximum = humanFriendlyNumber(max, obj.config.humanFriendlyDecimal);\n    } else if (obj.config.formatNumber) {\n      obj.txtMaximum = formatNumber(max);\n    }\n    obj.txtMax = obj.canvas.text(obj.params.maxX, obj.params.maxY, obj.txtMaximum);\n    obj.txtMax.attr({\n      \"font-size\": obj.params.maxFontSize,\n      \"font-weight\": \"normal\",\n      \"font-family\": \"Arial\",\n      \"fill\": obj.config.labelFontColor,\n      \"fill-opacity\": (obj.config.hideMinMax || obj.config.donut) ? \"0\" : \"1\"\n    });\n    setDy(obj.txtMax, obj.params.maxFontSize, obj.params.maxY);\n\n    var defs = obj.canvas.canvas.childNodes[1];\n    var svg = \"http://www.w3.org/2000/svg\";\n\n    if (ie !== 'undefined' && ie < 9) {\n      // VML mode - no SVG & SVG filter support\n    } else if (ie !== 'undefined') {\n      onCreateElementNsReady(function () {\n        obj.generateShadow(svg, defs);\n      });\n    } else {\n      obj.generateShadow(svg, defs);\n    }\n\n    // var clear\n    defs, svg = null;\n\n    // set value to display\n    if (obj.config.textRenderer) {\n      obj.originalValue = obj.config.textRenderer(obj.originalValue);\n    } else if (obj.config.humanFriendly) {\n      obj.originalValue = humanFriendlyNumber(obj.originalValue, obj.config.humanFriendlyDecimal) + obj.config.symbol;\n    } else if (obj.config.formatNumber) {\n      obj.originalValue = formatNumber(obj.originalValue) + obj.config.symbol;\n    } else if (obj.config.displayRemaining) {\n      obj.originalValue = ((obj.config.max - obj.originalValue) * 1).toFixed(obj.config.decimals) + obj.config.symbol;\n    } else {\n      obj.originalValue = (obj.originalValue * 1).toFixed(obj.config.decimals) + obj.config.symbol;\n    }\n\n    if (obj.config.counter === true) {\n      //on each animation frame\n      var onFrame = function () {\n        var currentValue = obj.level.attr(\"pki\")[0];\n        if (obj.config.reverse) {\n          currentValue = (obj.config.max * 1) + (obj.config.min * 1) - (obj.level.attr(\"pki\")[0] * 1);\n        }\n        if (obj.config.textRenderer) {\n          obj.txtValue.attr(\"text\", obj.config.textRenderer(Math.floor(currentValue)));\n        } else if (obj.config.humanFriendly) {\n          obj.txtValue.attr(\"text\", humanFriendlyNumber(Math.floor(currentValue), obj.config.humanFriendlyDecimal) + obj.config.symbol);\n        } else if (obj.config.formatNumber) {\n          obj.txtValue.attr(\"text\", formatNumber(Math.floor(currentValue)) + obj.config.symbol);\n        } else if (obj.config.displayRemaining) {\n          obj.txtValue.attr(\"text\", ((obj.config.max - currentValue) * 1).toFixed(obj.config.decimals) + obj.config.symbol);\n        } else {\n          obj.txtValue.attr(\"text\", (currentValue * 1).toFixed(obj.config.decimals) + obj.config.symbol);\n        }\n        setDy(obj.txtValue, obj.params.valueFontSize, obj.params.valueY);\n        currentValue = null;\n      }\n\n      //on animation end\n      var onFinish = function () {\n        obj.txtValue.attr({\n          \"text\": obj.originalValue\n        });\n        setDy(obj.txtValue, obj.params.valueFontSize, obj.params.valueY);\n      };\n\n      \n      this.bindEvent(\"raphael.anim.finish\", onFinish)\n      this.bindEvent(\"raphael.anim.frame\", onFrame)\n\n    } else {\n      //on animation start\n      var onStart = function () {\n        obj.txtValue.attr({\n          \"text\": obj.originalValue\n        });\n        setDy(obj.txtValue, obj.params.valueFontSize, obj.params.valueY);\n      };\n\n      this.bindEvent(\"raphael.anim.start\", onStart)\n    }\n\n    // animate gauge level, value & label\n    var rvl = obj.config.value;\n    if (obj.config.reverse) {\n      rvl = (obj.config.max * 1) + (obj.config.min * 1) - (obj.config.value * 1);\n    }\n    obj.level.animate({\n      pki: [\n        rvl,\n        obj.config.min,\n        obj.config.max,\n        obj.params.widgetW,\n        obj.params.widgetH,\n        obj.params.dx,\n        obj.params.dy,\n        obj.config.gaugeWidthScale,\n        obj.config.donut,\n        obj.config.reverse\n      ]\n    }, obj.config.startAnimationTime, obj.config.startAnimationType, obj.config.onAnimationEnd);\n\n    if (obj.config.pointer) {\n      obj.needle.animate({\n        ndl: [\n          rvl,\n          obj.config.min,\n          obj.config.max,\n          obj.params.widgetW,\n          obj.params.widgetH,\n          obj.params.dx,\n          obj.params.dy,\n          obj.config.gaugeWidthScale,\n          obj.config.donut\n        ]\n      }, obj.config.startAnimationTime, obj.config.startAnimationType);\n    }\n\n    obj.txtValue.animate({\n      \"fill-opacity\": (obj.config.hideValue) ? \"0\" : \"1\"\n    }, obj.config.startAnimationTime, obj.config.startAnimationType);\n    obj.txtLabel.animate({\n      \"fill-opacity\": \"1\"\n    }, obj.config.startAnimationTime, obj.config.startAnimationType);\n  };\n\n\n  /**\n   * Bind a function to a Raphael eve event\n   *\n   * @param {String} eventName Raphael event name\n   * @param {Function} func The function to call on that event\n   */\n  JustGage.prototype.bindEvent = function (eventName, func) {\n    // add the level id to the event\n    eventName += '.' + this.level.id\n\n    //check for existing bind events\n    if(this.events[eventName]) \n      Raphael.eve.off(eventName, this.events[eventName])\n    \n    Raphael.eve.on(eventName, func);\n\n    this.events[eventName] = func  \n  }\n\n\n  /**\n   * Update Gauge values\n   *\n   * @param {Number} val The value\n   * @param {Number|String} max Max value\n   * @param {Number|String} min Min value\n   * @param {String} label The Label\n   */\n  JustGage.prototype.refresh = function (val, max, min, label) {\n\n    var obj = this;\n    var displayVal, color;\n\n    max = max || null;\n    min = min || null;\n    label = label || null;\n\n    // set label min\n    if (label !== null) {\n      obj.config.label = label;\n\n      obj.txtLabel.attr({\n        \"text\": obj.config.label\n      });\n      setDy(obj.txtLabel, obj.params.labelFontSize, obj.params.labelY);\n    }\n\n    // set new min\n    if (min !== null) {\n      obj.config.min = min;\n      // TODO: update customSectors\n\n      obj.txtMinimum = obj.config.min;\n      if (obj.config.minTxt) {\n        obj.txtMinimum = obj.config.minTxt;\n      } else if (obj.config.humanFriendly) {\n        obj.txtMinimum = humanFriendlyNumber(obj.config.min, obj.config.humanFriendlyDecimal);\n      } else if (obj.config.formatNumber) {\n        obj.txtMinimum = formatNumber(obj.config.min);\n      }\n      if (!obj.config.reverse) {\n        obj.txtMin.attr({\n          \"text\": obj.txtMinimum\n        });\n        setDy(obj.txtMin, obj.params.minFontSize, obj.params.minY);\n      } else {\n        obj.txtMax.attr({\n          \"text\": obj.txtMinimum\n        });\n        setDy(obj.txtMax, obj.params.minFontSize, obj.params.minY);\n      }\n    }\n\n    // set new max\n    if (max !== null) {\n      obj.config.max = max;\n\n      obj.txtMaximum = obj.config.max;\n      if (obj.config.maxTxt) {\n        obj.txtMaximum = obj.config.maxTxt;\n      } else if (obj.config.humanFriendly) {\n        obj.txtMaximum = humanFriendlyNumber(obj.config.max, obj.config.humanFriendlyDecimal);\n      } else if (obj.config.formatNumber) {\n        obj.txtMaximum = formatNumber(obj.config.max);\n      }\n      if (!obj.config.reverse) {\n        obj.txtMax.attr({\n          \"text\": obj.txtMaximum\n        });\n        setDy(obj.txtMax, obj.params.maxFontSize, obj.params.maxY);\n      } else {\n        obj.txtMin.attr({\n          \"text\": obj.txtMaximum\n        });\n        setDy(obj.txtMin, obj.params.maxFontSize, obj.params.maxY);\n      }\n    }\n\n    // overflow values\n    displayVal = val;\n    if ((val * 1) > (obj.config.max * 1)) {\n      val = (obj.config.max * 1);\n    }\n    if ((val * 1) < (obj.config.min * 1)) {\n      val = (obj.config.min * 1);\n    }\n\n    color = getColor(val, (val - obj.config.min) / (obj.config.max - obj.config.min), obj.config.levelColors, obj.config.noGradient, obj.config.customSectors);\n\n    if (obj.config.textRenderer) {\n      displayVal = obj.config.textRenderer(displayVal);\n    } else if (obj.config.humanFriendly) {\n      displayVal = humanFriendlyNumber(displayVal, obj.config.humanFriendlyDecimal) + obj.config.symbol;\n    } else if (obj.config.formatNumber) {\n      displayVal = formatNumber((displayVal * 1).toFixed(obj.config.decimals)) + obj.config.symbol;\n    } else if (obj.config.displayRemaining) {\n      displayVal = ((obj.config.max - displayVal) * 1).toFixed(obj.config.decimals) + obj.config.symbol;\n    } else {\n      displayVal = (displayVal * 1).toFixed(obj.config.decimals) + obj.config.symbol;\n    }\n    obj.originalValue = displayVal;\n    obj.config.value = val * 1;\n\n    if (!obj.config.counter) {\n      obj.txtValue.attr({\n        \"text\": displayVal\n      });\n      setDy(obj.txtValue, obj.params.valueFontSize, obj.params.valueY);\n    }\n\n    var rvl = obj.config.value;\n    if (obj.config.reverse) {\n      rvl = (obj.config.max * 1) + (obj.config.min * 1) - (obj.config.value * 1);\n    }\n\n    obj.level.animate({\n      pki: [\n        rvl,\n        obj.config.min,\n        obj.config.max,\n        obj.params.widgetW,\n        obj.params.widgetH,\n        obj.params.dx,\n        obj.params.dy,\n        obj.config.gaugeWidthScale,\n        obj.config.donut,\n        obj.config.reverse\n      ],\n      \"fill\": color\n    }, obj.config.refreshAnimationTime, obj.config.refreshAnimationType, obj.config.onAnimationEnd);\n\n    if (obj.config.pointer) {\n      obj.needle.animate({\n        ndl: [\n          rvl,\n          obj.config.min,\n          obj.config.max,\n          obj.params.widgetW,\n          obj.params.widgetH,\n          obj.params.dx,\n          obj.params.dy,\n          obj.config.gaugeWidthScale,\n          obj.config.donut\n        ]\n      }, obj.config.refreshAnimationTime, obj.config.refreshAnimationType);\n    }\n\n    // var clear\n    obj, displayVal, color, max, min = null;\n  };\n\n  /**\n   * Update Gauge options\n   *\n   * @param options {String} option The target option name\n   * @param val {Number|String} val The value to be assigned to the option\n   *\n   * Alternative signature\n   * @param options {String|Object} options name and value\n   */\n  JustGage.prototype.update = function (options, val) {\n    var obj = this;\n\n    // options as an object of option/val values\n    if (options instanceof Object) {\n      for (var option in options) {\n        val = options[option];\n        updateProp(obj, option, val);\n      }\n\n    // options as single option/val\n    } else {\n      updateProp(obj, options, val);\n    }\n  };\n\n  /**\n   * Utility function to update properties to a JustGage object\n   *\n   * @param obj {JustGage Object} JustGage object to apply the property update to\n   * @param option {String} option name\n   * @param val {String} option value\n   */\n  function updateProp(obj, option, val) {\n    switch (option) {\n      case 'valueFontColor':\n        if (!isHexColor(val)) {\n          console.log('* justgage: the updated valueFontColor value is not a valid hex color');\n          break;\n        }\n\n        obj.txtValue.attr({\n          'fill': val\n        });\n        break;\n\n      case 'labelFontColor':\n        if (!isHexColor(val)) {\n          console.log('* justgage: the updated labelFontColor value is not a valid hex color');\n          break;\n        }\n\n        obj.txtMin.attr({\n          \"fill\": val,\n        });\n        obj.txtMax.attr({\n          \"fill\": val,\n        });\n        obj.txtLabel.attr({\n          \"fill\": val,\n        });\n\n        break;\n\n      default:\n        console.log('* justgage: \"${option}\" is not a supported update setting');\n    }\n  }\n\n  /**\n   * Destroy the Gauge Object and unbind events\n   *\n   */\n  JustGage.prototype.destroy = function () {\n    if (this.node && this.node.parentNode) this.node.innerHTML = ''\n\n    for(var event in this.events) {\n      Raphael.eve.off(event, this.events[event])\n    }\n\n    this.events = {}\n  };\n\n  /**\n   * Generate Shadow\n   *\n   * @param {Object} svg The Svg element Object\n   * @param {Object} defs The defs element Object\n   */\n  JustGage.prototype.generateShadow = function (svg, defs) {\n\n    var obj = this;\n    var sid = \"inner-shadow-\" + obj.config.id;\n    var gaussFilter, feOffset, feGaussianBlur, feComposite1, feFlood, feComposite2, feComposite3;\n\n    // FILTER\n    gaussFilter = document.createElementNS(svg, \"filter\");\n    gaussFilter.setAttribute(\"id\", sid);\n    defs.appendChild(gaussFilter);\n\n    // offset\n    feOffset = document.createElementNS(svg, \"feOffset\");\n    feOffset.setAttribute(\"dx\", 0);\n    feOffset.setAttribute(\"dy\", obj.config.shadowVerticalOffset);\n    gaussFilter.appendChild(feOffset);\n\n    // blur\n    feGaussianBlur = document.createElementNS(svg, \"feGaussianBlur\");\n    feGaussianBlur.setAttribute(\"result\", \"offset-blur\");\n    feGaussianBlur.setAttribute(\"stdDeviation\", obj.config.shadowSize);\n    gaussFilter.appendChild(feGaussianBlur);\n\n    // composite 1\n    feComposite1 = document.createElementNS(svg, \"feComposite\");\n    feComposite1.setAttribute(\"operator\", \"out\");\n    feComposite1.setAttribute(\"in\", \"SourceGraphic\");\n    feComposite1.setAttribute(\"in2\", \"offset-blur\");\n    feComposite1.setAttribute(\"result\", \"inverse\");\n    gaussFilter.appendChild(feComposite1);\n\n    // flood\n    feFlood = document.createElementNS(svg, \"feFlood\");\n    feFlood.setAttribute(\"flood-color\", \"black\");\n    feFlood.setAttribute(\"flood-opacity\", obj.config.shadowOpacity);\n    feFlood.setAttribute(\"result\", \"color\");\n    gaussFilter.appendChild(feFlood);\n\n    // composite 2\n    feComposite2 = document.createElementNS(svg, \"feComposite\");\n    feComposite2.setAttribute(\"operator\", \"in\");\n    feComposite2.setAttribute(\"in\", \"color\");\n    feComposite2.setAttribute(\"in2\", \"inverse\");\n    feComposite2.setAttribute(\"result\", \"shadow\");\n    gaussFilter.appendChild(feComposite2);\n\n    // composite 3\n    feComposite3 = document.createElementNS(svg, \"feComposite\");\n    feComposite3.setAttribute(\"operator\", \"over\");\n    feComposite3.setAttribute(\"in\", \"shadow\");\n    feComposite3.setAttribute(\"in2\", \"SourceGraphic\");\n    gaussFilter.appendChild(feComposite3);\n\n    // set shadow\n    if (obj.config.showInnerShadow) {\n      obj.canvas.canvas.childNodes[2].setAttribute(\"filter\", \"url(\" + window.location.pathname + \"#\" + sid + \")\");\n      obj.canvas.canvas.childNodes[3].setAttribute(\"filter\", \"url(\" + window.location.pathname + \"#\" + sid + \")\");\n    }\n\n    // var clear\n    gaussFilter, feOffset, feGaussianBlur, feComposite1, feFlood, feComposite2, feComposite3 = null;\n  };\n\n  //\n  // tiny helper function to lookup value of a key from two hash tables\n  // if none found, return defaultvalue\n  //\n  // key: string\n  // tablea: object\n  // tableb: DOMStringMap|object\n  // defval: string|integer|float|null\n  // datatype: return datatype\n  // delimiter: delimiter to be used in conjunction with datatype formatting\n  //\n  function kvLookup(key, tablea, tableb, defval, datatype, delimiter) {\n    var val = defval;\n    var canConvert = false;\n    if (!isUndefined(key)) {\n      if (!isUndefined(tableb) && typeof tableb === \"object\" && key in tableb) {\n        val = tableb[key];\n        canConvert = true;\n      } else if (!isUndefined(tablea) && typeof tablea === \"object\" && key in tablea) {\n        val = tablea[key];\n        canConvert = true;\n      } else {\n        val = defval;\n      }\n      if (canConvert === true) {\n        if (!isUndefined(datatype)) {\n          switch (datatype) {\n            case 'int':\n              val = parseInt(val, 10);\n              break;\n            case 'float':\n              val = parseFloat(val);\n              break;\n            default:\n              break;\n          }\n        }\n      }\n    }\n    return val;\n  };\n\n  function isUndefined(v) {\n    return v === null || v === undefined\n  }\n\n  /** Get color for value */\n  function getColor(val, pct, col, noGradient, custSec) {\n\n    var no, inc, colors, percentage, rval, gval, bval, lower, upper, range, rangePct, pctLower, pctUpper, color;\n    var cust = custSec && custSec.ranges && custSec.ranges.length > 0;\n    var noGradient = noGradient || cust;\n\n    if (cust) {\n      if (custSec.percents === true) val = pct * 100;\n      for (var i = 0; i < custSec.ranges.length; i++) {\n        if (val >= custSec.ranges[i].lo && val <= custSec.ranges[i].hi) {\n          return custSec.ranges[i].color;\n        }\n      }\n    }\n\n    no = col.length;\n    if (no === 1) return col[0];\n    inc = (noGradient) ? (1 / no) : (1 / (no - 1));\n    colors = [];\n    for (i = 0; i < col.length; i++) {\n      percentage = (noGradient) ? (inc * (i + 1)) : (inc * i);\n      rval = parseInt((cutHex(col[i])).substring(0, 2), 16);\n      gval = parseInt((cutHex(col[i])).substring(2, 4), 16);\n      bval = parseInt((cutHex(col[i])).substring(4, 6), 16);\n      colors[i] = {\n        pct: percentage,\n        color: {\n          r: rval,\n          g: gval,\n          b: bval\n        }\n      };\n    }\n\n    if (pct === 0) {\n      return 'rgb(' + [colors[0].color.r, colors[0].color.g, colors[0].color.b].join(',') + ')';\n    }\n\n    for (var j = 0; j < colors.length; j++) {\n      if (pct <= colors[j].pct) {\n        if (noGradient) {\n          return 'rgb(' + [colors[j].color.r, colors[j].color.g, colors[j].color.b].join(',') + ')';\n        } else {\n          lower = colors[j - 1];\n          upper = colors[j];\n          range = upper.pct - lower.pct;\n          rangePct = (pct - lower.pct) / range;\n          pctLower = 1 - rangePct;\n          pctUpper = rangePct;\n          color = {\n            r: Math.floor(lower.color.r * pctLower + upper.color.r * pctUpper),\n            g: Math.floor(lower.color.g * pctLower + upper.color.g * pctUpper),\n            b: Math.floor(lower.color.b * pctLower + upper.color.b * pctUpper)\n          };\n          return 'rgb(' + [color.r, color.g, color.b].join(',') + ')';\n        }\n      }\n    }\n\n  }\n\n  /** Fix Raphael display:none tspan dy attribute bug */\n  function setDy(elem, fontSize, txtYpos) {\n    if ((!ie || ie > 9) && elem.node.firstChild.attributes.dy) {\n      elem.node.firstChild.attributes.dy.value = 0;\n    }\n  }\n\n  /**  Cut hex  */\n  function cutHex(str) {\n    return (str.charAt(0) == \"#\") ? str.substring(1, 7) : str;\n  }\n\n  /**\n   * Validate if html hex color presentation\n   *\n   * @param val\n   * @returns {*|boolean}\n   */\n  function isHexColor(val) {\n    var regExp = /^#([0-9A-Fa-f]{3}){1,2}$/;\n    return (typeof val === 'string' && regExp.test(val));\n  }\n\n  /**  Human friendly number suffix - @robertsLando */\n  function humanFriendlyNumber(n, d) {\n    var d2, i, s, c;\n\n    d2 = Math.pow(10, d);\n    s = \" KMGTPE\";\n    i = 0;\n    c = 1000;\n\n    while ((n >= c || n <= -c) && ++i < s.length) n = n / c;\n\n    i = i >= s.length ? s.length - 1 : i;\n\n    return Math.round(n * d2) / d2 + s[i];\n  }\n\n  /** Format numbers with commas - From: http://stackoverflow.com/questions/2901102/how-to-print-a-number-with-commas-as-thousands-separators-in-javascript */\n  function formatNumber(x) {\n    var parts = x.toString().split(\".\");\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n    return parts.join(\".\");\n  }\n\n  /**  Get style  */\n  function getStyle(oElm, strCssRule) {\n    var strValue = \"\";\n    if (document.defaultView && document.defaultView.getComputedStyle) {\n      strValue = document.defaultView.getComputedStyle(oElm, \"\").getPropertyValue(strCssRule);\n    } else if (oElm.currentStyle) {\n      strCssRule = strCssRule.replace(/\\-(\\w)/g, function (strMatch, p1) {\n        return p1.toUpperCase();\n      });\n      strValue = oElm.currentStyle[strCssRule];\n    }\n    return strValue;\n  }\n\n  /**  Create Element NS Ready  */\n  function onCreateElementNsReady(func) {\n    if (document.createElementNS !== undefined) {\n      func();\n    } else {\n      setTimeout(function () {\n        onCreateElementNsReady(func);\n      }, 100);\n    }\n  }\n\n  /**  Get IE version  */\n  // ----------------------------------------------------------\n  // A short snippet for detecting versions of IE in JavaScript\n  // without resorting to user-agent sniffing\n  // ----------------------------------------------------------\n  // If you're not in IE (or IE version is less than 5) then:\n  // ie === undefined\n  // If you're in IE (>=5) then you can determine which version:\n  // ie === 7; // IE7\n  // Thus, to detect IE:\n  // if (ie) {}\n  // And to detect the version:\n  // ie === 6 // IE6\n  // ie > 7 // IE8, IE9 ...\n  // ie < 9 // Anything less than IE9\n  // ----------------------------------------------------------\n  // UPDATE: Now using Live NodeList idea from @jdalton\n  var ie = (function () {\n\n    var undef,\n      v = 3,\n      div = document.createElement('div'),\n      all = div.getElementsByTagName('i');\n\n    while (\n      div.innerHTML = '<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->',\n      all[0]\n    );\n    return v > 4 ? v : undef;\n  }());\n\n  // extend target object with second object\n  function extend(out) {\n    out = out || {};\n\n    for (var i = 1; i < arguments.length; i++) {\n      if (!arguments[i])\n        continue;\n\n      for (var key in arguments[i]) {\n        if (arguments[i].hasOwnProperty(key))\n          out[key] = arguments[i][key];\n      }\n    }\n\n    return out;\n  };\n\n  return JustGage\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/justgage/justgage.js\n");

/***/ }),

/***/ "./node_modules/raphael/raphael.min.js":
/*!*********************************************!*\
  !*** ./node_modules/raphael/raphael.min.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("!function(t,e){ true?module.exports=e():undefined}(window,function(){return function(t){var e={};function r(i){if(e[i])return e[i].exports;var n=e[i]={i:i,l:!1,exports:{}};return t[i].call(n.exports,n,n.exports,r),n.l=!0,n.exports}return r.m=t,r.c=e,r.d=function(t,e,i){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},r.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(r.r(i),Object.defineProperty(i,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var n in t)r.d(i,n,function(e){return t[e]}.bind(null,n));return i},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,\"a\",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p=\"\",r(r.s=1)}([function(t,e,r){var i,n;i=[r(2)],void 0===(n=function(t){function e(i){if(e.is(i,\"function\"))return r?i():t.on(\"raphael.DOMload\",i);if(e.is(i,A))return e._engine.create[c](e,i.splice(0,3+e.is(i[0],T))).add(i);var n=Array.prototype.slice.call(arguments,0);if(e.is(n[n.length-1],\"function\")){var a=n.pop();return r?a.call(e._engine.create[c](e,n)):t.on(\"raphael.DOMload\",function(){a.call(e._engine.create[c](e,n))})}return e._engine.create[c](e,arguments)}e.version=\"2.3.0\",e.eve=t;var r,i,n=/[, ]+/,a={circle:1,rect:1,path:1,ellipse:1,text:1,image:1},s=/\\{(\\d+)\\}/g,o=\"hasOwnProperty\",l={doc:document,win:window},h={was:Object.prototype[o].call(l.win,\"Raphael\"),is:l.win.Raphael},u=function(){this.ca=this.customAttributes={}},c=\"apply\",f=\"concat\",p=\"ontouchstart\"in window||window.TouchEvent||window.DocumentTouch&&document instanceof DocumentTouch,d=\"\",g=\" \",x=String,v=\"split\",y=\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\"[v](g),m={mousedown:\"touchstart\",mousemove:\"touchmove\",mouseup:\"touchend\"},b=x.prototype.toLowerCase,_=Math,w=_.max,k=_.min,B=_.abs,C=_.pow,S=_.PI,T=\"number\",A=\"array\",M=Object.prototype.toString,E=(e._ISURL=/^url\\(['\"]?(.+?)['\"]?\\)$/i,/^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?)%?\\s*\\))\\s*$/i),N={NaN:1,Infinity:1,\"-Infinity\":1},L=/^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,P=_.round,z=parseFloat,F=parseInt,R=x.prototype.toUpperCase,j=e._availableAttrs={\"arrow-end\":\"none\",\"arrow-start\":\"none\",blur:0,\"clip-rect\":\"0 0 1e9 1e9\",cursor:\"default\",cx:0,cy:0,fill:\"#fff\",\"fill-opacity\":1,font:'10px \"Arial\"',\"font-family\":'\"Arial\"',\"font-size\":\"10\",\"font-style\":\"normal\",\"font-weight\":400,gradient:0,height:0,href:\"http://raphaeljs.com/\",\"letter-spacing\":0,opacity:1,path:\"M0,0\",r:0,rx:0,ry:0,src:\"\",stroke:\"#000\",\"stroke-dasharray\":\"\",\"stroke-linecap\":\"butt\",\"stroke-linejoin\":\"butt\",\"stroke-miterlimit\":0,\"stroke-opacity\":1,\"stroke-width\":1,target:\"_blank\",\"text-anchor\":\"middle\",title:\"Raphael\",transform:\"\",width:0,x:0,y:0,class:\"\"},I=e._availableAnimAttrs={blur:T,\"clip-rect\":\"csv\",cx:T,cy:T,fill:\"colour\",\"fill-opacity\":T,\"font-size\":T,height:T,opacity:T,path:\"path\",r:T,rx:T,ry:T,stroke:\"colour\",\"stroke-opacity\":T,\"stroke-width\":T,transform:\"transform\",width:T,x:T,y:T},D=/[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/,q={hs:1,rg:1},O=/,?([achlmqrstvxz]),?/gi,V=/([achlmrqstvz])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/gi,W=/([rstm])[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*)+)/gi,Y=/(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,?[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*/gi,G=(e._radial_gradient=/^r(?:\\(([^,]+?)[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*,[\\x09\\x0a\\x0b\\x0c\\x0d\\x20\\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029]*([^\\)]+?)\\))?/,{}),H=function(t,e){return z(t)-z(e)},X=function(t){return t},U=e._rectPath=function(t,e,r,i,n){return n?[[\"M\",t+n,e],[\"l\",r-2*n,0],[\"a\",n,n,0,0,1,n,n],[\"l\",0,i-2*n],[\"a\",n,n,0,0,1,-n,n],[\"l\",2*n-r,0],[\"a\",n,n,0,0,1,-n,-n],[\"l\",0,2*n-i],[\"a\",n,n,0,0,1,n,-n],[\"z\"]]:[[\"M\",t,e],[\"l\",r,0],[\"l\",0,i],[\"l\",-r,0],[\"z\"]]},$=function(t,e,r,i){return null==i&&(i=r),[[\"M\",t,e],[\"m\",0,-i],[\"a\",r,i,0,1,1,0,2*i],[\"a\",r,i,0,1,1,0,-2*i],[\"z\"]]},Z=e._getPath={path:function(t){return t.attr(\"path\")},circle:function(t){var e=t.attrs;return $(e.cx,e.cy,e.r)},ellipse:function(t){var e=t.attrs;return $(e.cx,e.cy,e.rx,e.ry)},rect:function(t){var e=t.attrs;return U(e.x,e.y,e.width,e.height,e.r)},image:function(t){var e=t.attrs;return U(e.x,e.y,e.width,e.height)},text:function(t){var e=t._getBBox();return U(e.x,e.y,e.width,e.height)},set:function(t){var e=t._getBBox();return U(e.x,e.y,e.width,e.height)}},Q=e.mapPath=function(t,e){if(!e)return t;var r,i,n,a,s,o,l;for(n=0,s=(t=Tt(t)).length;n<s;n++)for(a=1,o=(l=t[n]).length;a<o;a+=2)r=e.x(l[a],l[a+1]),i=e.y(l[a],l[a+1]),l[a]=r,l[a+1]=i;return t};if(e._g=l,e.type=l.win.SVGAngle||l.doc.implementation.hasFeature(\"http://www.w3.org/TR/SVG11/feature#BasicStructure\",\"1.1\")?\"SVG\":\"VML\",\"VML\"==e.type){var J,K=l.doc.createElement(\"div\");if(K.innerHTML='<v:shape adj=\"1\"/>',(J=K.firstChild).style.behavior=\"url(#default#VML)\",!J||\"object\"!=typeof J.adj)return e.type=d;K=null}function tt(t){if(\"function\"==typeof t||Object(t)!==t)return t;var e=new t.constructor;for(var r in t)t[o](r)&&(e[r]=tt(t[r]));return e}e.svg=!(e.vml=\"VML\"==e.type),e._Paper=u,e.fn=i=u.prototype=e.prototype,e._id=0,e.is=function(t,e){return\"finite\"==(e=b.call(e))?!N[o](+t):\"array\"==e?t instanceof Array:\"null\"==e&&null===t||e==typeof t&&null!==t||\"object\"==e&&t===Object(t)||\"array\"==e&&Array.isArray&&Array.isArray(t)||M.call(t).slice(8,-1).toLowerCase()==e},e.angle=function(t,r,i,n,a,s){if(null==a){var o=t-i,l=r-n;return o||l?(180+180*_.atan2(-l,-o)/S+360)%360:0}return e.angle(t,r,a,s)-e.angle(i,n,a,s)},e.rad=function(t){return t%360*S/180},e.deg=function(t){return Math.round(180*t/S%360*1e3)/1e3},e.snapTo=function(t,r,i){if(i=e.is(i,\"finite\")?i:10,e.is(t,A)){for(var n=t.length;n--;)if(B(t[n]-r)<=i)return t[n]}else{var a=r%(t=+t);if(a<i)return r-a;if(a>t-i)return r-a+t}return r};var et,rt;e.createUUID=(et=/[xy]/g,rt=function(t){var e=16*_.random()|0;return(\"x\"==t?e:3&e|8).toString(16)},function(){return\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(et,rt).toUpperCase()});e.setWindow=function(r){t(\"raphael.setWindow\",e,l.win,r),l.win=r,l.doc=l.win.document,e._engine.initWin&&e._engine.initWin(l.win)};var it=function(t){if(e.vml){var r,i=/^\\s+|\\s+$/g;try{var n=new ActiveXObject(\"htmlfile\");n.write(\"<body>\"),n.close(),r=n.body}catch(t){r=createPopup().document.body}var a=r.createTextRange();it=ht(function(t){try{r.style.color=x(t).replace(i,d);var e=a.queryCommandValue(\"ForeColor\");return\"#\"+(\"000000\"+(e=(255&e)<<16|65280&e|(16711680&e)>>>16).toString(16)).slice(-6)}catch(t){return\"none\"}})}else{var s=l.doc.createElement(\"i\");s.title=\"Raphaël Colour Picker\",s.style.display=\"none\",l.doc.body.appendChild(s),it=ht(function(t){return s.style.color=t,l.doc.defaultView.getComputedStyle(s,d).getPropertyValue(\"color\")})}return it(t)},nt=function(){return\"hsb(\"+[this.h,this.s,this.b]+\")\"},at=function(){return\"hsl(\"+[this.h,this.s,this.l]+\")\"},st=function(){return this.hex},ot=function(t,r,i){if(null==r&&e.is(t,\"object\")&&\"r\"in t&&\"g\"in t&&\"b\"in t&&(i=t.b,r=t.g,t=t.r),null==r&&e.is(t,\"string\")){var n=e.getRGB(t);t=n.r,r=n.g,i=n.b}return(t>1||r>1||i>1)&&(t/=255,r/=255,i/=255),[t,r,i]},lt=function(t,r,i,n){var a={r:t*=255,g:r*=255,b:i*=255,hex:e.rgb(t,r,i),toString:st};return e.is(n,\"finite\")&&(a.opacity=n),a};function ht(t,e,r){return function i(){var n=Array.prototype.slice.call(arguments,0),a=n.join(\"␀\"),s=i.cache=i.cache||{},l=i.count=i.count||[];return s[o](a)?(function(t,e){for(var r=0,i=t.length;r<i;r++)if(t[r]===e)return t.push(t.splice(r,1)[0])}(l,a),r?r(s[a]):s[a]):(l.length>=1e3&&delete s[l.shift()],l.push(a),s[a]=t[c](e,n),r?r(s[a]):s[a])}}e.color=function(t){var r;return e.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"b\"in t?(r=e.hsb2rgb(t),t.r=r.r,t.g=r.g,t.b=r.b,t.hex=r.hex):e.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"l\"in t?(r=e.hsl2rgb(t),t.r=r.r,t.g=r.g,t.b=r.b,t.hex=r.hex):(e.is(t,\"string\")&&(t=e.getRGB(t)),e.is(t,\"object\")&&\"r\"in t&&\"g\"in t&&\"b\"in t?(r=e.rgb2hsl(t),t.h=r.h,t.s=r.s,t.l=r.l,r=e.rgb2hsb(t),t.v=r.b):(t={hex:\"none\"}).r=t.g=t.b=t.h=t.s=t.v=t.l=-1),t.toString=st,t},e.hsb2rgb=function(t,e,r,i){var n,a,s,o,l;return this.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"b\"in t&&(r=t.b,e=t.s,i=t.o,t=t.h),o=(l=r*e)*(1-B((t=(t*=360)%360/60)%2-1)),n=a=s=r-l,lt(n+=[l,o,0,0,o,l][t=~~t],a+=[o,l,l,o,0,0][t],s+=[0,0,o,l,l,o][t],i)},e.hsl2rgb=function(t,e,r,i){var n,a,s,o,l;return this.is(t,\"object\")&&\"h\"in t&&\"s\"in t&&\"l\"in t&&(r=t.l,e=t.s,t=t.h),(t>1||e>1||r>1)&&(t/=360,e/=100,r/=100),o=(l=2*e*(r<.5?r:1-r))*(1-B((t=(t*=360)%360/60)%2-1)),n=a=s=r-l/2,lt(n+=[l,o,0,0,o,l][t=~~t],a+=[o,l,l,o,0,0][t],s+=[0,0,o,l,l,o][t],i)},e.rgb2hsb=function(t,e,r){var i,n;return t=(r=ot(t,e,r))[0],e=r[1],r=r[2],{h:((0==(n=(i=w(t,e,r))-k(t,e,r))?null:i==t?(e-r)/n:i==e?(r-t)/n+2:(t-e)/n+4)+360)%6*60/360,s:0==n?0:n/i,b:i,toString:nt}},e.rgb2hsl=function(t,e,r){var i,n,a,s;return t=(r=ot(t,e,r))[0],e=r[1],r=r[2],i=((n=w(t,e,r))+(a=k(t,e,r)))/2,{h:((0==(s=n-a)?null:n==t?(e-r)/s:n==e?(r-t)/s+2:(t-e)/s+4)+360)%6*60/360,s:0==s?0:i<.5?s/(2*i):s/(2-2*i),l:i,toString:at}},e._path2string=function(){return this.join(\",\").replace(O,\"$1\")};e._preload=function(t,e){var r=l.doc.createElement(\"img\");r.style.cssText=\"position:absolute;left:-9999em;top:-9999em\",r.onload=function(){e.call(this),this.onload=null,l.doc.body.removeChild(this)},r.onerror=function(){l.doc.body.removeChild(this)},l.doc.body.appendChild(r),r.src=t};function ut(){return this.hex}function ct(t,e){for(var r=[],i=0,n=t.length;n-2*!e>i;i+=2){var a=[{x:+t[i-2],y:+t[i-1]},{x:+t[i],y:+t[i+1]},{x:+t[i+2],y:+t[i+3]},{x:+t[i+4],y:+t[i+5]}];e?i?n-4==i?a[3]={x:+t[0],y:+t[1]}:n-2==i&&(a[2]={x:+t[0],y:+t[1]},a[3]={x:+t[2],y:+t[3]}):a[0]={x:+t[n-2],y:+t[n-1]}:n-4==i?a[3]=a[2]:i||(a[0]={x:+t[i],y:+t[i+1]}),r.push([\"C\",(-a[0].x+6*a[1].x+a[2].x)/6,(-a[0].y+6*a[1].y+a[2].y)/6,(a[1].x+6*a[2].x-a[3].x)/6,(a[1].y+6*a[2].y-a[3].y)/6,a[2].x,a[2].y])}return r}e.getRGB=ht(function(t){if(!t||(t=x(t)).indexOf(\"-\")+1)return{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ut};if(\"none\"==t)return{r:-1,g:-1,b:-1,hex:\"none\",toString:ut};!q[o](t.toLowerCase().substring(0,2))&&\"#\"!=t.charAt()&&(t=it(t));var r,i,n,a,s,l,h=t.match(E);return h?(h[2]&&(n=F(h[2].substring(5),16),i=F(h[2].substring(3,5),16),r=F(h[2].substring(1,3),16)),h[3]&&(n=F((s=h[3].charAt(3))+s,16),i=F((s=h[3].charAt(2))+s,16),r=F((s=h[3].charAt(1))+s,16)),h[4]&&(l=h[4][v](D),r=z(l[0]),\"%\"==l[0].slice(-1)&&(r*=2.55),i=z(l[1]),\"%\"==l[1].slice(-1)&&(i*=2.55),n=z(l[2]),\"%\"==l[2].slice(-1)&&(n*=2.55),\"rgba\"==h[1].toLowerCase().slice(0,4)&&(a=z(l[3])),l[3]&&\"%\"==l[3].slice(-1)&&(a/=100)),h[5]?(l=h[5][v](D),r=z(l[0]),\"%\"==l[0].slice(-1)&&(r*=2.55),i=z(l[1]),\"%\"==l[1].slice(-1)&&(i*=2.55),n=z(l[2]),\"%\"==l[2].slice(-1)&&(n*=2.55),(\"deg\"==l[0].slice(-3)||\"°\"==l[0].slice(-1))&&(r/=360),\"hsba\"==h[1].toLowerCase().slice(0,4)&&(a=z(l[3])),l[3]&&\"%\"==l[3].slice(-1)&&(a/=100),e.hsb2rgb(r,i,n,a)):h[6]?(l=h[6][v](D),r=z(l[0]),\"%\"==l[0].slice(-1)&&(r*=2.55),i=z(l[1]),\"%\"==l[1].slice(-1)&&(i*=2.55),n=z(l[2]),\"%\"==l[2].slice(-1)&&(n*=2.55),(\"deg\"==l[0].slice(-3)||\"°\"==l[0].slice(-1))&&(r/=360),\"hsla\"==h[1].toLowerCase().slice(0,4)&&(a=z(l[3])),l[3]&&\"%\"==l[3].slice(-1)&&(a/=100),e.hsl2rgb(r,i,n,a)):((h={r:r,g:i,b:n,toString:ut}).hex=\"#\"+(16777216|n|i<<8|r<<16).toString(16).slice(1),e.is(a,\"finite\")&&(h.opacity=a),h)):{r:-1,g:-1,b:-1,hex:\"none\",error:1,toString:ut}},e),e.hsb=ht(function(t,r,i){return e.hsb2rgb(t,r,i).hex}),e.hsl=ht(function(t,r,i){return e.hsl2rgb(t,r,i).hex}),e.rgb=ht(function(t,e,r){function i(t){return t+.5|0}return\"#\"+(16777216|i(r)|i(e)<<8|i(t)<<16).toString(16).slice(1)}),e.getColor=function(t){var e=this.getColor.start=this.getColor.start||{h:0,s:1,b:t||.75},r=this.hsb2rgb(e.h,e.s,e.b);return e.h+=.075,e.h>1&&(e.h=0,e.s-=.2,e.s<=0&&(this.getColor.start={h:0,s:1,b:e.b})),r.hex},e.getColor.reset=function(){delete this.start},e.parsePathString=function(t){if(!t)return null;var r=ft(t);if(r.arr)return mt(r.arr);var i={a:7,c:6,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,z:0},n=[];return e.is(t,A)&&e.is(t[0],A)&&(n=mt(t)),n.length||x(t).replace(V,function(t,e,r){var a=[],s=e.toLowerCase();if(r.replace(Y,function(t,e){e&&a.push(+e)}),\"m\"==s&&a.length>2&&(n.push([e][f](a.splice(0,2))),s=\"l\",e=\"m\"==e?\"l\":\"L\"),\"r\"==s)n.push([e][f](a));else for(;a.length>=i[s]&&(n.push([e][f](a.splice(0,i[s]))),i[s]););}),n.toString=e._path2string,r.arr=mt(n),n},e.parseTransformString=ht(function(t){if(!t)return null;var r=[];return e.is(t,A)&&e.is(t[0],A)&&(r=mt(t)),r.length||x(t).replace(W,function(t,e,i){var n=[];b.call(e);i.replace(Y,function(t,e){e&&n.push(+e)}),r.push([e][f](n))}),r.toString=e._path2string,r},this,function(t){if(!t)return t;for(var e=[],r=0;r<t.length;r++){for(var i=[],n=0;n<t[r].length;n++)i.push(t[r][n]);e.push(i)}return e});var ft=function(t){var e=ft.ps=ft.ps||{};return e[t]?e[t].sleep=100:e[t]={sleep:100},setTimeout(function(){for(var r in e)e[o](r)&&r!=t&&(e[r].sleep--,!e[r].sleep&&delete e[r])}),e[t]};function pt(t,e,r,i,n){return t*(t*(-3*e+9*r-9*i+3*n)+6*e-12*r+6*i)-3*e+3*r}function dt(t,e,r,i,n,a,s,o,l){null==l&&(l=1);for(var h=(l=l>1?1:l<0?0:l)/2,u=[-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],c=[.2491,.2491,.2335,.2335,.2032,.2032,.1601,.1601,.1069,.1069,.0472,.0472],f=0,p=0;p<12;p++){var d=h*u[p]+h,g=pt(d,t,r,n,s),x=pt(d,e,i,a,o),v=g*g+x*x;f+=c[p]*_.sqrt(v)}return h*f}function gt(t,e,r,i,n,a,s,o){if(!(w(t,r)<k(n,s)||k(t,r)>w(n,s)||w(e,i)<k(a,o)||k(e,i)>w(a,o))){var l=(t-r)*(a-o)-(e-i)*(n-s);if(l){var h=((t*i-e*r)*(n-s)-(t-r)*(n*o-a*s))/l,u=((t*i-e*r)*(a-o)-(e-i)*(n*o-a*s))/l,c=+h.toFixed(2),f=+u.toFixed(2);if(!(c<+k(t,r).toFixed(2)||c>+w(t,r).toFixed(2)||c<+k(n,s).toFixed(2)||c>+w(n,s).toFixed(2)||f<+k(e,i).toFixed(2)||f>+w(e,i).toFixed(2)||f<+k(a,o).toFixed(2)||f>+w(a,o).toFixed(2)))return{x:h,y:u}}}}function xt(t,r,i){var n=e.bezierBBox(t),a=e.bezierBBox(r);if(!e.isBBoxIntersect(n,a))return i?0:[];for(var s=dt.apply(0,t),o=dt.apply(0,r),l=w(~~(s/5),1),h=w(~~(o/5),1),u=[],c=[],f={},p=i?0:[],d=0;d<l+1;d++){var g=e.findDotsAtSegment.apply(e,t.concat(d/l));u.push({x:g.x,y:g.y,t:d/l})}for(d=0;d<h+1;d++)g=e.findDotsAtSegment.apply(e,r.concat(d/h)),c.push({x:g.x,y:g.y,t:d/h});for(d=0;d<l;d++)for(var x=0;x<h;x++){var v=u[d],y=u[d+1],m=c[x],b=c[x+1],_=B(y.x-v.x)<.001?\"y\":\"x\",C=B(b.x-m.x)<.001?\"y\":\"x\",S=gt(v.x,v.y,y.x,y.y,m.x,m.y,b.x,b.y);if(S){if(f[S.x.toFixed(4)]==S.y.toFixed(4))continue;f[S.x.toFixed(4)]=S.y.toFixed(4);var T=v.t+B((S[_]-v[_])/(y[_]-v[_]))*(y.t-v.t),A=m.t+B((S[C]-m[C])/(b[C]-m[C]))*(b.t-m.t);T>=0&&T<=1.001&&A>=0&&A<=1.001&&(i?p++:p.push({x:S.x,y:S.y,t1:k(T,1),t2:k(A,1)}))}}return p}function vt(t,r,i){t=e._path2curve(t),r=e._path2curve(r);for(var n,a,s,o,l,h,u,c,f,p,d=i?0:[],g=0,x=t.length;g<x;g++){var v=t[g];if(\"M\"==v[0])n=l=v[1],a=h=v[2];else{\"C\"==v[0]?(f=[n,a].concat(v.slice(1)),n=f[6],a=f[7]):(f=[n,a,n,a,l,h,l,h],n=l,a=h);for(var y=0,m=r.length;y<m;y++){var b=r[y];if(\"M\"==b[0])s=u=b[1],o=c=b[2];else{\"C\"==b[0]?(p=[s,o].concat(b.slice(1)),s=p[6],o=p[7]):(p=[s,o,s,o,u,c,u,c],s=u,o=c);var _=xt(f,p,i);if(i)d+=_;else{for(var w=0,k=_.length;w<k;w++)_[w].segment1=g,_[w].segment2=y,_[w].bez1=f,_[w].bez2=p;d=d.concat(_)}}}}}return d}e.findDotsAtSegment=function(t,e,r,i,n,a,s,o,l){var h=1-l,u=C(h,3),c=C(h,2),f=l*l,p=f*l,d=u*t+3*c*l*r+3*h*l*l*n+p*s,g=u*e+3*c*l*i+3*h*l*l*a+p*o,x=t+2*l*(r-t)+f*(n-2*r+t),v=e+2*l*(i-e)+f*(a-2*i+e),y=r+2*l*(n-r)+f*(s-2*n+r),m=i+2*l*(a-i)+f*(o-2*a+i),b=h*t+l*r,w=h*e+l*i,k=h*n+l*s,B=h*a+l*o,T=90-180*_.atan2(x-y,v-m)/S;return(x>y||v<m)&&(T+=180),{x:d,y:g,m:{x:x,y:v},n:{x:y,y:m},start:{x:b,y:w},end:{x:k,y:B},alpha:T}},e.bezierBBox=function(t,r,i,n,a,s,o,l){e.is(t,\"array\")||(t=[t,r,i,n,a,s,o,l]);var h=St.apply(null,t);return{x:h.min.x,y:h.min.y,x2:h.max.x,y2:h.max.y,width:h.max.x-h.min.x,height:h.max.y-h.min.y}},e.isPointInsideBBox=function(t,e,r){return e>=t.x&&e<=t.x2&&r>=t.y&&r<=t.y2},e.isBBoxIntersect=function(t,r){var i=e.isPointInsideBBox;return i(r,t.x,t.y)||i(r,t.x2,t.y)||i(r,t.x,t.y2)||i(r,t.x2,t.y2)||i(t,r.x,r.y)||i(t,r.x2,r.y)||i(t,r.x,r.y2)||i(t,r.x2,r.y2)||(t.x<r.x2&&t.x>r.x||r.x<t.x2&&r.x>t.x)&&(t.y<r.y2&&t.y>r.y||r.y<t.y2&&r.y>t.y)},e.pathIntersection=function(t,e){return vt(t,e)},e.pathIntersectionNumber=function(t,e){return vt(t,e,1)},e.isPointInsidePath=function(t,r,i){var n=e.pathBBox(t);return e.isPointInsideBBox(n,r,i)&&vt(t,[[\"M\",r,i],[\"H\",n.x2+10]],1)%2==1},e._removedFactory=function(e){return function(){t(\"raphael.log\",null,\"Raphaël: you are calling to method “\"+e+\"” of removed object\",e)}};var yt=e.pathBBox=function(t){var e=ft(t);if(e.bbox)return tt(e.bbox);if(!t)return{x:0,y:0,width:0,height:0,x2:0,y2:0};for(var r,i=0,n=0,a=[],s=[],o=0,l=(t=Tt(t)).length;o<l;o++)if(\"M\"==(r=t[o])[0])i=r[1],n=r[2],a.push(i),s.push(n);else{var h=St(i,n,r[1],r[2],r[3],r[4],r[5],r[6]);a=a[f](h.min.x,h.max.x),s=s[f](h.min.y,h.max.y),i=r[5],n=r[6]}var u=k[c](0,a),p=k[c](0,s),d=w[c](0,a),g=w[c](0,s),x=d-u,v=g-p,y={x:u,y:p,x2:d,y2:g,width:x,height:v,cx:u+x/2,cy:p+v/2};return e.bbox=tt(y),y},mt=function(t){var r=tt(t);return r.toString=e._path2string,r},bt=e._pathToRelative=function(t){var r=ft(t);if(r.rel)return mt(r.rel);e.is(t,A)&&e.is(t&&t[0],A)||(t=e.parsePathString(t));var i=[],n=0,a=0,s=0,o=0,l=0;\"M\"==t[0][0]&&(s=n=t[0][1],o=a=t[0][2],l++,i.push([\"M\",n,a]));for(var h=l,u=t.length;h<u;h++){var c=i[h]=[],f=t[h];if(f[0]!=b.call(f[0]))switch(c[0]=b.call(f[0]),c[0]){case\"a\":c[1]=f[1],c[2]=f[2],c[3]=f[3],c[4]=f[4],c[5]=f[5],c[6]=+(f[6]-n).toFixed(3),c[7]=+(f[7]-a).toFixed(3);break;case\"v\":c[1]=+(f[1]-a).toFixed(3);break;case\"m\":s=f[1],o=f[2];default:for(var p=1,d=f.length;p<d;p++)c[p]=+(f[p]-(p%2?n:a)).toFixed(3)}else{c=i[h]=[],\"m\"==f[0]&&(s=f[1]+n,o=f[2]+a);for(var g=0,x=f.length;g<x;g++)i[h][g]=f[g]}var v=i[h].length;switch(i[h][0]){case\"z\":n=s,a=o;break;case\"h\":n+=+i[h][v-1];break;case\"v\":a+=+i[h][v-1];break;default:n+=+i[h][v-2],a+=+i[h][v-1]}}return i.toString=e._path2string,r.rel=mt(i),i},_t=e._pathToAbsolute=function(t){var r=ft(t);if(r.abs)return mt(r.abs);if(e.is(t,A)&&e.is(t&&t[0],A)||(t=e.parsePathString(t)),!t||!t.length)return[[\"M\",0,0]];var i=[],n=0,a=0,s=0,o=0,l=0;\"M\"==t[0][0]&&(s=n=+t[0][1],o=a=+t[0][2],l++,i[0]=[\"M\",n,a]);for(var h,u,c=3==t.length&&\"M\"==t[0][0]&&\"R\"==t[1][0].toUpperCase()&&\"Z\"==t[2][0].toUpperCase(),p=l,d=t.length;p<d;p++){if(i.push(h=[]),(u=t[p])[0]!=R.call(u[0]))switch(h[0]=R.call(u[0]),h[0]){case\"A\":h[1]=u[1],h[2]=u[2],h[3]=u[3],h[4]=u[4],h[5]=u[5],h[6]=+(u[6]+n),h[7]=+(u[7]+a);break;case\"V\":h[1]=+u[1]+a;break;case\"H\":h[1]=+u[1]+n;break;case\"R\":for(var g=[n,a][f](u.slice(1)),x=2,v=g.length;x<v;x++)g[x]=+g[x]+n,g[++x]=+g[x]+a;i.pop(),i=i[f](ct(g,c));break;case\"M\":s=+u[1]+n,o=+u[2]+a;default:for(x=1,v=u.length;x<v;x++)h[x]=+u[x]+(x%2?n:a)}else if(\"R\"==u[0])g=[n,a][f](u.slice(1)),i.pop(),i=i[f](ct(g,c)),h=[\"R\"][f](u.slice(-2));else for(var y=0,m=u.length;y<m;y++)h[y]=u[y];switch(h[0]){case\"Z\":n=s,a=o;break;case\"H\":n=h[1];break;case\"V\":a=h[1];break;case\"M\":s=h[h.length-2],o=h[h.length-1];default:n=h[h.length-2],a=h[h.length-1]}}return i.toString=e._path2string,r.abs=mt(i),i},wt=function(t,e,r,i){return[t,e,r,i,r,i]},kt=function(t,e,r,i,n,a){return[1/3*t+2/3*r,1/3*e+2/3*i,1/3*n+2/3*r,1/3*a+2/3*i,n,a]},Bt=function(t,e,r,i,n,a,s,o,l,h){var u,c=120*S/180,p=S/180*(+n||0),d=[],g=ht(function(t,e,r){return{x:t*_.cos(r)-e*_.sin(r),y:t*_.sin(r)+e*_.cos(r)}});if(h)A=h[0],M=h[1],C=h[2],T=h[3];else{t=(u=g(t,e,-p)).x,e=u.y,o=(u=g(o,l,-p)).x,l=u.y;_.cos(S/180*n),_.sin(S/180*n);var x=(t-o)/2,y=(e-l)/2,m=x*x/(r*r)+y*y/(i*i);m>1&&(r*=m=_.sqrt(m),i*=m);var b=r*r,w=i*i,k=(a==s?-1:1)*_.sqrt(B((b*w-b*y*y-w*x*x)/(b*y*y+w*x*x))),C=k*r*y/i+(t+o)/2,T=k*-i*x/r+(e+l)/2,A=_.asin(((e-T)/i).toFixed(9)),M=_.asin(((l-T)/i).toFixed(9));(A=t<C?S-A:A)<0&&(A=2*S+A),(M=o<C?S-M:M)<0&&(M=2*S+M),s&&A>M&&(A-=2*S),!s&&M>A&&(M-=2*S)}var E=M-A;if(B(E)>c){var N=M,L=o,P=l;M=A+c*(s&&M>A?1:-1),o=C+r*_.cos(M),l=T+i*_.sin(M),d=Bt(o,l,r,i,n,0,s,L,P,[M,N,C,T])}E=M-A;var z=_.cos(A),F=_.sin(A),R=_.cos(M),j=_.sin(M),I=_.tan(E/4),D=4/3*r*I,q=4/3*i*I,O=[t,e],V=[t+D*F,e-q*z],W=[o+D*j,l-q*R],Y=[o,l];if(V[0]=2*O[0]-V[0],V[1]=2*O[1]-V[1],h)return[V,W,Y][f](d);for(var G=[],H=0,X=(d=[V,W,Y][f](d).join()[v](\",\")).length;H<X;H++)G[H]=H%2?g(d[H-1],d[H],p).y:g(d[H],d[H+1],p).x;return G},Ct=function(t,e,r,i,n,a,s,o,l){var h=1-l;return{x:C(h,3)*t+3*C(h,2)*l*r+3*h*l*l*n+C(l,3)*s,y:C(h,3)*e+3*C(h,2)*l*i+3*h*l*l*a+C(l,3)*o}},St=ht(function(t,e,r,i,n,a,s,o){var l,h=n-2*r+t-(s-2*n+r),u=2*(r-t)-2*(n-r),f=t-r,p=(-u+_.sqrt(u*u-4*h*f))/2/h,d=(-u-_.sqrt(u*u-4*h*f))/2/h,g=[e,o],x=[t,s];return B(p)>\"1e12\"&&(p=.5),B(d)>\"1e12\"&&(d=.5),p>0&&p<1&&(l=Ct(t,e,r,i,n,a,s,o,p),x.push(l.x),g.push(l.y)),d>0&&d<1&&(l=Ct(t,e,r,i,n,a,s,o,d),x.push(l.x),g.push(l.y)),h=a-2*i+e-(o-2*a+i),f=e-i,p=(-(u=2*(i-e)-2*(a-i))+_.sqrt(u*u-4*h*f))/2/h,d=(-u-_.sqrt(u*u-4*h*f))/2/h,B(p)>\"1e12\"&&(p=.5),B(d)>\"1e12\"&&(d=.5),p>0&&p<1&&(l=Ct(t,e,r,i,n,a,s,o,p),x.push(l.x),g.push(l.y)),d>0&&d<1&&(l=Ct(t,e,r,i,n,a,s,o,d),x.push(l.x),g.push(l.y)),{min:{x:k[c](0,x),y:k[c](0,g)},max:{x:w[c](0,x),y:w[c](0,g)}}}),Tt=e._path2curve=ht(function(t,e){var r=!e&&ft(t);if(!e&&r.curve)return mt(r.curve);for(var i=_t(t),n=e&&_t(e),a={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},s={x:0,y:0,bx:0,by:0,X:0,Y:0,qx:null,qy:null},o=function(t,e,r){var i,n;if(!t)return[\"C\",e.x,e.y,e.x,e.y,e.x,e.y];switch(!(t[0]in{T:1,Q:1})&&(e.qx=e.qy=null),t[0]){case\"M\":e.X=t[1],e.Y=t[2];break;case\"A\":t=[\"C\"][f](Bt[c](0,[e.x,e.y][f](t.slice(1))));break;case\"S\":\"C\"==r||\"S\"==r?(i=2*e.x-e.bx,n=2*e.y-e.by):(i=e.x,n=e.y),t=[\"C\",i,n][f](t.slice(1));break;case\"T\":\"Q\"==r||\"T\"==r?(e.qx=2*e.x-e.qx,e.qy=2*e.y-e.qy):(e.qx=e.x,e.qy=e.y),t=[\"C\"][f](kt(e.x,e.y,e.qx,e.qy,t[1],t[2]));break;case\"Q\":e.qx=t[1],e.qy=t[2],t=[\"C\"][f](kt(e.x,e.y,t[1],t[2],t[3],t[4]));break;case\"L\":t=[\"C\"][f](wt(e.x,e.y,t[1],t[2]));break;case\"H\":t=[\"C\"][f](wt(e.x,e.y,t[1],e.y));break;case\"V\":t=[\"C\"][f](wt(e.x,e.y,e.x,t[1]));break;case\"Z\":t=[\"C\"][f](wt(e.x,e.y,e.X,e.Y))}return t},l=function(t,e){if(t[e].length>7){t[e].shift();for(var r=t[e];r.length;)u[e]=\"A\",n&&(p[e]=\"A\"),t.splice(e++,0,[\"C\"][f](r.splice(0,6)));t.splice(e,1),v=w(i.length,n&&n.length||0)}},h=function(t,e,r,a,s){t&&e&&\"M\"==t[s][0]&&\"M\"!=e[s][0]&&(e.splice(s,0,[\"M\",a.x,a.y]),r.bx=0,r.by=0,r.x=t[s][1],r.y=t[s][2],v=w(i.length,n&&n.length||0))},u=[],p=[],d=\"\",g=\"\",x=0,v=w(i.length,n&&n.length||0);x<v;x++){i[x]&&(d=i[x][0]),\"C\"!=d&&(u[x]=d,x&&(g=u[x-1])),i[x]=o(i[x],a,g),\"A\"!=u[x]&&\"C\"==d&&(u[x]=\"C\"),l(i,x),n&&(n[x]&&(d=n[x][0]),\"C\"!=d&&(p[x]=d,x&&(g=p[x-1])),n[x]=o(n[x],s,g),\"A\"!=p[x]&&\"C\"==d&&(p[x]=\"C\"),l(n,x)),h(i,n,a,s,x),h(n,i,s,a,x);var y=i[x],m=n&&n[x],b=y.length,_=n&&m.length;a.x=y[b-2],a.y=y[b-1],a.bx=z(y[b-4])||a.x,a.by=z(y[b-3])||a.y,s.bx=n&&(z(m[_-4])||s.x),s.by=n&&(z(m[_-3])||s.y),s.x=n&&m[_-2],s.y=n&&m[_-1]}return n||(r.curve=mt(i)),n?[i,n]:i},null,mt),At=(e._parseDots=ht(function(t){for(var r=[],i=0,n=t.length;i<n;i++){var a={},s=t[i].match(/^([^:]*):?([\\d\\.]*)/);if(a.color=e.getRGB(s[1]),a.color.error)return null;a.opacity=a.color.opacity,a.color=a.color.hex,s[2]&&(a.offset=s[2]+\"%\"),r.push(a)}for(i=1,n=r.length-1;i<n;i++)if(!r[i].offset){for(var o=z(r[i-1].offset||0),l=0,h=i+1;h<n;h++)if(r[h].offset){l=r[h].offset;break}l||(l=100,h=n);for(var u=((l=z(l))-o)/(h-i+1);i<h;i++)o+=u,r[i].offset=o+\"%\"}return r}),e._tear=function(t,e){t==e.top&&(e.top=t.prev),t==e.bottom&&(e.bottom=t.next),t.next&&(t.next.prev=t.prev),t.prev&&(t.prev.next=t.next)}),Mt=(e._tofront=function(t,e){e.top!==t&&(At(t,e),t.next=null,t.prev=e.top,e.top.next=t,e.top=t)},e._toback=function(t,e){e.bottom!==t&&(At(t,e),t.next=e.bottom,t.prev=null,e.bottom.prev=t,e.bottom=t)},e._insertafter=function(t,e,r){At(t,r),e==r.top&&(r.top=t),e.next&&(e.next.prev=t),t.next=e.next,t.prev=e,e.next=t},e._insertbefore=function(t,e,r){At(t,r),e==r.bottom&&(r.bottom=t),e.prev&&(e.prev.next=t),t.prev=e.prev,e.prev=t,t.next=e},e.toMatrix=function(t,e){var r=yt(t),i={_:{transform:d},getBBox:function(){return r}};return Et(i,e),i.matrix}),Et=(e.transformPath=function(t,e){return Q(t,Mt(t,e))},e._extractTransform=function(t,r){if(null==r)return t._.transform;r=x(r).replace(/\\.{3}|\\u2026/g,t._.transform||d);var i,n,a=e.parseTransformString(r),s=0,o=1,l=1,h=t._,u=new Pt;if(h.transform=a||[],a)for(var c=0,f=a.length;c<f;c++){var p,g,v,y,m,b=a[c],_=b.length,w=x(b[0]).toLowerCase(),k=b[0]!=w,B=k?u.invert():0;\"t\"==w&&3==_?k?(p=B.x(0,0),g=B.y(0,0),v=B.x(b[1],b[2]),y=B.y(b[1],b[2]),u.translate(v-p,y-g)):u.translate(b[1],b[2]):\"r\"==w?2==_?(m=m||t.getBBox(1),u.rotate(b[1],m.x+m.width/2,m.y+m.height/2),s+=b[1]):4==_&&(k?(v=B.x(b[2],b[3]),y=B.y(b[2],b[3]),u.rotate(b[1],v,y)):u.rotate(b[1],b[2],b[3]),s+=b[1]):\"s\"==w?2==_||3==_?(m=m||t.getBBox(1),u.scale(b[1],b[_-1],m.x+m.width/2,m.y+m.height/2),o*=b[1],l*=b[_-1]):5==_&&(k?(v=B.x(b[3],b[4]),y=B.y(b[3],b[4]),u.scale(b[1],b[2],v,y)):u.scale(b[1],b[2],b[3],b[4]),o*=b[1],l*=b[2]):\"m\"==w&&7==_&&u.add(b[1],b[2],b[3],b[4],b[5],b[6]),h.dirtyT=1,t.matrix=u}t.matrix=u,h.sx=o,h.sy=l,h.deg=s,h.dx=i=u.e,h.dy=n=u.f,1==o&&1==l&&!s&&h.bbox?(h.bbox.x+=+i,h.bbox.y+=+n):h.dirtyT=1}),Nt=function(t){var e=t[0];switch(e.toLowerCase()){case\"t\":return[e,0,0];case\"m\":return[e,1,0,0,1,0,0];case\"r\":return 4==t.length?[e,0,t[2],t[3]]:[e,0];case\"s\":return 5==t.length?[e,1,1,t[3],t[4]]:3==t.length?[e,1,1]:[e,1]}},Lt=e._equaliseTransform=function(t,r){r=x(r).replace(/\\.{3}|\\u2026/g,t),t=e.parseTransformString(t)||[],r=e.parseTransformString(r)||[];for(var i,n,a,s,o=w(t.length,r.length),l=[],h=[],u=0;u<o;u++){if(a=t[u]||Nt(r[u]),s=r[u]||Nt(a),a[0]!=s[0]||\"r\"==a[0].toLowerCase()&&(a[2]!=s[2]||a[3]!=s[3])||\"s\"==a[0].toLowerCase()&&(a[3]!=s[3]||a[4]!=s[4]))return;for(l[u]=[],h[u]=[],i=0,n=w(a.length,s.length);i<n;i++)i in a&&(l[u][i]=a[i]),i in s&&(h[u][i]=s[i])}return{from:l,to:h}};function Pt(t,e,r,i,n,a){null!=t?(this.a=+t,this.b=+e,this.c=+r,this.d=+i,this.e=+n,this.f=+a):(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0)}e._getContainer=function(t,r,i,n){var a;if(null!=(a=null!=n||e.is(t,\"object\")?t:l.doc.getElementById(t)))return a.tagName?null==r?{container:a,width:a.style.pixelWidth||a.offsetWidth,height:a.style.pixelHeight||a.offsetHeight}:{container:a,width:r,height:i}:{container:1,x:t,y:r,width:i,height:n}},e.pathToRelative=bt,e._engine={},e.path2curve=Tt,e.matrix=function(t,e,r,i,n,a){return new Pt(t,e,r,i,n,a)},function(t){function r(t){return t[0]*t[0]+t[1]*t[1]}function i(t){var e=_.sqrt(r(t));t[0]&&(t[0]/=e),t[1]&&(t[1]/=e)}t.add=function(t,e,r,i,n,a){var s,o,l,h,u=[[],[],[]],c=[[this.a,this.c,this.e],[this.b,this.d,this.f],[0,0,1]],f=[[t,r,n],[e,i,a],[0,0,1]];for(t&&t instanceof Pt&&(f=[[t.a,t.c,t.e],[t.b,t.d,t.f],[0,0,1]]),s=0;s<3;s++)for(o=0;o<3;o++){for(h=0,l=0;l<3;l++)h+=c[s][l]*f[l][o];u[s][o]=h}this.a=u[0][0],this.b=u[1][0],this.c=u[0][1],this.d=u[1][1],this.e=u[0][2],this.f=u[1][2]},t.invert=function(){var t=this,e=t.a*t.d-t.b*t.c;return new Pt(t.d/e,-t.b/e,-t.c/e,t.a/e,(t.c*t.f-t.d*t.e)/e,(t.b*t.e-t.a*t.f)/e)},t.clone=function(){return new Pt(this.a,this.b,this.c,this.d,this.e,this.f)},t.translate=function(t,e){this.add(1,0,0,1,t,e)},t.scale=function(t,e,r,i){null==e&&(e=t),(r||i)&&this.add(1,0,0,1,r,i),this.add(t,0,0,e,0,0),(r||i)&&this.add(1,0,0,1,-r,-i)},t.rotate=function(t,r,i){t=e.rad(t),r=r||0,i=i||0;var n=+_.cos(t).toFixed(9),a=+_.sin(t).toFixed(9);this.add(n,a,-a,n,r,i),this.add(1,0,0,1,-r,-i)},t.x=function(t,e){return t*this.a+e*this.c+this.e},t.y=function(t,e){return t*this.b+e*this.d+this.f},t.get=function(t){return+this[x.fromCharCode(97+t)].toFixed(4)},t.toString=function(){return e.svg?\"matrix(\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)].join()+\")\":[this.get(0),this.get(2),this.get(1),this.get(3),0,0].join()},t.toFilter=function(){return\"progid:DXImageTransform.Microsoft.Matrix(M11=\"+this.get(0)+\", M12=\"+this.get(2)+\", M21=\"+this.get(1)+\", M22=\"+this.get(3)+\", Dx=\"+this.get(4)+\", Dy=\"+this.get(5)+\", sizingmethod='auto expand')\"},t.offset=function(){return[this.e.toFixed(4),this.f.toFixed(4)]},t.split=function(){var t={};t.dx=this.e,t.dy=this.f;var n=[[this.a,this.c],[this.b,this.d]];t.scalex=_.sqrt(r(n[0])),i(n[0]),t.shear=n[0][0]*n[1][0]+n[0][1]*n[1][1],n[1]=[n[1][0]-n[0][0]*t.shear,n[1][1]-n[0][1]*t.shear],t.scaley=_.sqrt(r(n[1])),i(n[1]),t.shear/=t.scaley;var a=-n[0][1],s=n[1][1];return s<0?(t.rotate=e.deg(_.acos(s)),a<0&&(t.rotate=360-t.rotate)):t.rotate=e.deg(_.asin(a)),t.isSimple=!(+t.shear.toFixed(9)||t.scalex.toFixed(9)!=t.scaley.toFixed(9)&&t.rotate),t.isSuperSimple=!+t.shear.toFixed(9)&&t.scalex.toFixed(9)==t.scaley.toFixed(9)&&!t.rotate,t.noRotation=!+t.shear.toFixed(9)&&!t.rotate,t},t.toTransformString=function(t){var e=t||this[v]();return e.isSimple?(e.scalex=+e.scalex.toFixed(4),e.scaley=+e.scaley.toFixed(4),e.rotate=+e.rotate.toFixed(4),(e.dx||e.dy?\"t\"+[e.dx,e.dy]:d)+(1!=e.scalex||1!=e.scaley?\"s\"+[e.scalex,e.scaley,0,0]:d)+(e.rotate?\"r\"+[e.rotate,0,0]:d)):\"m\"+[this.get(0),this.get(1),this.get(2),this.get(3),this.get(4),this.get(5)]}}(Pt.prototype);for(var zt=function(){this.returnValue=!1},Ft=function(){return this.originalEvent.preventDefault()},Rt=function(){this.cancelBubble=!0},jt=function(){return this.originalEvent.stopPropagation()},It=function(t){var e=l.doc.documentElement.scrollTop||l.doc.body.scrollTop,r=l.doc.documentElement.scrollLeft||l.doc.body.scrollLeft;return{x:t.clientX+r,y:t.clientY+e}},Dt=l.doc.addEventListener?function(t,e,r,i){var n=function(t){var e=It(t);return r.call(i,t,e.x,e.y)};if(t.addEventListener(e,n,!1),p&&m[e]){var a=function(e){for(var n=It(e),a=e,s=0,o=e.targetTouches&&e.targetTouches.length;s<o;s++)if(e.targetTouches[s].target==t){(e=e.targetTouches[s]).originalEvent=a,e.preventDefault=Ft,e.stopPropagation=jt;break}return r.call(i,e,n.x,n.y)};t.addEventListener(m[e],a,!1)}return function(){return t.removeEventListener(e,n,!1),p&&m[e]&&t.removeEventListener(m[e],a,!1),!0}}:l.doc.attachEvent?function(t,e,r,i){var n=function(t){t=t||l.win.event;var e=l.doc.documentElement.scrollTop||l.doc.body.scrollTop,n=l.doc.documentElement.scrollLeft||l.doc.body.scrollLeft,a=t.clientX+n,s=t.clientY+e;return t.preventDefault=t.preventDefault||zt,t.stopPropagation=t.stopPropagation||Rt,r.call(i,t,a,s)};return t.attachEvent(\"on\"+e,n),function(){return t.detachEvent(\"on\"+e,n),!0}}:void 0,qt=[],Ot=function(e){for(var r,i=e.clientX,n=e.clientY,a=l.doc.documentElement.scrollTop||l.doc.body.scrollTop,s=l.doc.documentElement.scrollLeft||l.doc.body.scrollLeft,o=qt.length;o--;){if(r=qt[o],p&&e.touches){for(var h,u=e.touches.length;u--;)if((h=e.touches[u]).identifier==r.el._drag.id){i=h.clientX,n=h.clientY,(e.originalEvent?e.originalEvent:e).preventDefault();break}}else e.preventDefault();var c,f=r.el.node,d=f.nextSibling,g=f.parentNode,x=f.style.display;l.win.opera&&g.removeChild(f),f.style.display=\"none\",c=r.el.paper.getElementByPoint(i,n),f.style.display=x,l.win.opera&&(d?g.insertBefore(f,d):g.appendChild(f)),c&&t(\"raphael.drag.over.\"+r.el.id,r.el,c),i+=s,n+=a,t(\"raphael.drag.move.\"+r.el.id,r.move_scope||r.el,i-r.el._drag.x,n-r.el._drag.y,i,n,e)}},Vt=function(r){e.unmousemove(Ot).unmouseup(Vt);for(var i,n=qt.length;n--;)(i=qt[n]).el._drag={},t(\"raphael.drag.end.\"+i.el.id,i.end_scope||i.start_scope||i.move_scope||i.el,r);qt=[]},Wt=e.el={},Yt=y.length;Yt--;)!function(t){e[t]=Wt[t]=function(r,i){return e.is(r,\"function\")&&(this.events=this.events||[],this.events.push({name:t,f:r,unbind:Dt(this.shape||this.node||l.doc,t,r,i||this)})),this},e[\"un\"+t]=Wt[\"un\"+t]=function(r){for(var i=this.events||[],n=i.length;n--;)i[n].name!=t||!e.is(r,\"undefined\")&&i[n].f!=r||(i[n].unbind(),i.splice(n,1),!i.length&&delete this.events);return this}}(y[Yt]);Wt.data=function(r,i){var n=G[this.id]=G[this.id]||{};if(0==arguments.length)return n;if(1==arguments.length){if(e.is(r,\"object\")){for(var a in r)r[o](a)&&this.data(a,r[a]);return this}return t(\"raphael.data.get.\"+this.id,this,n[r],r),n[r]}return n[r]=i,t(\"raphael.data.set.\"+this.id,this,i,r),this},Wt.removeData=function(t){return null==t?delete G[this.id]:G[this.id]&&delete G[this.id][t],this},Wt.getData=function(){return tt(G[this.id]||{})},Wt.hover=function(t,e,r,i){return this.mouseover(t,r).mouseout(e,i||r)},Wt.unhover=function(t,e){return this.unmouseover(t).unmouseout(e)};var Gt=[];Wt.drag=function(r,i,n,a,s,o){function h(h){(h.originalEvent||h).preventDefault();var u=h.clientX,c=h.clientY,f=l.doc.documentElement.scrollTop||l.doc.body.scrollTop,d=l.doc.documentElement.scrollLeft||l.doc.body.scrollLeft;if(this._drag.id=h.identifier,p&&h.touches)for(var g,x=h.touches.length;x--;)if(g=h.touches[x],this._drag.id=g.identifier,g.identifier==this._drag.id){u=g.clientX,c=g.clientY;break}this._drag.x=u+d,this._drag.y=c+f,!qt.length&&e.mousemove(Ot).mouseup(Vt),qt.push({el:this,move_scope:a,start_scope:s,end_scope:o}),i&&t.on(\"raphael.drag.start.\"+this.id,i),r&&t.on(\"raphael.drag.move.\"+this.id,r),n&&t.on(\"raphael.drag.end.\"+this.id,n),t(\"raphael.drag.start.\"+this.id,s||a||this,this._drag.x,this._drag.y,h)}return this._drag={},Gt.push({el:this,start:h}),this.mousedown(h),this},Wt.onDragOver=function(e){e?t.on(\"raphael.drag.over.\"+this.id,e):t.unbind(\"raphael.drag.over.\"+this.id)},Wt.undrag=function(){for(var r=Gt.length;r--;)Gt[r].el==this&&(this.unmousedown(Gt[r].start),Gt.splice(r,1),t.unbind(\"raphael.drag.*.\"+this.id));!Gt.length&&e.unmousemove(Ot).unmouseup(Vt),qt=[]},i.circle=function(t,r,i){var n=e._engine.circle(this,t||0,r||0,i||0);return this.__set__&&this.__set__.push(n),n},i.rect=function(t,r,i,n,a){var s=e._engine.rect(this,t||0,r||0,i||0,n||0,a||0);return this.__set__&&this.__set__.push(s),s},i.ellipse=function(t,r,i,n){var a=e._engine.ellipse(this,t||0,r||0,i||0,n||0);return this.__set__&&this.__set__.push(a),a},i.path=function(t){t&&!e.is(t,\"string\")&&!e.is(t[0],A)&&(t+=d);var r=e._engine.path(e.format[c](e,arguments),this);return this.__set__&&this.__set__.push(r),r},i.image=function(t,r,i,n,a){var s=e._engine.image(this,t||\"about:blank\",r||0,i||0,n||0,a||0);return this.__set__&&this.__set__.push(s),s},i.text=function(t,r,i){var n=e._engine.text(this,t||0,r||0,x(i));return this.__set__&&this.__set__.push(n),n},i.set=function(t){!e.is(t,\"array\")&&(t=Array.prototype.splice.call(arguments,0,arguments.length));var r=new ce(t);return this.__set__&&this.__set__.push(r),r.paper=this,r.type=\"set\",r},i.setStart=function(t){this.__set__=t||this.set()},i.setFinish=function(t){var e=this.__set__;return delete this.__set__,e},i.getSize=function(){var t=this.canvas.parentNode;return{width:t.offsetWidth,height:t.offsetHeight}},i.setSize=function(t,r){return e._engine.setSize.call(this,t,r)},i.setViewBox=function(t,r,i,n,a){return e._engine.setViewBox.call(this,t,r,i,n,a)},i.top=i.bottom=null,i.raphael=e;function Ht(){return this.x+g+this.y+g+this.width+\" × \"+this.height}i.getElementByPoint=function(t,e){var r,i,n,a,s,o,h,u=this.canvas,c=l.doc.elementFromPoint(t,e);if(l.win.opera&&\"svg\"==c.tagName){var f=(i=(r=u).getBoundingClientRect(),n=r.ownerDocument,a=n.body,s=n.documentElement,o=s.clientTop||a.clientTop||0,h=s.clientLeft||a.clientLeft||0,{y:i.top+(l.win.pageYOffset||s.scrollTop||a.scrollTop)-o,x:i.left+(l.win.pageXOffset||s.scrollLeft||a.scrollLeft)-h}),p=u.createSVGRect();p.x=t-f.x,p.y=e-f.y,p.width=p.height=1;var d=u.getIntersectionList(p,null);d.length&&(c=d[d.length-1])}if(!c)return null;for(;c.parentNode&&c!=u.parentNode&&!c.raphael;)c=c.parentNode;return c==this.canvas.parentNode&&(c=u),c=c&&c.raphael?this.getById(c.raphaelid):null},i.getElementsByBBox=function(t){var r=this.set();return this.forEach(function(i){e.isBBoxIntersect(i.getBBox(),t)&&r.push(i)}),r},i.getById=function(t){for(var e=this.bottom;e;){if(e.id==t)return e;e=e.next}return null},i.forEach=function(t,e){for(var r=this.bottom;r;){if(!1===t.call(e,r))return this;r=r.next}return this},i.getElementsByPoint=function(t,e){var r=this.set();return this.forEach(function(i){i.isPointInside(t,e)&&r.push(i)}),r},Wt.isPointInside=function(t,r){var i=this.realPath=Z[this.type](this);return this.attr(\"transform\")&&this.attr(\"transform\").length&&(i=e.transformPath(i,this.attr(\"transform\"))),e.isPointInsidePath(i,t,r)},Wt.getBBox=function(t){if(this.removed)return{};var e=this._;return t?(!e.dirty&&e.bboxwt||(this.realPath=Z[this.type](this),e.bboxwt=yt(this.realPath),e.bboxwt.toString=Ht,e.dirty=0),e.bboxwt):((e.dirty||e.dirtyT||!e.bbox)&&(!e.dirty&&this.realPath||(e.bboxwt=0,this.realPath=Z[this.type](this)),e.bbox=yt(Q(this.realPath,this.matrix)),e.bbox.toString=Ht,e.dirty=e.dirtyT=0),e.bbox)},Wt.clone=function(){if(this.removed)return null;var t=this.paper[this.type]().attr(this.attr());return this.__set__&&this.__set__.push(t),t},Wt.glow=function(t){if(\"text\"==this.type)return null;var e={width:((t=t||{}).width||10)+(+this.attr(\"stroke-width\")||1),fill:t.fill||!1,opacity:null==t.opacity?.5:t.opacity,offsetx:t.offsetx||0,offsety:t.offsety||0,color:t.color||\"#000\"},r=e.width/2,i=this.paper,n=i.set(),a=this.realPath||Z[this.type](this);a=this.matrix?Q(a,this.matrix):a;for(var s=1;s<r+1;s++)n.push(i.path(a).attr({stroke:e.color,fill:e.fill?e.color:\"none\",\"stroke-linejoin\":\"round\",\"stroke-linecap\":\"round\",\"stroke-width\":+(e.width/r*s).toFixed(3),opacity:+(e.opacity/r).toFixed(3)}));return n.insertBefore(this).translate(e.offsetx,e.offsety)};var Xt=function(t,r,i,n,a,s,o,l,h){return null==h?dt(t,r,i,n,a,s,o,l):e.findDotsAtSegment(t,r,i,n,a,s,o,l,function(t,e,r,i,n,a,s,o,l){if(!(l<0||dt(t,e,r,i,n,a,s,o)<l)){var h,u=.5,c=1-u;for(h=dt(t,e,r,i,n,a,s,o,c);B(h-l)>.01;)h=dt(t,e,r,i,n,a,s,o,c+=(h<l?1:-1)*(u/=2));return c}}(t,r,i,n,a,s,o,l,h))},Ut=function(t,r){return function(i,n,a){for(var s,o,l,h,u,c=\"\",f={},p=0,d=0,g=(i=Tt(i)).length;d<g;d++){if(\"M\"==(l=i[d])[0])s=+l[1],o=+l[2];else{if(p+(h=Xt(s,o,l[1],l[2],l[3],l[4],l[5],l[6]))>n){if(r&&!f.start){if(c+=[\"C\"+(u=Xt(s,o,l[1],l[2],l[3],l[4],l[5],l[6],n-p)).start.x,u.start.y,u.m.x,u.m.y,u.x,u.y],a)return c;f.start=c,c=[\"M\"+u.x,u.y+\"C\"+u.n.x,u.n.y,u.end.x,u.end.y,l[5],l[6]].join(),p+=h,s=+l[5],o=+l[6];continue}if(!t&&!r)return{x:(u=Xt(s,o,l[1],l[2],l[3],l[4],l[5],l[6],n-p)).x,y:u.y,alpha:u.alpha}}p+=h,s=+l[5],o=+l[6]}c+=l.shift()+l}return f.end=c,(u=t?p:r?f:e.findDotsAtSegment(s,o,l[0],l[1],l[2],l[3],l[4],l[5],1)).alpha&&(u={x:u.x,y:u.y,alpha:u.alpha}),u}},$t=Ut(1),Zt=Ut(),Qt=Ut(0,1);e.getTotalLength=$t,e.getPointAtLength=Zt,e.getSubpath=function(t,e,r){if(this.getTotalLength(t)-r<1e-6)return Qt(t,e).end;var i=Qt(t,r,1);return e?Qt(i,e).end:i},Wt.getTotalLength=function(){var t=this.getPath();if(t)return this.node.getTotalLength?this.node.getTotalLength():$t(t)},Wt.getPointAtLength=function(t){var e=this.getPath();if(e)return Zt(e,t)},Wt.getPath=function(){var t,r=e._getPath[this.type];if(\"text\"!=this.type&&\"set\"!=this.type)return r&&(t=r(this)),t},Wt.getSubpath=function(t,r){var i=this.getPath();if(i)return e.getSubpath(i,t,r)};var Jt=e.easing_formulas={linear:function(t){return t},\"<\":function(t){return C(t,1.7)},\">\":function(t){return C(t,.48)},\"<>\":function(t){var e=.48-t/1.04,r=_.sqrt(.1734+e*e),i=r-e,n=-r-e,a=C(B(i),1/3)*(i<0?-1:1)+C(B(n),1/3)*(n<0?-1:1)+.5;return 3*(1-a)*a*a+a*a*a},backIn:function(t){var e=1.70158;return t*t*((e+1)*t-e)},backOut:function(t){var e=1.70158;return(t-=1)*t*((e+1)*t+e)+1},elastic:function(t){return t==!!t?t:C(2,-10*t)*_.sin(2*S*(t-.075)/.3)+1},bounce:function(t){var e=7.5625,r=2.75;return t<1/r?e*t*t:t<2/r?e*(t-=1.5/r)*t+.75:t<2.5/r?e*(t-=2.25/r)*t+.9375:e*(t-=2.625/r)*t+.984375}};Jt.easeIn=Jt[\"ease-in\"]=Jt[\"<\"],Jt.easeOut=Jt[\"ease-out\"]=Jt[\">\"],Jt.easeInOut=Jt[\"ease-in-out\"]=Jt[\"<>\"],Jt[\"back-in\"]=Jt.backIn,Jt[\"back-out\"]=Jt.backOut;var Kt=[],te=window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){setTimeout(t,16)},ee=function(){for(var r=+new Date,i=0;i<Kt.length;i++){var n=Kt[i];if(!n.el.removed&&!n.paused){var a,s,l=r-n.start,h=n.ms,u=n.easing,c=n.from,p=n.diff,d=n.to,x=(n.t,n.el),v={},y={};if(n.initstatus?(l=(n.initstatus*n.anim.top-n.prev)/(n.percent-n.prev)*h,n.status=n.initstatus,delete n.initstatus,n.stop&&Kt.splice(i--,1)):n.status=(n.prev+(n.percent-n.prev)*(l/h))/n.anim.top,!(l<0))if(l<h){var m=u(l/h);for(var b in c)if(c[o](b)){switch(I[b]){case T:a=+c[b]+m*h*p[b];break;case\"colour\":a=\"rgb(\"+[re(P(c[b].r+m*h*p[b].r)),re(P(c[b].g+m*h*p[b].g)),re(P(c[b].b+m*h*p[b].b))].join(\",\")+\")\";break;case\"path\":a=[];for(var _=0,w=c[b].length;_<w;_++){a[_]=[c[b][_][0]];for(var k=1,B=c[b][_].length;k<B;k++)a[_][k]=+c[b][_][k]+m*h*p[b][_][k];a[_]=a[_].join(g)}a=a.join(g);break;case\"transform\":if(p[b].real)for(a=[],_=0,w=c[b].length;_<w;_++)for(a[_]=[c[b][_][0]],k=1,B=c[b][_].length;k<B;k++)a[_][k]=c[b][_][k]+m*h*p[b][_][k];else{var C=function(t){return+c[b][t]+m*h*p[b][t]};a=[[\"m\",C(0),C(1),C(2),C(3),C(4),C(5)]]}break;case\"csv\":if(\"clip-rect\"==b)for(a=[],_=4;_--;)a[_]=+c[b][_]+m*h*p[b][_];break;default:var S=[][f](c[b]);for(a=[],_=x.paper.customAttributes[b].length;_--;)a[_]=+S[_]+m*h*p[b][_]}v[b]=a}x.attr(v),function(e,r,i){setTimeout(function(){t(\"raphael.anim.frame.\"+e,r,i)})}(x.id,x,n.anim)}else{if(function(r,i,n){setTimeout(function(){t(\"raphael.anim.frame.\"+i.id,i,n),t(\"raphael.anim.finish.\"+i.id,i,n),e.is(r,\"function\")&&r.call(i)})}(n.callback,x,n.anim),x.attr(d),Kt.splice(i--,1),n.repeat>1&&!n.next){for(s in d)d[o](s)&&(y[s]=n.totalOrigin[s]);n.el.attr(y),ae(n.anim,n.el,n.anim.percents[0],null,n.totalOrigin,n.repeat-1)}n.next&&!n.stop&&ae(n.anim,n.el,n.next,null,n.totalOrigin,n.repeat)}}}Kt.length&&te(ee)},re=function(t){return t>255?255:t<0?0:t};function ie(t,e,r,i,n,a){var s=3*e,o=3*(i-e)-s,l=1-s-o,h=3*r,u=3*(n-r)-h,c=1-h-u;function f(t){return((l*t+o)*t+s)*t}return function(t,e){var r=function(t,e){var r,i,n,a,h,u;for(n=t,u=0;u<8;u++){if(a=f(n)-t,B(a)<e)return n;if(B(h=(3*l*n+2*o)*n+s)<1e-6)break;n-=a/h}if(i=1,(n=t)<(r=0))return r;if(n>i)return i;for(;r<i;){if(a=f(n),B(a-t)<e)return n;t>a?r=n:i=n,n=(i-r)/2+r}return n}(t,e);return((c*r+u)*r+h)*r}(t,1/(200*a))}function ne(t,e){var r=[],i={};if(this.ms=e,this.times=1,t){for(var n in t)t[o](n)&&(i[z(n)]=t[n],r.push(z(n)));r.sort(H)}this.anim=i,this.top=r[r.length-1],this.percents=r}function ae(r,i,a,s,l,h){a=z(a);var u,c,p,d,g,y,m=r.ms,b={},_={},w={};if(s)for(B=0,C=Kt.length;B<C;B++){var k=Kt[B];if(k.el.id==i.id&&k.anim==r){k.percent!=a?(Kt.splice(B,1),p=1):c=k,i.attr(k.totalOrigin);break}}else s=+_;for(var B=0,C=r.percents.length;B<C;B++){if(r.percents[B]==a||r.percents[B]>s*r.top){a=r.percents[B],g=r.percents[B-1]||0,m=m/r.top*(a-g),d=r.percents[B+1],u=r.anim[a];break}s&&i.attr(r.anim[r.percents[B]])}if(u){if(c)c.initstatus=s,c.start=new Date-c.ms*s;else{for(var S in u)if(u[o](S)&&(I[o](S)||i.paper.customAttributes[o](S)))switch(b[S]=i.attr(S),null==b[S]&&(b[S]=j[S]),_[S]=u[S],I[S]){case T:w[S]=(_[S]-b[S])/m;break;case\"colour\":b[S]=e.getRGB(b[S]);var A=e.getRGB(_[S]);w[S]={r:(A.r-b[S].r)/m,g:(A.g-b[S].g)/m,b:(A.b-b[S].b)/m};break;case\"path\":var M=Tt(b[S],_[S]),E=M[1];for(b[S]=M[0],w[S]=[],B=0,C=b[S].length;B<C;B++){w[S][B]=[0];for(var N=1,P=b[S][B].length;N<P;N++)w[S][B][N]=(E[B][N]-b[S][B][N])/m}break;case\"transform\":var F=i._,R=Lt(F[S],_[S]);if(R)for(b[S]=R.from,_[S]=R.to,w[S]=[],w[S].real=!0,B=0,C=b[S].length;B<C;B++)for(w[S][B]=[b[S][B][0]],N=1,P=b[S][B].length;N<P;N++)w[S][B][N]=(_[S][B][N]-b[S][B][N])/m;else{var D=i.matrix||new Pt,q={_:{transform:F.transform},getBBox:function(){return i.getBBox(1)}};b[S]=[D.a,D.b,D.c,D.d,D.e,D.f],Et(q,_[S]),_[S]=q._.transform,w[S]=[(q.matrix.a-D.a)/m,(q.matrix.b-D.b)/m,(q.matrix.c-D.c)/m,(q.matrix.d-D.d)/m,(q.matrix.e-D.e)/m,(q.matrix.f-D.f)/m]}break;case\"csv\":var O=x(u[S])[v](n),V=x(b[S])[v](n);if(\"clip-rect\"==S)for(b[S]=V,w[S]=[],B=V.length;B--;)w[S][B]=(O[B]-b[S][B])/m;_[S]=O;break;default:for(O=[][f](u[S]),V=[][f](b[S]),w[S]=[],B=i.paper.customAttributes[S].length;B--;)w[S][B]=((O[B]||0)-(V[B]||0))/m}var W=u.easing,Y=e.easing_formulas[W];if(!Y)if((Y=x(W).match(L))&&5==Y.length){var G=Y;Y=function(t){return ie(t,+G[1],+G[2],+G[3],+G[4],m)}}else Y=X;if(k={anim:r,percent:a,timestamp:y=u.start||r.start||+new Date,start:y+(r.del||0),status:0,initstatus:s||0,stop:!1,ms:m,easing:Y,from:b,diff:w,to:_,el:i,callback:u.callback,prev:g,next:d,repeat:h||r.times,origin:i.attr(),totalOrigin:l},Kt.push(k),s&&!c&&!p&&(k.stop=!0,k.start=new Date-m*s,1==Kt.length))return ee();p&&(k.start=new Date-k.ms*s),1==Kt.length&&te(ee)}t(\"raphael.anim.start.\"+i.id,i,r)}}function se(t){for(var e=0;e<Kt.length;e++)Kt[e].el.paper==t&&Kt.splice(e--,1)}Wt.animateWith=function(t,r,i,n,a,s){if(this.removed)return s&&s.call(this),this;var o=i instanceof ne?i:e.animation(i,n,a,s);ae(o,this,o.percents[0],null,this.attr());for(var l=0,h=Kt.length;l<h;l++)if(Kt[l].anim==r&&Kt[l].el==t){Kt[h-1].start=Kt[l].start;break}return this},Wt.onAnimation=function(e){return e?t.on(\"raphael.anim.frame.\"+this.id,e):t.unbind(\"raphael.anim.frame.\"+this.id),this},ne.prototype.delay=function(t){var e=new ne(this.anim,this.ms);return e.times=this.times,e.del=+t||0,e},ne.prototype.repeat=function(t){var e=new ne(this.anim,this.ms);return e.del=this.del,e.times=_.floor(w(t,0))||1,e},e.animation=function(t,r,i,n){if(t instanceof ne)return t;!e.is(i,\"function\")&&i||(n=n||i||null,i=null),t=Object(t),r=+r||0;var a,s,l={};for(s in t)t[o](s)&&z(s)!=s&&z(s)+\"%\"!=s&&(a=!0,l[s]=t[s]);if(a)return i&&(l.easing=i),n&&(l.callback=n),new ne({100:l},r);if(n){var h=0;for(var u in t){var c=F(u);t[o](u)&&c>h&&(h=c)}!t[h+=\"%\"].callback&&(t[h].callback=n)}return new ne(t,r)},Wt.animate=function(t,r,i,n){if(this.removed)return n&&n.call(this),this;var a=t instanceof ne?t:e.animation(t,r,i,n);return ae(a,this,a.percents[0],null,this.attr()),this},Wt.setTime=function(t,e){return t&&null!=e&&this.status(t,k(e,t.ms)/t.ms),this},Wt.status=function(t,e){var r,i,n=[],a=0;if(null!=e)return ae(t,this,-1,k(e,1)),this;for(r=Kt.length;a<r;a++)if((i=Kt[a]).el.id==this.id&&(!t||i.anim==t)){if(t)return i.status;n.push({anim:i.anim,status:i.status})}return t?0:n},Wt.pause=function(e){for(var r=0;r<Kt.length;r++)Kt[r].el.id!=this.id||e&&Kt[r].anim!=e||!1!==t(\"raphael.anim.pause.\"+this.id,this,Kt[r].anim)&&(Kt[r].paused=!0);return this},Wt.resume=function(e){for(var r=0;r<Kt.length;r++)if(Kt[r].el.id==this.id&&(!e||Kt[r].anim==e)){var i=Kt[r];!1!==t(\"raphael.anim.resume.\"+this.id,this,i.anim)&&(delete i.paused,this.status(i.anim,i.status))}return this},Wt.stop=function(e){for(var r=0;r<Kt.length;r++)Kt[r].el.id!=this.id||e&&Kt[r].anim!=e||!1!==t(\"raphael.anim.stop.\"+this.id,this,Kt[r].anim)&&Kt.splice(r--,1);return this},t.on(\"raphael.remove\",se),t.on(\"raphael.clear\",se),Wt.toString=function(){return\"Raphaël’s object\"};var oe,le,he,ue,ce=function(t){if(this.items=[],this.length=0,this.type=\"set\",t)for(var e=0,r=t.length;e<r;e++)!t[e]||t[e].constructor!=Wt.constructor&&t[e].constructor!=ce||(this[this.items.length]=this.items[this.items.length]=t[e],this.length++)},fe=ce.prototype;for(var pe in fe.push=function(){for(var t,e,r=0,i=arguments.length;r<i;r++)!(t=arguments[r])||t.constructor!=Wt.constructor&&t.constructor!=ce||(this[e=this.items.length]=this.items[e]=t,this.length++);return this},fe.pop=function(){return this.length&&delete this[this.length--],this.items.pop()},fe.forEach=function(t,e){for(var r=0,i=this.items.length;r<i;r++)if(!1===t.call(e,this.items[r],r))return this;return this},Wt)Wt[o](pe)&&(fe[pe]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t][c](r,e)})}}(pe));return fe.attr=function(t,r){if(t&&e.is(t,A)&&e.is(t[0],\"object\"))for(var i=0,n=t.length;i<n;i++)this.items[i].attr(t[i]);else for(var a=0,s=this.items.length;a<s;a++)this.items[a].attr(t,r);return this},fe.clear=function(){for(;this.length;)this.pop()},fe.splice=function(t,e,r){t=t<0?w(this.length+t,0):t,e=w(0,k(this.length-t,e));var i,n=[],a=[],s=[];for(i=2;i<arguments.length;i++)s.push(arguments[i]);for(i=0;i<e;i++)a.push(this[t+i]);for(;i<this.length-t;i++)n.push(this[t+i]);var o=s.length;for(i=0;i<o+n.length;i++)this.items[t+i]=this[t+i]=i<o?s[i]:n[i-o];for(i=this.items.length=this.length-=e-o;this[i];)delete this[i++];return new ce(a)},fe.exclude=function(t){for(var e=0,r=this.length;e<r;e++)if(this[e]==t)return this.splice(e,1),!0},fe.animate=function(t,r,i,n){(e.is(i,\"function\")||!i)&&(n=i||null);var a,s,o=this.items.length,l=o,h=this;if(!o)return this;n&&(s=function(){!--o&&n.call(h)}),i=e.is(i,\"string\")?i:s;var u=e.animation(t,r,i,s);for(a=this.items[--l].animate(u);l--;)this.items[l]&&!this.items[l].removed&&this.items[l].animateWith(a,u,u),this.items[l]&&!this.items[l].removed||o--;return this},fe.insertAfter=function(t){for(var e=this.items.length;e--;)this.items[e].insertAfter(t);return this},fe.getBBox=function(){for(var t=[],e=[],r=[],i=[],n=this.items.length;n--;)if(!this.items[n].removed){var a=this.items[n].getBBox();t.push(a.x),e.push(a.y),r.push(a.x+a.width),i.push(a.y+a.height)}return{x:t=k[c](0,t),y:e=k[c](0,e),x2:r=w[c](0,r),y2:i=w[c](0,i),width:r-t,height:i-e}},fe.clone=function(t){t=this.paper.set();for(var e=0,r=this.items.length;e<r;e++)t.push(this.items[e].clone());return t},fe.toString=function(){return\"Raphaël‘s set\"},fe.glow=function(t){var e=this.paper.set();return this.forEach(function(r,i){var n=r.glow(t);null!=n&&n.forEach(function(t,r){e.push(t)})}),e},fe.isPointInside=function(t,e){var r=!1;return this.forEach(function(i){if(i.isPointInside(t,e))return r=!0,!1}),r},e.registerFont=function(t){if(!t.face)return t;this.fonts=this.fonts||{};var e={w:t.w,face:{},glyphs:{}},r=t.face[\"font-family\"];for(var i in t.face)t.face[o](i)&&(e.face[i]=t.face[i]);if(this.fonts[r]?this.fonts[r].push(e):this.fonts[r]=[e],!t.svg)for(var n in e.face[\"units-per-em\"]=F(t.face[\"units-per-em\"],10),t.glyphs)if(t.glyphs[o](n)){var a=t.glyphs[n];if(e.glyphs[n]={w:a.w,k:{},d:a.d&&\"M\"+a.d.replace(/[mlcxtrv]/g,function(t){return{l:\"L\",c:\"C\",x:\"z\",t:\"m\",r:\"l\",v:\"c\"}[t]||\"M\"})+\"z\"},a.k)for(var s in a.k)a[o](s)&&(e.glyphs[n].k[s]=a.k[s])}return t},i.getFont=function(t,r,i,n){if(n=n||\"normal\",i=i||\"normal\",r=+r||{normal:400,bold:700,lighter:300,bolder:800}[r]||400,e.fonts){var a,s=e.fonts[t];if(!s){var l=new RegExp(\"(^|\\\\s)\"+t.replace(/[^\\w\\d\\s+!~.:_-]/g,d)+\"(\\\\s|$)\",\"i\");for(var h in e.fonts)if(e.fonts[o](h)&&l.test(h)){s=e.fonts[h];break}}if(s)for(var u=0,c=s.length;u<c&&((a=s[u]).face[\"font-weight\"]!=r||a.face[\"font-style\"]!=i&&a.face[\"font-style\"]||a.face[\"font-stretch\"]!=n);u++);return a}},i.print=function(t,r,i,a,s,o,l,h){o=o||\"middle\",l=w(k(l||0,1),-1),h=w(k(h||1,3),1);var u,c=x(i)[v](d),f=0,p=0,g=d;if(e.is(a,\"string\")&&(a=this.getFont(a)),a){u=(s||16)/a.face[\"units-per-em\"];for(var y=a.face.bbox[v](n),m=+y[0],b=y[3]-y[1],_=0,B=+y[1]+(\"baseline\"==o?b+ +a.face.descent:b/2),C=0,S=c.length;C<S;C++){if(\"\\n\"==c[C])f=0,A=0,p=0,_+=b*h;else{var T=p&&a.glyphs[c[C-1]]||{},A=a.glyphs[c[C]];f+=p?(T.w||a.w)+(T.k&&T.k[c[C]]||0)+a.w*l:0,p=1}A&&A.d&&(g+=e.transformPath(A.d,[\"t\",f*u,_*u,\"s\",u,u,m,B,\"t\",(t-m)/u,(r-B)/u]))}}return this.path(g).attr({fill:\"#000\",stroke:\"none\"})},i.add=function(t){if(e.is(t,\"array\"))for(var r,i=this.set(),n=0,s=t.length;n<s;n++)r=t[n]||{},a[o](r.type)&&i.push(this[r.type]().attr(r));return i},e.format=function(t,r){var i=e.is(r,A)?[0][f](r):arguments;return t&&e.is(t,\"string\")&&i.length-1&&(t=t.replace(s,function(t,e){return null==i[++e]?d:i[e]})),t||d},e.fullfill=(oe=/\\{([^\\}]+)\\}/g,le=/(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g,function(t,e){return String(t).replace(oe,function(t,r){return function(t,e,r){var i=r;return e.replace(le,function(t,e,r,n,a){e=e||n,i&&(e in i&&(i=i[e]),\"function\"==typeof i&&a&&(i=i()))}),i=(null==i||i==r?t:i)+\"\"}(t,r,e)})}),e.ninja=function(){if(h.was)l.win.Raphael=h.is;else{window.Raphael=void 0;try{delete window.Raphael}catch(t){}}return e},e.st=fe,t.on(\"raphael.DOMload\",function(){r=!0}),null==(he=document).readyState&&he.addEventListener&&(he.addEventListener(\"DOMContentLoaded\",ue=function(){he.removeEventListener(\"DOMContentLoaded\",ue,!1),he.readyState=\"complete\"},!1),he.readyState=\"loading\"),function t(){/in/.test(he.readyState)?setTimeout(t,9):e.eve(\"raphael.DOMload\")}(),e}.apply(e,i))||(t.exports=n)},function(t,e,r){var i,n;i=[r(0),r(3),r(4)],void 0===(n=function(t){return t}.apply(e,i))||(t.exports=n)},function(t,e,r){var i,n,a,s,o,l,h,u,c,f,p,d,g,x;s=\"hasOwnProperty\",o=/[\\.\\/]/,l=/\\s*,\\s*/,h=function(t,e){return t-e},u={n:{}},c=function(){for(var t=0,e=this.length;t<e;t++)if(void 0!==this[t])return this[t]},f=function(){for(var t=this.length;--t;)if(void 0!==this[t])return this[t]},p=Object.prototype.toString,d=String,g=Array.isArray||function(t){return t instanceof Array||\"[object Array]\"==p.call(t)},(x=function(t,e){var r,i=a,s=Array.prototype.slice.call(arguments,2),o=x.listeners(t),l=0,u=[],p={},d=[],g=n;d.firstDefined=c,d.lastDefined=f,n=t,a=0;for(var v=0,y=o.length;v<y;v++)\"zIndex\"in o[v]&&(u.push(o[v].zIndex),o[v].zIndex<0&&(p[o[v].zIndex]=o[v]));for(u.sort(h);u[l]<0;)if(r=p[u[l++]],d.push(r.apply(e,s)),a)return a=i,d;for(v=0;v<y;v++)if(\"zIndex\"in(r=o[v]))if(r.zIndex==u[l]){if(d.push(r.apply(e,s)),a)break;do{if((r=p[u[++l]])&&d.push(r.apply(e,s)),a)break}while(r)}else p[r.zIndex]=r;else if(d.push(r.apply(e,s)),a)break;return a=i,n=g,d})._events=u,x.listeners=function(t){var e,r,i,n,a,s,l,h,c=g(t)?t:t.split(o),f=u,p=[f],d=[];for(n=0,a=c.length;n<a;n++){for(h=[],s=0,l=p.length;s<l;s++)for(r=[(f=p[s].n)[c[n]],f[\"*\"]],i=2;i--;)(e=r[i])&&(h.push(e),d=d.concat(e.f||[]));p=h}return d},x.separator=function(t){t?(t=\"[\"+(t=d(t).replace(/(?=[\\.\\^\\]\\[\\-])/g,\"\\\\\"))+\"]\",o=new RegExp(t)):o=/[\\.\\/]/},x.on=function(t,e){if(\"function\"!=typeof e)return function(){};for(var r=g(t)?g(t[0])?t:[t]:d(t).split(l),i=0,n=r.length;i<n;i++)!function(t){for(var r,i=g(t)?t:d(t).split(o),n=u,a=0,s=i.length;a<s;a++)n=(n=n.n).hasOwnProperty(i[a])&&n[i[a]]||(n[i[a]]={n:{}});for(n.f=n.f||[],a=0,s=n.f.length;a<s;a++)if(n.f[a]==e){r=!0;break}!r&&n.f.push(e)}(r[i]);return function(t){+t==+t&&(e.zIndex=+t)}},x.f=function(t){var e=[].slice.call(arguments,1);return function(){x.apply(null,[t,null].concat(e).concat([].slice.call(arguments,0)))}},x.stop=function(){a=1},x.nt=function(t){var e=g(n)?n.join(\".\"):n;return t?new RegExp(\"(?:\\\\.|\\\\/|^)\"+t+\"(?:\\\\.|\\\\/|$)\").test(e):e},x.nts=function(){return g(n)?n:n.split(o)},x.off=x.unbind=function(t,e){if(t){var r=g(t)?g(t[0])?t:[t]:d(t).split(l);if(r.length>1)for(var i=0,n=r.length;i<n;i++)x.off(r[i],e);else{r=g(t)?t:d(t).split(o);var a,h,c,f,p,v=[u];for(i=0,n=r.length;i<n;i++)for(f=0;f<v.length;f+=c.length-2){if(c=[f,1],a=v[f].n,\"*\"!=r[i])a[r[i]]&&c.push(a[r[i]]);else for(h in a)a[s](h)&&c.push(a[h]);v.splice.apply(v,c)}for(i=0,n=v.length;i<n;i++)for(a=v[i];a.n;){if(e){if(a.f){for(f=0,p=a.f.length;f<p;f++)if(a.f[f]==e){a.f.splice(f,1);break}!a.f.length&&delete a.f}for(h in a.n)if(a.n[s](h)&&a.n[h].f){var y=a.n[h].f;for(f=0,p=y.length;f<p;f++)if(y[f]==e){y.splice(f,1);break}!y.length&&delete a.n[h].f}}else for(h in delete a.f,a.n)a.n[s](h)&&a.n[h].f&&delete a.n[h].f;a=a.n}}}else x._events=u={n:{}}},x.once=function(t,e){var r=function(){return x.off(t,r),e.apply(this,arguments)};return x.on(t,r)},x.version=\"0.5.0\",x.toString=function(){return\"You are running Eve 0.5.0\"},t.exports?t.exports=x:void 0===(i=function(){return x}.apply(e,[]))||(t.exports=i)},function(t,e,r){var i,n;i=[r(0)],void 0===(n=function(t){if(!t||t.svg){var e=\"hasOwnProperty\",r=String,i=parseFloat,n=parseInt,a=Math,s=a.max,o=a.abs,l=a.pow,h=/[, ]+/,u=t.eve,c=\"\",f=\" \",p=\"http://www.w3.org/1999/xlink\",d={block:\"M5,0 0,2.5 5,5z\",classic:\"M5,0 0,2.5 5,5 3.5,3 3.5,2z\",diamond:\"M2.5,0 5,2.5 2.5,5 0,2.5z\",open:\"M6,1 1,3.5 6,6\",oval:\"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z\"},g={};t.toString=function(){return\"Your browser supports SVG.\\nYou are running Raphaël \"+this.version};var x=function(i,n){if(n)for(var a in\"string\"==typeof i&&(i=x(i)),n)n[e](a)&&(\"xlink:\"==a.substring(0,6)?i.setAttributeNS(p,a.substring(6),r(n[a])):i.setAttribute(a,r(n[a])));else(i=t._g.doc.createElementNS(\"http://www.w3.org/2000/svg\",i)).style&&(i.style.webkitTapHighlightColor=\"rgba(0,0,0,0)\");return i},v=function(e,n){var h=\"linear\",u=e.id+n,f=.5,p=.5,d=e.node,g=e.paper,v=d.style,m=t._g.doc.getElementById(u);if(!m){if(n=(n=r(n).replace(t._radial_gradient,function(t,e,r){if(h=\"radial\",e&&r){f=i(e);var n=2*((p=i(r))>.5)-1;l(f-.5,2)+l(p-.5,2)>.25&&(p=a.sqrt(.25-l(f-.5,2))*n+.5)&&.5!=p&&(p=p.toFixed(5)-1e-5*n)}return c})).split(/\\s*\\-\\s*/),\"linear\"==h){var b=n.shift();if(b=-i(b),isNaN(b))return null;var _=[0,0,a.cos(t.rad(b)),a.sin(t.rad(b))],w=1/(s(o(_[2]),o(_[3]))||1);_[2]*=w,_[3]*=w,_[2]<0&&(_[0]=-_[2],_[2]=0),_[3]<0&&(_[1]=-_[3],_[3]=0)}var k=t._parseDots(n);if(!k)return null;if(u=u.replace(/[\\(\\)\\s,\\xb0#]/g,\"_\"),e.gradient&&u!=e.gradient.id&&(g.defs.removeChild(e.gradient),delete e.gradient),!e.gradient){m=x(h+\"Gradient\",{id:u}),e.gradient=m,x(m,\"radial\"==h?{fx:f,fy:p}:{x1:_[0],y1:_[1],x2:_[2],y2:_[3],gradientTransform:e.matrix.invert()}),g.defs.appendChild(m);for(var B=0,C=k.length;B<C;B++)m.appendChild(x(\"stop\",{offset:k[B].offset?k[B].offset:B?\"100%\":\"0%\",\"stop-color\":k[B].color||\"#fff\",\"stop-opacity\":isFinite(k[B].opacity)?k[B].opacity:1}))}}return x(d,{fill:y(u),opacity:1,\"fill-opacity\":1}),v.fill=c,v.opacity=1,v.fillOpacity=1,1},y=function(t){if((e=document.documentMode)&&(9===e||10===e))return\"url('#\"+t+\"')\";var e,r=document.location;return\"url('\"+(r.protocol+\"//\"+r.host+r.pathname+r.search)+\"#\"+t+\"')\"},m=function(t){var e=t.getBBox(1);x(t.pattern,{patternTransform:t.matrix.invert()+\" translate(\"+e.x+\",\"+e.y+\")\"})},b=function(i,n,a){if(\"path\"==i.type){for(var s,o,l,h,u,f=r(n).toLowerCase().split(\"-\"),p=i.paper,v=a?\"end\":\"start\",y=i.node,m=i.attrs,b=m[\"stroke-width\"],_=f.length,w=\"classic\",k=3,B=3,C=5;_--;)switch(f[_]){case\"block\":case\"classic\":case\"oval\":case\"diamond\":case\"open\":case\"none\":w=f[_];break;case\"wide\":B=5;break;case\"narrow\":B=2;break;case\"long\":k=5;break;case\"short\":k=2}if(\"open\"==w?(k+=2,B+=2,C+=2,l=1,h=a?4:1,u={fill:\"none\",stroke:m.stroke}):(h=l=k/2,u={fill:m.stroke,stroke:\"none\"}),i._.arrows?a?(i._.arrows.endPath&&g[i._.arrows.endPath]--,i._.arrows.endMarker&&g[i._.arrows.endMarker]--):(i._.arrows.startPath&&g[i._.arrows.startPath]--,i._.arrows.startMarker&&g[i._.arrows.startMarker]--):i._.arrows={},\"none\"!=w){var S=\"raphael-marker-\"+w,T=\"raphael-marker-\"+v+w+k+B+\"-obj\"+i.id;t._g.doc.getElementById(S)?g[S]++:(p.defs.appendChild(x(x(\"path\"),{\"stroke-linecap\":\"round\",d:d[w],id:S})),g[S]=1);var A,M=t._g.doc.getElementById(T);M?(g[T]++,A=M.getElementsByTagName(\"use\")[0]):(M=x(x(\"marker\"),{id:T,markerHeight:B,markerWidth:k,orient:\"auto\",refX:h,refY:B/2}),A=x(x(\"use\"),{\"xlink:href\":\"#\"+S,transform:(a?\"rotate(180 \"+k/2+\" \"+B/2+\") \":c)+\"scale(\"+k/C+\",\"+B/C+\")\",\"stroke-width\":(1/((k/C+B/C)/2)).toFixed(4)}),M.appendChild(A),p.defs.appendChild(M),g[T]=1),x(A,u);var E=l*(\"diamond\"!=w&&\"oval\"!=w);a?(s=i._.arrows.startdx*b||0,o=t.getTotalLength(m.path)-E*b):(s=E*b,o=t.getTotalLength(m.path)-(i._.arrows.enddx*b||0)),(u={})[\"marker-\"+v]=\"url(#\"+T+\")\",(o||s)&&(u.d=t.getSubpath(m.path,s,o)),x(y,u),i._.arrows[v+\"Path\"]=S,i._.arrows[v+\"Marker\"]=T,i._.arrows[v+\"dx\"]=E,i._.arrows[v+\"Type\"]=w,i._.arrows[v+\"String\"]=n}else a?(s=i._.arrows.startdx*b||0,o=t.getTotalLength(m.path)-s):(s=0,o=t.getTotalLength(m.path)-(i._.arrows.enddx*b||0)),i._.arrows[v+\"Path\"]&&x(y,{d:t.getSubpath(m.path,s,o)}),delete i._.arrows[v+\"Path\"],delete i._.arrows[v+\"Marker\"],delete i._.arrows[v+\"dx\"],delete i._.arrows[v+\"Type\"],delete i._.arrows[v+\"String\"];for(u in g)if(g[e](u)&&!g[u]){var N=t._g.doc.getElementById(u);N&&N.parentNode.removeChild(N)}}},_={\"-\":[3,1],\".\":[1,1],\"-.\":[3,1,1,1],\"-..\":[3,1,1,1,1,1],\". \":[1,3],\"- \":[4,3],\"--\":[8,3],\"- .\":[4,3,1,3],\"--.\":[8,3,1,3],\"--..\":[8,3,1,3,1,3]},w=function(t,e,i){if(e=_[r(e).toLowerCase()]){for(var n=t.attrs[\"stroke-width\"]||\"1\",a={round:n,square:n,butt:0}[t.attrs[\"stroke-linecap\"]||i[\"stroke-linecap\"]]||0,s=[],o=e.length;o--;)s[o]=e[o]*n+(o%2?1:-1)*a;x(t.node,{\"stroke-dasharray\":s.join(\",\")})}else x(t.node,{\"stroke-dasharray\":\"none\"})},k=function(i,a){var l=i.node,u=i.attrs,f=l.style.visibility;for(var d in l.style.visibility=\"hidden\",a)if(a[e](d)){if(!t._availableAttrs[e](d))continue;var g=a[d];switch(u[d]=g,d){case\"blur\":i.blur(g);break;case\"title\":var y=l.getElementsByTagName(\"title\");if(y.length&&(y=y[0]))y.firstChild.nodeValue=g;else{y=x(\"title\");var _=t._g.doc.createTextNode(g);y.appendChild(_),l.appendChild(y)}break;case\"href\":case\"target\":var k=l.parentNode;if(\"a\"!=k.tagName.toLowerCase()){var C=x(\"a\");k.insertBefore(C,l),C.appendChild(l),k=C}\"target\"==d?k.setAttributeNS(p,\"show\",\"blank\"==g?\"new\":g):k.setAttributeNS(p,d,g);break;case\"cursor\":l.style.cursor=g;break;case\"transform\":i.transform(g);break;case\"arrow-start\":b(i,g);break;case\"arrow-end\":b(i,g,1);break;case\"clip-rect\":var S=r(g).split(h);if(4==S.length){i.clip&&i.clip.parentNode.parentNode.removeChild(i.clip.parentNode);var T=x(\"clipPath\"),A=x(\"rect\");T.id=t.createUUID(),x(A,{x:S[0],y:S[1],width:S[2],height:S[3]}),T.appendChild(A),i.paper.defs.appendChild(T),x(l,{\"clip-path\":\"url(#\"+T.id+\")\"}),i.clip=A}if(!g){var M=l.getAttribute(\"clip-path\");if(M){var E=t._g.doc.getElementById(M.replace(/(^url\\(#|\\)$)/g,c));E&&E.parentNode.removeChild(E),x(l,{\"clip-path\":c}),delete i.clip}}break;case\"path\":\"path\"==i.type&&(x(l,{d:g?u.path=t._pathToAbsolute(g):\"M0,0\"}),i._.dirty=1,i._.arrows&&(\"startString\"in i._.arrows&&b(i,i._.arrows.startString),\"endString\"in i._.arrows&&b(i,i._.arrows.endString,1)));break;case\"width\":if(l.setAttribute(d,g),i._.dirty=1,!u.fx)break;d=\"x\",g=u.x;case\"x\":u.fx&&(g=-u.x-(u.width||0));case\"rx\":if(\"rx\"==d&&\"rect\"==i.type)break;case\"cx\":l.setAttribute(d,g),i.pattern&&m(i),i._.dirty=1;break;case\"height\":if(l.setAttribute(d,g),i._.dirty=1,!u.fy)break;d=\"y\",g=u.y;case\"y\":u.fy&&(g=-u.y-(u.height||0));case\"ry\":if(\"ry\"==d&&\"rect\"==i.type)break;case\"cy\":l.setAttribute(d,g),i.pattern&&m(i),i._.dirty=1;break;case\"r\":\"rect\"==i.type?x(l,{rx:g,ry:g}):l.setAttribute(d,g),i._.dirty=1;break;case\"src\":\"image\"==i.type&&l.setAttributeNS(p,\"href\",g);break;case\"stroke-width\":1==i._.sx&&1==i._.sy||(g/=s(o(i._.sx),o(i._.sy))||1),l.setAttribute(d,g),u[\"stroke-dasharray\"]&&w(i,u[\"stroke-dasharray\"],a),i._.arrows&&(\"startString\"in i._.arrows&&b(i,i._.arrows.startString),\"endString\"in i._.arrows&&b(i,i._.arrows.endString,1));break;case\"stroke-dasharray\":w(i,g,a);break;case\"fill\":var N=r(g).match(t._ISURL);if(N){T=x(\"pattern\");var L=x(\"image\");T.id=t.createUUID(),x(T,{x:0,y:0,patternUnits:\"userSpaceOnUse\",height:1,width:1}),x(L,{x:0,y:0,\"xlink:href\":N[1]}),T.appendChild(L),function(e){t._preload(N[1],function(){var t=this.offsetWidth,r=this.offsetHeight;x(e,{width:t,height:r}),x(L,{width:t,height:r})})}(T),i.paper.defs.appendChild(T),x(l,{fill:\"url(#\"+T.id+\")\"}),i.pattern=T,i.pattern&&m(i);break}var P=t.getRGB(g);if(P.error){if((\"circle\"==i.type||\"ellipse\"==i.type||\"r\"!=r(g).charAt())&&v(i,g)){if(\"opacity\"in u||\"fill-opacity\"in u){var z=t._g.doc.getElementById(l.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g,c));if(z){var F=z.getElementsByTagName(\"stop\");x(F[F.length-1],{\"stop-opacity\":(\"opacity\"in u?u.opacity:1)*(\"fill-opacity\"in u?u[\"fill-opacity\"]:1)})}}u.gradient=g,u.fill=\"none\";break}}else delete a.gradient,delete u.gradient,!t.is(u.opacity,\"undefined\")&&t.is(a.opacity,\"undefined\")&&x(l,{opacity:u.opacity}),!t.is(u[\"fill-opacity\"],\"undefined\")&&t.is(a[\"fill-opacity\"],\"undefined\")&&x(l,{\"fill-opacity\":u[\"fill-opacity\"]});P[e](\"opacity\")&&x(l,{\"fill-opacity\":P.opacity>1?P.opacity/100:P.opacity});case\"stroke\":P=t.getRGB(g),l.setAttribute(d,P.hex),\"stroke\"==d&&P[e](\"opacity\")&&x(l,{\"stroke-opacity\":P.opacity>1?P.opacity/100:P.opacity}),\"stroke\"==d&&i._.arrows&&(\"startString\"in i._.arrows&&b(i,i._.arrows.startString),\"endString\"in i._.arrows&&b(i,i._.arrows.endString,1));break;case\"gradient\":(\"circle\"==i.type||\"ellipse\"==i.type||\"r\"!=r(g).charAt())&&v(i,g);break;case\"opacity\":u.gradient&&!u[e](\"stroke-opacity\")&&x(l,{\"stroke-opacity\":g>1?g/100:g});case\"fill-opacity\":if(u.gradient){(z=t._g.doc.getElementById(l.getAttribute(\"fill\").replace(/^url\\(#|\\)$/g,c)))&&(F=z.getElementsByTagName(\"stop\"),x(F[F.length-1],{\"stop-opacity\":g}));break}default:\"font-size\"==d&&(g=n(g,10)+\"px\");var R=d.replace(/(\\-.)/g,function(t){return t.substring(1).toUpperCase()});l.style[R]=g,i._.dirty=1,l.setAttribute(d,g)}}B(i,a),l.style.visibility=f},B=function(i,a){if(\"text\"==i.type&&(a[e](\"text\")||a[e](\"font\")||a[e](\"font-size\")||a[e](\"x\")||a[e](\"y\"))){var s=i.attrs,o=i.node,l=o.firstChild?n(t._g.doc.defaultView.getComputedStyle(o.firstChild,c).getPropertyValue(\"font-size\"),10):10;if(a[e](\"text\")){for(s.text=a.text;o.firstChild;)o.removeChild(o.firstChild);for(var h,u=r(a.text).split(\"\\n\"),f=[],p=0,d=u.length;p<d;p++)h=x(\"tspan\"),p&&x(h,{dy:1.2*l,x:s.x}),h.appendChild(t._g.doc.createTextNode(u[p])),o.appendChild(h),f[p]=h}else for(p=0,d=(f=o.getElementsByTagName(\"tspan\")).length;p<d;p++)p?x(f[p],{dy:1.2*l,x:s.x}):x(f[0],{dy:0});x(o,{x:s.x,y:s.y}),i._.dirty=1;var g=i._getBBox(),v=s.y-(g.y+g.height/2);v&&t.is(v,\"finite\")&&x(f[0],{dy:v})}},C=function(t){return t.parentNode&&\"a\"===t.parentNode.tagName.toLowerCase()?t.parentNode:t},S=function(e,r){this[0]=this.node=e,e.raphael=!0,this.id=(\"0000\"+(Math.random()*Math.pow(36,5)<<0).toString(36)).slice(-5),e.raphaelid=this.id,this.matrix=t.matrix(),this.realPath=null,this.paper=r,this.attrs=this.attrs||{},this._={transform:[],sx:1,sy:1,deg:0,dx:0,dy:0,dirty:1},!r.bottom&&(r.bottom=this),this.prev=r.top,r.top&&(r.top.next=this),r.top=this,this.next=null},T=t.el;S.prototype=T,T.constructor=S,t._engine.path=function(t,e){var r=x(\"path\");e.canvas&&e.canvas.appendChild(r);var i=new S(r,e);return i.type=\"path\",k(i,{fill:\"none\",stroke:\"#000\",path:t}),i},T.rotate=function(t,e,n){if(this.removed)return this;if((t=r(t).split(h)).length-1&&(e=i(t[1]),n=i(t[2])),t=i(t[0]),null==n&&(e=n),null==e||null==n){var a=this.getBBox(1);e=a.x+a.width/2,n=a.y+a.height/2}return this.transform(this._.transform.concat([[\"r\",t,e,n]])),this},T.scale=function(t,e,n,a){if(this.removed)return this;if((t=r(t).split(h)).length-1&&(e=i(t[1]),n=i(t[2]),a=i(t[3])),t=i(t[0]),null==e&&(e=t),null==a&&(n=a),null==n||null==a)var s=this.getBBox(1);return n=null==n?s.x+s.width/2:n,a=null==a?s.y+s.height/2:a,this.transform(this._.transform.concat([[\"s\",t,e,n,a]])),this},T.translate=function(t,e){return this.removed?this:((t=r(t).split(h)).length-1&&(e=i(t[1])),t=i(t[0])||0,e=+e||0,this.transform(this._.transform.concat([[\"t\",t,e]])),this)},T.transform=function(r){var i=this._;if(null==r)return i.transform;if(t._extractTransform(this,r),this.clip&&x(this.clip,{transform:this.matrix.invert()}),this.pattern&&m(this),this.node&&x(this.node,{transform:this.matrix}),1!=i.sx||1!=i.sy){var n=this.attrs[e](\"stroke-width\")?this.attrs[\"stroke-width\"]:1;this.attr({\"stroke-width\":n})}return this},T.hide=function(){return this.removed||(this.node.style.display=\"none\"),this},T.show=function(){return this.removed||(this.node.style.display=\"\"),this},T.remove=function(){var e=C(this.node);if(!this.removed&&e.parentNode){var r=this.paper;for(var i in r.__set__&&r.__set__.exclude(this),u.unbind(\"raphael.*.*.\"+this.id),this.gradient&&r.defs.removeChild(this.gradient),t._tear(this,r),e.parentNode.removeChild(e),this.removeData(),this)this[i]=\"function\"==typeof this[i]?t._removedFactory(i):null;this.removed=!0}},T._getBBox=function(){if(\"none\"==this.node.style.display){this.show();var t=!0}var e,r=!1;this.paper.canvas.parentElement?e=this.paper.canvas.parentElement.style:this.paper.canvas.parentNode&&(e=this.paper.canvas.parentNode.style),e&&\"none\"==e.display&&(r=!0,e.display=\"\");var i={};try{i=this.node.getBBox()}catch(t){i={x:this.node.clientLeft,y:this.node.clientTop,width:this.node.clientWidth,height:this.node.clientHeight}}finally{i=i||{},r&&(e.display=\"none\")}return t&&this.hide(),i},T.attr=function(r,i){if(this.removed)return this;if(null==r){var n={};for(var a in this.attrs)this.attrs[e](a)&&(n[a]=this.attrs[a]);return n.gradient&&\"none\"==n.fill&&(n.fill=n.gradient)&&delete n.gradient,n.transform=this._.transform,n}if(null==i&&t.is(r,\"string\")){if(\"fill\"==r&&\"none\"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;if(\"transform\"==r)return this._.transform;for(var s=r.split(h),o={},l=0,c=s.length;l<c;l++)(r=s[l])in this.attrs?o[r]=this.attrs[r]:t.is(this.paper.customAttributes[r],\"function\")?o[r]=this.paper.customAttributes[r].def:o[r]=t._availableAttrs[r];return c-1?o:o[s[0]]}if(null==i&&t.is(r,\"array\")){for(o={},l=0,c=r.length;l<c;l++)o[r[l]]=this.attr(r[l]);return o}if(null!=i){var f={};f[r]=i}else null!=r&&t.is(r,\"object\")&&(f=r);for(var p in f)u(\"raphael.attr.\"+p+\".\"+this.id,this,f[p]);for(p in this.paper.customAttributes)if(this.paper.customAttributes[e](p)&&f[e](p)&&t.is(this.paper.customAttributes[p],\"function\")){var d=this.paper.customAttributes[p].apply(this,[].concat(f[p]));for(var g in this.attrs[p]=f[p],d)d[e](g)&&(f[g]=d[g])}return k(this,f),this},T.toFront=function(){if(this.removed)return this;var e=C(this.node);e.parentNode.appendChild(e);var r=this.paper;return r.top!=this&&t._tofront(this,r),this},T.toBack=function(){if(this.removed)return this;var e=C(this.node),r=e.parentNode;r.insertBefore(e,r.firstChild),t._toback(this,this.paper);this.paper;return this},T.insertAfter=function(e){if(this.removed||!e)return this;var r=C(this.node),i=C(e.node||e[e.length-1].node);return i.nextSibling?i.parentNode.insertBefore(r,i.nextSibling):i.parentNode.appendChild(r),t._insertafter(this,e,this.paper),this},T.insertBefore=function(e){if(this.removed||!e)return this;var r=C(this.node),i=C(e.node||e[0].node);return i.parentNode.insertBefore(r,i),t._insertbefore(this,e,this.paper),this},T.blur=function(e){var r=this;if(0!=+e){var i=x(\"filter\"),n=x(\"feGaussianBlur\");r.attrs.blur=e,i.id=t.createUUID(),x(n,{stdDeviation:+e||1.5}),i.appendChild(n),r.paper.defs.appendChild(i),r._blur=i,x(r.node,{filter:\"url(#\"+i.id+\")\"})}else r._blur&&(r._blur.parentNode.removeChild(r._blur),delete r._blur,delete r.attrs.blur),r.node.removeAttribute(\"filter\");return r},t._engine.circle=function(t,e,r,i){var n=x(\"circle\");t.canvas&&t.canvas.appendChild(n);var a=new S(n,t);return a.attrs={cx:e,cy:r,r:i,fill:\"none\",stroke:\"#000\"},a.type=\"circle\",x(n,a.attrs),a},t._engine.rect=function(t,e,r,i,n,a){var s=x(\"rect\");t.canvas&&t.canvas.appendChild(s);var o=new S(s,t);return o.attrs={x:e,y:r,width:i,height:n,rx:a||0,ry:a||0,fill:\"none\",stroke:\"#000\"},o.type=\"rect\",x(s,o.attrs),o},t._engine.ellipse=function(t,e,r,i,n){var a=x(\"ellipse\");t.canvas&&t.canvas.appendChild(a);var s=new S(a,t);return s.attrs={cx:e,cy:r,rx:i,ry:n,fill:\"none\",stroke:\"#000\"},s.type=\"ellipse\",x(a,s.attrs),s},t._engine.image=function(t,e,r,i,n,a){var s=x(\"image\");x(s,{x:r,y:i,width:n,height:a,preserveAspectRatio:\"none\"}),s.setAttributeNS(p,\"href\",e),t.canvas&&t.canvas.appendChild(s);var o=new S(s,t);return o.attrs={x:r,y:i,width:n,height:a,src:e},o.type=\"image\",o},t._engine.text=function(e,r,i,n){var a=x(\"text\");e.canvas&&e.canvas.appendChild(a);var s=new S(a,e);return s.attrs={x:r,y:i,\"text-anchor\":\"middle\",text:n,\"font-family\":t._availableAttrs[\"font-family\"],\"font-size\":t._availableAttrs[\"font-size\"],stroke:\"none\",fill:\"#000\"},s.type=\"text\",k(s,s.attrs),s},t._engine.setSize=function(t,e){return this.width=t||this.width,this.height=e||this.height,this.canvas.setAttribute(\"width\",this.width),this.canvas.setAttribute(\"height\",this.height),this._viewBox&&this.setViewBox.apply(this,this._viewBox),this},t._engine.create=function(){var e=t._getContainer.apply(0,arguments),r=e&&e.container;if(!r)throw new Error(\"SVG container not found.\");var i,n=e.x,a=e.y,s=e.width,o=e.height,l=x(\"svg\"),h=\"overflow:hidden;\";return n=n||0,a=a||0,x(l,{height:o=o||342,version:1.1,width:s=s||512,xmlns:\"http://www.w3.org/2000/svg\",\"xmlns:xlink\":\"http://www.w3.org/1999/xlink\"}),1==r?(l.style.cssText=h+\"position:absolute;left:\"+n+\"px;top:\"+a+\"px\",t._g.doc.body.appendChild(l),i=1):(l.style.cssText=h+\"position:relative\",r.firstChild?r.insertBefore(l,r.firstChild):r.appendChild(l)),(r=new t._Paper).width=s,r.height=o,r.canvas=l,r.clear(),r._left=r._top=0,i&&(r.renderfix=function(){}),r.renderfix(),r},t._engine.setViewBox=function(t,e,r,i,n){u(\"raphael.setViewBox\",this,this._viewBox,[t,e,r,i,n]);var a,o,l=this.getSize(),h=s(r/l.width,i/l.height),c=this.top,p=n?\"xMidYMid meet\":\"xMinYMin\";for(null==t?(this._vbSize&&(h=1),delete this._vbSize,a=\"0 0 \"+this.width+f+this.height):(this._vbSize=h,a=t+f+e+f+r+f+i),x(this.canvas,{viewBox:a,preserveAspectRatio:p});h&&c;)o=\"stroke-width\"in c.attrs?c.attrs[\"stroke-width\"]:1,c.attr({\"stroke-width\":o}),c._.dirty=1,c._.dirtyT=1,c=c.prev;return this._viewBox=[t,e,r,i,!!n],this},t.prototype.renderfix=function(){var t,e=this.canvas,r=e.style;try{t=e.getScreenCTM()||e.createSVGMatrix()}catch(r){t=e.createSVGMatrix()}var i=-t.e%1,n=-t.f%1;(i||n)&&(i&&(this._left=(this._left+i)%1,r.left=this._left+\"px\"),n&&(this._top=(this._top+n)%1,r.top=this._top+\"px\"))},t.prototype.clear=function(){t.eve(\"raphael.clear\",this);for(var e=this.canvas;e.firstChild;)e.removeChild(e.firstChild);this.bottom=this.top=null,(this.desc=x(\"desc\")).appendChild(t._g.doc.createTextNode(\"Created with Raphaël \"+t.version)),e.appendChild(this.desc),e.appendChild(this.defs=x(\"defs\"))},t.prototype.remove=function(){for(var e in u(\"raphael.remove\",this),this.canvas.parentNode&&this.canvas.parentNode.removeChild(this.canvas),this)this[e]=\"function\"==typeof this[e]?t._removedFactory(e):null};var A=t.st;for(var M in T)T[e](M)&&!A[e](M)&&(A[M]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t].apply(r,e)})}}(M))}}.apply(e,i))||(t.exports=n)},function(t,e,r){var i,n;i=[r(0)],void 0===(n=function(t){if(!t||t.vml){var e=\"hasOwnProperty\",r=String,i=parseFloat,n=Math,a=n.round,s=n.max,o=n.min,l=n.abs,h=/[, ]+/,u=t.eve,c=\" \",f=\"\",p={M:\"m\",L:\"l\",C:\"c\",Z:\"x\",m:\"t\",l:\"r\",c:\"v\",z:\"x\"},d=/([clmz]),?([^clmz]*)/gi,g=/ progid:\\S+Blur\\([^\\)]+\\)/g,x=/-?[^,\\s-]+/g,v=\"position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)\",y=21600,m={path:1,rect:1,image:1},b={circle:1,ellipse:1},_=function(e,r,i){var n=t.matrix();return n.rotate(-e,.5,.5),{dx:n.x(r,i),dy:n.y(r,i)}},w=function(t,e,r,i,n,a){var s=t._,o=t.matrix,h=s.fillpos,u=t.node,f=u.style,p=1,d=\"\",g=y/e,x=y/r;if(f.visibility=\"hidden\",e&&r){if(u.coordsize=l(g)+c+l(x),f.rotation=a*(e*r<0?-1:1),a){var v=_(a,i,n);i=v.dx,n=v.dy}if(e<0&&(d+=\"x\"),r<0&&(d+=\" y\")&&(p=-1),f.flip=d,u.coordorigin=i*-g+c+n*-x,h||s.fillsize){var m=u.getElementsByTagName(\"fill\");m=m&&m[0],u.removeChild(m),h&&(v=_(a,o.x(h[0],h[1]),o.y(h[0],h[1])),m.position=v.dx*p+c+v.dy*p),s.fillsize&&(m.size=s.fillsize[0]*l(e)+c+s.fillsize[1]*l(r)),u.appendChild(m)}f.visibility=\"visible\"}};t.toString=function(){return\"Your browser doesn’t support SVG. Falling down to VML.\\nYou are running Raphaël \"+this.version};var k,B=function(t,e,i){for(var n=r(e).toLowerCase().split(\"-\"),a=i?\"end\":\"start\",s=n.length,o=\"classic\",l=\"medium\",h=\"medium\";s--;)switch(n[s]){case\"block\":case\"classic\":case\"oval\":case\"diamond\":case\"open\":case\"none\":o=n[s];break;case\"wide\":case\"narrow\":h=n[s];break;case\"long\":case\"short\":l=n[s]}var u=t.node.getElementsByTagName(\"stroke\")[0];u[a+\"arrow\"]=o,u[a+\"arrowlength\"]=l,u[a+\"arrowwidth\"]=h},C=function(n,l){n.attrs=n.attrs||{};var u=n.node,g=n.attrs,v=u.style,_=m[n.type]&&(l.x!=g.x||l.y!=g.y||l.width!=g.width||l.height!=g.height||l.cx!=g.cx||l.cy!=g.cy||l.rx!=g.rx||l.ry!=g.ry||l.r!=g.r),C=b[n.type]&&(g.cx!=l.cx||g.cy!=l.cy||g.r!=l.r||g.rx!=l.rx||g.ry!=l.ry),T=n;for(var A in l)l[e](A)&&(g[A]=l[A]);if(_&&(g.path=t._getPath[n.type](n),n._.dirty=1),l.href&&(u.href=l.href),l.title&&(u.title=l.title),l.target&&(u.target=l.target),l.cursor&&(v.cursor=l.cursor),\"blur\"in l&&n.blur(l.blur),(l.path&&\"path\"==n.type||_)&&(u.path=function(e){var i=/[ahqstv]/gi,n=t._pathToAbsolute;if(r(e).match(i)&&(n=t._path2curve),i=/[clmz]/g,n==t._pathToAbsolute&&!r(e).match(i)){var s=r(e).replace(d,function(t,e,r){var i=[],n=\"m\"==e.toLowerCase(),s=p[e];return r.replace(x,function(t){n&&2==i.length&&(s+=i+p[\"m\"==e?\"l\":\"L\"],i=[]),i.push(a(t*y))}),s+i});return s}var o,l,h=n(e);s=[];for(var u=0,g=h.length;u<g;u++){o=h[u],\"z\"==(l=h[u][0].toLowerCase())&&(l=\"x\");for(var v=1,m=o.length;v<m;v++)l+=a(o[v]*y)+(v!=m-1?\",\":f);s.push(l)}return s.join(c)}(~r(g.path).toLowerCase().indexOf(\"r\")?t._pathToAbsolute(g.path):g.path),n._.dirty=1,\"image\"==n.type&&(n._.fillpos=[g.x,g.y],n._.fillsize=[g.width,g.height],w(n,1,1,0,0,0))),\"transform\"in l&&n.transform(l.transform),C){var M=+g.cx,E=+g.cy,N=+g.rx||+g.r||0,L=+g.ry||+g.r||0;u.path=t.format(\"ar{0},{1},{2},{3},{4},{1},{4},{1}x\",a((M-N)*y),a((E-L)*y),a((M+N)*y),a((E+L)*y),a(M*y)),n._.dirty=1}if(\"clip-rect\"in l){var P=r(l[\"clip-rect\"]).split(h);if(4==P.length){P[2]=+P[2]+ +P[0],P[3]=+P[3]+ +P[1];var z=u.clipRect||t._g.doc.createElement(\"div\"),F=z.style;F.clip=t.format(\"rect({1}px {2}px {3}px {0}px)\",P),u.clipRect||(F.position=\"absolute\",F.top=0,F.left=0,F.width=n.paper.width+\"px\",F.height=n.paper.height+\"px\",u.parentNode.insertBefore(z,u),z.appendChild(u),u.clipRect=z)}l[\"clip-rect\"]||u.clipRect&&(u.clipRect.style.clip=\"auto\")}if(n.textpath){var R=n.textpath.style;l.font&&(R.font=l.font),l[\"font-family\"]&&(R.fontFamily='\"'+l[\"font-family\"].split(\",\")[0].replace(/^['\"]+|['\"]+$/g,f)+'\"'),l[\"font-size\"]&&(R.fontSize=l[\"font-size\"]),l[\"font-weight\"]&&(R.fontWeight=l[\"font-weight\"]),l[\"font-style\"]&&(R.fontStyle=l[\"font-style\"])}if(\"arrow-start\"in l&&B(T,l[\"arrow-start\"]),\"arrow-end\"in l&&B(T,l[\"arrow-end\"],1),null!=l.opacity||null!=l.fill||null!=l.src||null!=l.stroke||null!=l[\"stroke-width\"]||null!=l[\"stroke-opacity\"]||null!=l[\"fill-opacity\"]||null!=l[\"stroke-dasharray\"]||null!=l[\"stroke-miterlimit\"]||null!=l[\"stroke-linejoin\"]||null!=l[\"stroke-linecap\"]){var j=u.getElementsByTagName(\"fill\");if(!(j=j&&j[0])&&(j=k(\"fill\")),\"image\"==n.type&&l.src&&(j.src=l.src),l.fill&&(j.on=!0),null!=j.on&&\"none\"!=l.fill&&null!==l.fill||(j.on=!1),j.on&&l.fill){var I=r(l.fill).match(t._ISURL);if(I){j.parentNode==u&&u.removeChild(j),j.rotate=!0,j.src=I[1],j.type=\"tile\";var D=n.getBBox(1);j.position=D.x+c+D.y,n._.fillpos=[D.x,D.y],t._preload(I[1],function(){n._.fillsize=[this.offsetWidth,this.offsetHeight]})}else j.color=t.getRGB(l.fill).hex,j.src=f,j.type=\"solid\",t.getRGB(l.fill).error&&(T.type in{circle:1,ellipse:1}||\"r\"!=r(l.fill).charAt())&&S(T,l.fill,j)&&(g.fill=\"none\",g.gradient=l.fill,j.rotate=!1)}if(\"fill-opacity\"in l||\"opacity\"in l){var q=((+g[\"fill-opacity\"]+1||2)-1)*((+g.opacity+1||2)-1)*((+t.getRGB(l.fill).o+1||2)-1);q=o(s(q,0),1),j.opacity=q,j.src&&(j.color=\"none\")}u.appendChild(j);var O=u.getElementsByTagName(\"stroke\")&&u.getElementsByTagName(\"stroke\")[0],V=!1;!O&&(V=O=k(\"stroke\")),(l.stroke&&\"none\"!=l.stroke||l[\"stroke-width\"]||null!=l[\"stroke-opacity\"]||l[\"stroke-dasharray\"]||l[\"stroke-miterlimit\"]||l[\"stroke-linejoin\"]||l[\"stroke-linecap\"])&&(O.on=!0),(\"none\"==l.stroke||null===l.stroke||null==O.on||0==l.stroke||0==l[\"stroke-width\"])&&(O.on=!1);var W=t.getRGB(l.stroke);O.on&&l.stroke&&(O.color=W.hex),q=((+g[\"stroke-opacity\"]+1||2)-1)*((+g.opacity+1||2)-1)*((+W.o+1||2)-1);var Y=.75*(i(l[\"stroke-width\"])||1);if(q=o(s(q,0),1),null==l[\"stroke-width\"]&&(Y=g[\"stroke-width\"]),l[\"stroke-width\"]&&(O.weight=Y),Y&&Y<1&&(q*=Y)&&(O.weight=1),O.opacity=q,l[\"stroke-linejoin\"]&&(O.joinstyle=l[\"stroke-linejoin\"]||\"miter\"),O.miterlimit=l[\"stroke-miterlimit\"]||8,l[\"stroke-linecap\"]&&(O.endcap=\"butt\"==l[\"stroke-linecap\"]?\"flat\":\"square\"==l[\"stroke-linecap\"]?\"square\":\"round\"),\"stroke-dasharray\"in l){var G={\"-\":\"shortdash\",\".\":\"shortdot\",\"-.\":\"shortdashdot\",\"-..\":\"shortdashdotdot\",\". \":\"dot\",\"- \":\"dash\",\"--\":\"longdash\",\"- .\":\"dashdot\",\"--.\":\"longdashdot\",\"--..\":\"longdashdotdot\"};O.dashstyle=G[e](l[\"stroke-dasharray\"])?G[l[\"stroke-dasharray\"]]:f}V&&u.appendChild(O)}if(\"text\"==T.type){T.paper.canvas.style.display=f;var H=T.paper.span,X=g.font&&g.font.match(/\\d+(?:\\.\\d*)?(?=px)/);v=H.style,g.font&&(v.font=g.font),g[\"font-family\"]&&(v.fontFamily=g[\"font-family\"]),g[\"font-weight\"]&&(v.fontWeight=g[\"font-weight\"]),g[\"font-style\"]&&(v.fontStyle=g[\"font-style\"]),X=i(g[\"font-size\"]||X&&X[0])||10,v.fontSize=100*X+\"px\",T.textpath.string&&(H.innerHTML=r(T.textpath.string).replace(/</g,\"&#60;\").replace(/&/g,\"&#38;\").replace(/\\n/g,\"<br>\"));var U=H.getBoundingClientRect();T.W=g.w=(U.right-U.left)/100,T.H=g.h=(U.bottom-U.top)/100,T.X=g.x,T.Y=g.y+T.H/2,(\"x\"in l||\"y\"in l)&&(T.path.v=t.format(\"m{0},{1}l{2},{1}\",a(g.x*y),a(g.y*y),a(g.x*y)+1));for(var $=[\"x\",\"y\",\"text\",\"font\",\"font-family\",\"font-weight\",\"font-style\",\"font-size\"],Z=0,Q=$.length;Z<Q;Z++)if($[Z]in l){T._.dirty=1;break}switch(g[\"text-anchor\"]){case\"start\":T.textpath.style[\"v-text-align\"]=\"left\",T.bbx=T.W/2;break;case\"end\":T.textpath.style[\"v-text-align\"]=\"right\",T.bbx=-T.W/2;break;default:T.textpath.style[\"v-text-align\"]=\"center\",T.bbx=0}T.textpath.style[\"v-text-kern\"]=!0}},S=function(e,a,s){e.attrs=e.attrs||{};e.attrs;var o=Math.pow,l=\"linear\",h=\".5 .5\";if(e.attrs.gradient=a,a=(a=r(a).replace(t._radial_gradient,function(t,e,r){return l=\"radial\",e&&r&&(e=i(e),r=i(r),o(e-.5,2)+o(r-.5,2)>.25&&(r=n.sqrt(.25-o(e-.5,2))*(2*(r>.5)-1)+.5),h=e+c+r),f})).split(/\\s*\\-\\s*/),\"linear\"==l){var u=a.shift();if(u=-i(u),isNaN(u))return null}var p=t._parseDots(a);if(!p)return null;if(e=e.shape||e.node,p.length){e.removeChild(s),s.on=!0,s.method=\"none\",s.color=p[0].color,s.color2=p[p.length-1].color;for(var d=[],g=0,x=p.length;g<x;g++)p[g].offset&&d.push(p[g].offset+c+p[g].color);s.colors=d.length?d.join():\"0% \"+s.color,\"radial\"==l?(s.type=\"gradientTitle\",s.focus=\"100%\",s.focussize=\"0 0\",s.focusposition=h,s.angle=0):(s.type=\"gradient\",s.angle=(270-u)%360),e.appendChild(s)}return 1},T=function(e,r){this[0]=this.node=e,e.raphael=!0,this.id=t._oid++,e.raphaelid=this.id,this.X=0,this.Y=0,this.attrs={},this.paper=r,this.matrix=t.matrix(),this._={transform:[],sx:1,sy:1,dx:0,dy:0,deg:0,dirty:1,dirtyT:1},!r.bottom&&(r.bottom=this),this.prev=r.top,r.top&&(r.top.next=this),r.top=this,this.next=null},A=t.el;T.prototype=A,A.constructor=T,A.transform=function(e){if(null==e)return this._.transform;var i,n=this.paper._viewBoxShift,a=n?\"s\"+[n.scale,n.scale]+\"-1-1t\"+[n.dx,n.dy]:f;n&&(i=e=r(e).replace(/\\.{3}|\\u2026/g,this._.transform||f)),t._extractTransform(this,a+e);var s,o=this.matrix.clone(),l=this.skew,h=this.node,u=~r(this.attrs.fill).indexOf(\"-\"),p=!r(this.attrs.fill).indexOf(\"url(\");if(o.translate(1,1),p||u||\"image\"==this.type)if(l.matrix=\"1 0 0 1\",l.offset=\"0 0\",s=o.split(),u&&s.noRotation||!s.isSimple){h.style.filter=o.toFilter();var d=this.getBBox(),g=this.getBBox(1),x=d.x-g.x,v=d.y-g.y;h.coordorigin=x*-y+c+v*-y,w(this,1,1,x,v,0)}else h.style.filter=f,w(this,s.scalex,s.scaley,s.dx,s.dy,s.rotate);else h.style.filter=f,l.matrix=r(o),l.offset=o.offset();return null!==i&&(this._.transform=i,t._extractTransform(this,i)),this},A.rotate=function(t,e,n){if(this.removed)return this;if(null!=t){if((t=r(t).split(h)).length-1&&(e=i(t[1]),n=i(t[2])),t=i(t[0]),null==n&&(e=n),null==e||null==n){var a=this.getBBox(1);e=a.x+a.width/2,n=a.y+a.height/2}return this._.dirtyT=1,this.transform(this._.transform.concat([[\"r\",t,e,n]])),this}},A.translate=function(t,e){return this.removed?this:((t=r(t).split(h)).length-1&&(e=i(t[1])),t=i(t[0])||0,e=+e||0,this._.bbox&&(this._.bbox.x+=t,this._.bbox.y+=e),this.transform(this._.transform.concat([[\"t\",t,e]])),this)},A.scale=function(t,e,n,a){if(this.removed)return this;if((t=r(t).split(h)).length-1&&(e=i(t[1]),n=i(t[2]),a=i(t[3]),isNaN(n)&&(n=null),isNaN(a)&&(a=null)),t=i(t[0]),null==e&&(e=t),null==a&&(n=a),null==n||null==a)var s=this.getBBox(1);return n=null==n?s.x+s.width/2:n,a=null==a?s.y+s.height/2:a,this.transform(this._.transform.concat([[\"s\",t,e,n,a]])),this._.dirtyT=1,this},A.hide=function(){return!this.removed&&(this.node.style.display=\"none\"),this},A.show=function(){return!this.removed&&(this.node.style.display=f),this},A.auxGetBBox=t.el.getBBox,A.getBBox=function(){var t=this.auxGetBBox();if(this.paper&&this.paper._viewBoxShift){var e={},r=1/this.paper._viewBoxShift.scale;return e.x=t.x-this.paper._viewBoxShift.dx,e.x*=r,e.y=t.y-this.paper._viewBoxShift.dy,e.y*=r,e.width=t.width*r,e.height=t.height*r,e.x2=e.x+e.width,e.y2=e.y+e.height,e}return t},A._getBBox=function(){return this.removed?{}:{x:this.X+(this.bbx||0)-this.W/2,y:this.Y-this.H,width:this.W,height:this.H}},A.remove=function(){if(!this.removed&&this.node.parentNode){for(var e in this.paper.__set__&&this.paper.__set__.exclude(this),t.eve.unbind(\"raphael.*.*.\"+this.id),t._tear(this,this.paper),this.node.parentNode.removeChild(this.node),this.shape&&this.shape.parentNode.removeChild(this.shape),this)this[e]=\"function\"==typeof this[e]?t._removedFactory(e):null;this.removed=!0}},A.attr=function(r,i){if(this.removed)return this;if(null==r){var n={};for(var a in this.attrs)this.attrs[e](a)&&(n[a]=this.attrs[a]);return n.gradient&&\"none\"==n.fill&&(n.fill=n.gradient)&&delete n.gradient,n.transform=this._.transform,n}if(null==i&&t.is(r,\"string\")){if(\"fill\"==r&&\"none\"==this.attrs.fill&&this.attrs.gradient)return this.attrs.gradient;for(var s=r.split(h),o={},l=0,c=s.length;l<c;l++)(r=s[l])in this.attrs?o[r]=this.attrs[r]:t.is(this.paper.customAttributes[r],\"function\")?o[r]=this.paper.customAttributes[r].def:o[r]=t._availableAttrs[r];return c-1?o:o[s[0]]}if(this.attrs&&null==i&&t.is(r,\"array\")){for(o={},l=0,c=r.length;l<c;l++)o[r[l]]=this.attr(r[l]);return o}var f;for(var p in null!=i&&((f={})[r]=i),null==i&&t.is(r,\"object\")&&(f=r),f)u(\"raphael.attr.\"+p+\".\"+this.id,this,f[p]);if(f){for(p in this.paper.customAttributes)if(this.paper.customAttributes[e](p)&&f[e](p)&&t.is(this.paper.customAttributes[p],\"function\")){var d=this.paper.customAttributes[p].apply(this,[].concat(f[p]));for(var g in this.attrs[p]=f[p],d)d[e](g)&&(f[g]=d[g])}f.text&&\"text\"==this.type&&(this.textpath.string=f.text),C(this,f)}return this},A.toFront=function(){return!this.removed&&this.node.parentNode.appendChild(this.node),this.paper&&this.paper.top!=this&&t._tofront(this,this.paper),this},A.toBack=function(){return this.removed?this:(this.node.parentNode.firstChild!=this.node&&(this.node.parentNode.insertBefore(this.node,this.node.parentNode.firstChild),t._toback(this,this.paper)),this)},A.insertAfter=function(e){return this.removed?this:(e.constructor==t.st.constructor&&(e=e[e.length-1]),e.node.nextSibling?e.node.parentNode.insertBefore(this.node,e.node.nextSibling):e.node.parentNode.appendChild(this.node),t._insertafter(this,e,this.paper),this)},A.insertBefore=function(e){return this.removed?this:(e.constructor==t.st.constructor&&(e=e[0]),e.node.parentNode.insertBefore(this.node,e.node),t._insertbefore(this,e,this.paper),this)},A.blur=function(e){var r=this.node.runtimeStyle,i=r.filter;return i=i.replace(g,f),0!=+e?(this.attrs.blur=e,r.filter=i+c+\" progid:DXImageTransform.Microsoft.Blur(pixelradius=\"+(+e||1.5)+\")\",r.margin=t.format(\"-{0}px 0 0 -{0}px\",a(+e||1.5))):(r.filter=i,r.margin=0,delete this.attrs.blur),this},t._engine.path=function(t,e){var r=k(\"shape\");r.style.cssText=v,r.coordsize=y+c+y,r.coordorigin=e.coordorigin;var i=new T(r,e),n={fill:\"none\",stroke:\"#000\"};t&&(n.path=t),i.type=\"path\",i.path=[],i.Path=f,C(i,n),e.canvas&&e.canvas.appendChild(r);var a=k(\"skew\");return a.on=!0,r.appendChild(a),i.skew=a,i.transform(f),i},t._engine.rect=function(e,r,i,n,a,s){var o=t._rectPath(r,i,n,a,s),l=e.path(o),h=l.attrs;return l.X=h.x=r,l.Y=h.y=i,l.W=h.width=n,l.H=h.height=a,h.r=s,h.path=o,l.type=\"rect\",l},t._engine.ellipse=function(t,e,r,i,n){var a=t.path();a.attrs;return a.X=e-i,a.Y=r-n,a.W=2*i,a.H=2*n,a.type=\"ellipse\",C(a,{cx:e,cy:r,rx:i,ry:n}),a},t._engine.circle=function(t,e,r,i){var n=t.path();n.attrs;return n.X=e-i,n.Y=r-i,n.W=n.H=2*i,n.type=\"circle\",C(n,{cx:e,cy:r,r:i}),n},t._engine.image=function(e,r,i,n,a,s){var o=t._rectPath(i,n,a,s),l=e.path(o).attr({stroke:\"none\"}),h=l.attrs,u=l.node,c=u.getElementsByTagName(\"fill\")[0];return h.src=r,l.X=h.x=i,l.Y=h.y=n,l.W=h.width=a,l.H=h.height=s,h.path=o,l.type=\"image\",c.parentNode==u&&u.removeChild(c),c.rotate=!0,c.src=r,c.type=\"tile\",l._.fillpos=[i,n],l._.fillsize=[a,s],u.appendChild(c),w(l,1,1,0,0,0),l},t._engine.text=function(e,i,n,s){var o=k(\"shape\"),l=k(\"path\"),h=k(\"textpath\");i=i||0,n=n||0,s=s||\"\",l.v=t.format(\"m{0},{1}l{2},{1}\",a(i*y),a(n*y),a(i*y)+1),l.textpathok=!0,h.string=r(s),h.on=!0,o.style.cssText=v,o.coordsize=y+c+y,o.coordorigin=\"0 0\";var u=new T(o,e),p={fill:\"#000\",stroke:\"none\",font:t._availableAttrs.font,text:s};u.shape=o,u.path=l,u.textpath=h,u.type=\"text\",u.attrs.text=r(s),u.attrs.x=i,u.attrs.y=n,u.attrs.w=1,u.attrs.h=1,C(u,p),o.appendChild(h),o.appendChild(l),e.canvas.appendChild(o);var d=k(\"skew\");return d.on=!0,o.appendChild(d),u.skew=d,u.transform(f),u},t._engine.setSize=function(e,r){var i=this.canvas.style;return this.width=e,this.height=r,e==+e&&(e+=\"px\"),r==+r&&(r+=\"px\"),i.width=e,i.height=r,i.clip=\"rect(0 \"+e+\" \"+r+\" 0)\",this._viewBox&&t._engine.setViewBox.apply(this,this._viewBox),this},t._engine.setViewBox=function(e,r,i,n,a){t.eve(\"raphael.setViewBox\",this,this._viewBox,[e,r,i,n,a]);var s,o,l=this.getSize(),h=l.width,u=l.height;return a&&(i*(s=u/n)<h&&(e-=(h-i*s)/2/s),n*(o=h/i)<u&&(r-=(u-n*o)/2/o)),this._viewBox=[e,r,i,n,!!a],this._viewBoxShift={dx:-e,dy:-r,scale:l},this.forEach(function(t){t.transform(\"...\")}),this},t._engine.initWin=function(t){var e=t.document;e.styleSheets.length<31?e.createStyleSheet().addRule(\".rvml\",\"behavior:url(#default#VML)\"):e.styleSheets[0].addRule(\".rvml\",\"behavior:url(#default#VML)\");try{!e.namespaces.rvml&&e.namespaces.add(\"rvml\",\"urn:schemas-microsoft-com:vml\"),k=function(t){return e.createElement(\"<rvml:\"+t+' class=\"rvml\">')}}catch(t){k=function(t){return e.createElement(\"<\"+t+' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">')}}},t._engine.initWin(t._g.win),t._engine.create=function(){var e=t._getContainer.apply(0,arguments),r=e.container,i=e.height,n=e.width,a=e.x,s=e.y;if(!r)throw new Error(\"VML container not found.\");var o=new t._Paper,l=o.canvas=t._g.doc.createElement(\"div\"),h=l.style;return a=a||0,s=s||0,n=n||512,i=i||342,o.width=n,o.height=i,n==+n&&(n+=\"px\"),i==+i&&(i+=\"px\"),o.coordsize=216e5+c+216e5,o.coordorigin=\"0 0\",o.span=t._g.doc.createElement(\"span\"),o.span.style.cssText=\"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;\",l.appendChild(o.span),h.cssText=t.format(\"top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden\",n,i),1==r?(t._g.doc.body.appendChild(l),h.left=a+\"px\",h.top=s+\"px\",h.position=\"absolute\"):r.firstChild?r.insertBefore(l,r.firstChild):r.appendChild(l),o.renderfix=function(){},o},t.prototype.clear=function(){t.eve(\"raphael.clear\",this),this.canvas.innerHTML=f,this.span=t._g.doc.createElement(\"span\"),this.span.style.cssText=\"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;\",this.canvas.appendChild(this.span),this.bottom=this.top=null},t.prototype.remove=function(){for(var e in t.eve(\"raphael.remove\",this),this.canvas.parentNode.removeChild(this.canvas),this)this[e]=\"function\"==typeof this[e]?t._removedFactory(e):null;return!0};var M=t.st;for(var E in A)A[e](E)&&!M[e](E)&&(M[E]=function(t){return function(){var e=arguments;return this.forEach(function(r){r[t].apply(r,e)})}}(E))}}.apply(e,i))||(t.exports=n)}])});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/raphael/raphael.min.js\n");

/***/ }),

/***/ "./sass/style.scss":
/*!*************************!*\
  !*** ./sass/style.scss ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zYXNzL3N0eWxlLnNjc3MuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zYXNzL3N0eWxlLnNjc3M/MzEzYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW4iXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./sass/style.scss\n");

/***/ }),

/***/ "./src/css.js":
/*!********************!*\
  !*** ./src/css.js ***!
  \********************/
/*! exports provided: setSkPathFontResizingStyle, hasProportionalFontSupport, getNewLuminosity */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setSkPathFontResizingStyle\", function() { return setSkPathFontResizingStyle; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hasProportionalFontSupport\", function() { return hasProportionalFontSupport; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getNewLuminosity\", function() { return getNewLuminosity; });\n/* harmony import */ var _sass_style_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../sass/style.scss */ \"./sass/style.scss\");\n/* harmony import */ var _sass_style_scss__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_sass_style_scss__WEBPACK_IMPORTED_MODULE_0__);\n/* $Id: css.js, v1.0 2019/11/30 VaderDarth Exp $\r\n * OpenCPN dashboard_tactics plug-in\r\n * Licensed under MIT - see distribution.\r\n */\n\nvar skpathispropl = false;\nfunction setSkPathFontResizingStyle() {\n  var hasproplsupport = false;\n  var hadexception = false;\n  var ua = window.navigator.userAgent;\n  var msie = ua.indexOf('MSIE ');\n\n  try {\n    if (CSS.supports) {\n      if (CSS.supports('font-size', getComputedStyle(document.documentElement).getPropertyValue('--skpproplw'))) {\n        console.log('Has viewport proportional font size support');\n        hasproplsupport = true;\n      } else {\n        console.log('No viewport proportional font size support, use media properties');\n      }\n    }\n  } catch (error) {\n    hadexception = true;\n    console.log('No CSS.supports() - got exception, use media properties - unless this is a MSIE: use propl, anyway!');\n  }\n\n  if (hasproplsupport || hadexception && msie > 0) {\n    skpathispropl = true;\n    document.getElementById('skPath').className = 'skpath propl day';\n  } else document.getElementById('skPath').className = 'skpath fixed day';\n\n  return;\n}\nfunction hasProportionalFontSupport() {\n  return skpathispropl;\n}\nfunction getNewLuminosity(that) {\n  var newluminosity = window.iface.getluminsty();\n\n  if (newluminosity === 'day' || newluminosity === 'dusk' || newluminosity === 'night') {\n    that.luminosity = newluminosity;\n    var newclass = 'instrument ' + newluminosity;\n    var elem = document.getElementById('instrument');\n    var oldclass = elem.className;\n    if (!(newclass === oldclass)) elem.className = newclass;\n    if (skpathispropl) newclass = 'skpath propl ' + newluminosity;else newclass = 'skpath fixed ' + newluminosity;\n    elem = document.getElementById('skPath');\n    oldclass = elem.className;\n    if (!(newclass === oldclass)) elem.className = newclass;\n    var elemnum = document.getElementById('numgauge0');\n\n    if (elemnum !== null) {\n      oldclass = elemnum.className;\n      if (skpathispropl) newclass = 'numgauge propl ' + newluminosity;else newclass = 'numgauge fixed ' + newluminosity;\n      if (!(newclass === oldclass)) elemnum.className = newclass;\n    }\n\n    var elemunit = document.getElementById('numgunit0');\n\n    if (elemunit !== null) {\n      oldclass = elemunit.className;\n      if (skpathispropl) newclass = 'numgunit propl ' + newluminosity;else newclass = 'numgunit fixed ' + newluminosity;\n      if (!(newclass === oldclass)) elemunit.className = newclass;\n    }\n\n    document.getElementById('bottom').className = 'bottom ' + that.luminosity; // Gauge, sorry no SCSS, requires justgage 1.3.4 or greater\n\n    if (that.gauge.length > 0) {\n      if (newluminosity === 'day') {\n        that.gauge[0].labelFontColor = '#232b99';\n        that.gauge[0].update('labelFontColor', '#232b99');\n        that.gauge[0].valueFontColor = '#232b99';\n        that.gauge[0].update('valueFontColor', '#232b99');\n      } else if (newluminosity === 'dusk') {\n        that.gauge[0].labelFontColor = '#e0e0e4';\n        that.gauge[0].update('labelFontColor', '#e0e0e4');\n        that.gauge[0].valueFontColor = '#232b99';\n        that.gauge[0].update('valueFontColor', '#232b99');\n      } else if (newluminosity === 'night') {\n        that.gauge[0].labelFontColor = '#6168c2';\n        that.gauge[0].update('labelFontColor', '#6168c2');\n        that.gauge[0].valueFontColor = '#aaaeeb';\n        that.gauge[0].update('valueFontColor', '#aaaeeb');\n      }\n    }\n  }\n\n  return;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY3NzLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL2Nzcy5qcz80MzQ2Il0sInNvdXJjZXNDb250ZW50IjpbIi8qICRJZDogY3NzLmpzLCB2MS4wIDIwMTkvMTEvMzAgVmFkZXJEYXJ0aCBFeHAgJFxyXG4gKiBPcGVuQ1BOIGRhc2hib2FyZF90YWN0aWNzIHBsdWctaW5cclxuICogTGljZW5zZWQgdW5kZXIgTUlUIC0gc2VlIGRpc3RyaWJ1dGlvbi5cclxuICovXHJcblxyXG5pbXBvcnQgJy4uL3Nhc3Mvc3R5bGUuc2NzcydcclxuXHJcbnZhciBza3BhdGhpc3Byb3BsID0gZmFsc2VcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzZXRTa1BhdGhGb250UmVzaXppbmdTdHlsZSgpIHtcclxuICAgIHZhciBoYXNwcm9wbHN1cHBvcnQgPSBmYWxzZVxyXG4gICAgdmFyIGhhZGV4Y2VwdGlvbiA9IGZhbHNlXHJcbiAgICB2YXIgdWEgPSB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudFxyXG4gICAgdmFyIG1zaWUgPSB1YS5pbmRleE9mKCdNU0lFICcpXHJcbiAgICB0cnkgeyBcclxuICAgICAgICBpZiAoIENTUy5zdXBwb3J0cyApIHtcclxuICAgICAgICAgICAgaWYgKCBDU1Muc3VwcG9ydHMoJ2ZvbnQtc2l6ZScsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdldENvbXB1dGVkU3R5bGUoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpLmdldFByb3BlcnR5VmFsdWUoXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJy0tc2twcHJvcGx3JykpICkge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0hhcyB2aWV3cG9ydCBwcm9wb3J0aW9uYWwgZm9udCBzaXplIHN1cHBvcnQnKVxyXG4gICAgICAgICAgICAgICAgaGFzcHJvcGxzdXBwb3J0ID0gdHJ1ZVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnTm8gdmlld3BvcnQgcHJvcG9ydGlvbmFsIGZvbnQgc2l6ZSBzdXBwb3J0LCB1c2UgbWVkaWEgcHJvcGVydGllcycpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBjYXRjaCggZXJyb3IgKSB7XHJcbiAgICAgICAgaGFkZXhjZXB0aW9uID0gdHJ1ZVxyXG4gICAgICAgIGNvbnNvbGUubG9nKCdObyBDU1Muc3VwcG9ydHMoKSAtIGdvdCBleGNlcHRpb24sIHVzZSBtZWRpYSBwcm9wZXJ0aWVzIC0gdW5sZXNzIHRoaXMgaXMgYSBNU0lFOiB1c2UgcHJvcGwsIGFueXdheSEnKVxyXG4gICAgfVxyXG4gICAgaWYgKCBoYXNwcm9wbHN1cHBvcnQgfHwgKCBoYWRleGNlcHRpb24gJiYgKG1zaWUgPiAwKSApICkge1xyXG4gICAgICAgIHNrcGF0aGlzcHJvcGwgPSB0cnVlXHJcbiAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3NrUGF0aCcpLmNsYXNzTmFtZSA9ICdza3BhdGggcHJvcGwgZGF5J1xyXG4gICAgfVxyXG4gICAgZWxzZVxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdza1BhdGgnKS5jbGFzc05hbWUgPSAnc2twYXRoIGZpeGVkIGRheSdcclxuICAgIHJldHVyblxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaGFzUHJvcG9ydGlvbmFsRm9udFN1cHBvcnQoKSB7XHJcbiAgICByZXR1cm4gc2twYXRoaXNwcm9wbFxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0TmV3THVtaW5vc2l0eSggdGhhdCApIHtcclxuICAgIHZhciBuZXdsdW1pbm9zaXR5ID0gd2luZG93LmlmYWNlLmdldGx1bWluc3R5KClcclxuICAgIGlmICggKG5ld2x1bWlub3NpdHkgPT09ICdkYXknKSB8fFxyXG4gICAgICAgICAobmV3bHVtaW5vc2l0eSA9PT0gJ2R1c2snKSB8fFxyXG4gICAgICAgICAobmV3bHVtaW5vc2l0eSA9PT0gJ25pZ2h0JykgKSB7XHJcbiAgICAgICAgdGhhdC5sdW1pbm9zaXR5ICA9IG5ld2x1bWlub3NpdHlcclxuXHJcbiAgICAgICAgdmFyIG5ld2NsYXNzID0gJ2luc3RydW1lbnQgJyArIG5ld2x1bWlub3NpdHlcclxuICAgICAgICB2YXIgZWxlbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdpbnN0cnVtZW50JylcclxuICAgICAgICB2YXIgb2xkY2xhc3MgPSBlbGVtLmNsYXNzTmFtZVxyXG4gICAgICAgIGlmICggIShuZXdjbGFzcyA9PT0gb2xkY2xhc3MpIClcclxuICAgICAgICAgICAgZWxlbS5jbGFzc05hbWUgPSBuZXdjbGFzc1xyXG5cclxuICAgICAgICBpZiAoIHNrcGF0aGlzcHJvcGwgKVxyXG4gICAgICAgICAgICBuZXdjbGFzcyA9ICdza3BhdGggcHJvcGwgJyArIG5ld2x1bWlub3NpdHlcclxuICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIG5ld2NsYXNzID0gJ3NrcGF0aCBmaXhlZCAnICsgbmV3bHVtaW5vc2l0eVxyXG4gICAgICAgIGVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2tQYXRoJylcclxuICAgICAgICBvbGRjbGFzcyA9IGVsZW0uY2xhc3NOYW1lXHJcbiAgICAgICAgaWYgKCAhKG5ld2NsYXNzID09PSBvbGRjbGFzcykgKVxyXG4gICAgICAgICAgICBlbGVtLmNsYXNzTmFtZSA9IG5ld2NsYXNzXHJcblxyXG4gICAgICAgIHZhciBlbGVtbnVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ251bWdhdWdlMCcpXHJcbiAgICAgICAgaWYgKCBlbGVtbnVtICE9PSBudWxsICkge1xyXG4gICAgICAgICAgICBvbGRjbGFzcyA9IGVsZW1udW0uY2xhc3NOYW1lXHJcbiAgICAgICAgICAgIGlmICggc2twYXRoaXNwcm9wbCApXHJcbiAgICAgICAgICAgICAgICBuZXdjbGFzcyA9ICdudW1nYXVnZSBwcm9wbCAnICsgbmV3bHVtaW5vc2l0eVxyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgICAgICBuZXdjbGFzcyA9ICdudW1nYXVnZSBmaXhlZCAnICsgbmV3bHVtaW5vc2l0eVxyXG4gICAgICAgICAgICBpZiAoICEobmV3Y2xhc3MgPT09IG9sZGNsYXNzKSApXHJcbiAgICAgICAgICAgIGVsZW1udW0uY2xhc3NOYW1lID0gbmV3Y2xhc3NcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIGVsZW11bml0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ251bWd1bml0MCcpXHJcbiAgICAgICAgaWYgKCBlbGVtdW5pdCAhPT0gbnVsbCApIHtcclxuICAgICAgICAgICAgb2xkY2xhc3MgPSBlbGVtdW5pdC5jbGFzc05hbWVcclxuICAgICAgICAgICAgaWYgKCBza3BhdGhpc3Byb3BsIClcclxuICAgICAgICAgICAgICAgIG5ld2NsYXNzID0gJ251bWd1bml0IHByb3BsICcgKyBuZXdsdW1pbm9zaXR5XHJcbiAgICAgICAgICAgIGVsc2VcclxuICAgICAgICAgICAgICAgIG5ld2NsYXNzID0gJ251bWd1bml0IGZpeGVkICcgKyBuZXdsdW1pbm9zaXR5XHJcbiAgICAgICAgICAgIGlmICggIShuZXdjbGFzcyA9PT0gb2xkY2xhc3MpIClcclxuICAgICAgICAgICAgZWxlbXVuaXQuY2xhc3NOYW1lID0gbmV3Y2xhc3NcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdib3R0b20nKS5jbGFzc05hbWUgPSAnYm90dG9tICcgKyB0aGF0Lmx1bWlub3NpdHlcclxuXHJcbiAgICAgICAgLy8gR2F1Z2UsIHNvcnJ5IG5vIFNDU1MsIHJlcXVpcmVzIGp1c3RnYWdlIDEuMy40IG9yIGdyZWF0ZXJcclxuICAgICAgICBpZiAoICh0aGF0LmdhdWdlLmxlbmd0aCA+IDApICkgIHtcclxuICAgICAgICAgICAgaWYgKCBuZXdsdW1pbm9zaXR5ID09PSAnZGF5Jykge1xyXG4gICAgICAgICAgICAgICAgdGhhdC5nYXVnZVswXS5sYWJlbEZvbnRDb2xvciA9ICcjMjMyYjk5J1xyXG4gICAgICAgICAgICAgICAgdGhhdC5nYXVnZVswXS51cGRhdGUoJ2xhYmVsRm9udENvbG9yJywgJyMyMzJiOTknKVxyXG4gICAgICAgICAgICAgICAgdGhhdC5nYXVnZVswXS52YWx1ZUZvbnRDb2xvciA9ICcjMjMyYjk5J1xyXG4gICAgICAgICAgICAgICAgdGhhdC5nYXVnZVswXS51cGRhdGUoJ3ZhbHVlRm9udENvbG9yJywgJyMyMzJiOTknKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKCBuZXdsdW1pbm9zaXR5ID09PSAnZHVzaycpIHtcclxuICAgICAgICAgICAgICAgIHRoYXQuZ2F1Z2VbMF0ubGFiZWxGb250Q29sb3IgPSAnI2UwZTBlNCdcclxuICAgICAgICAgICAgICAgIHRoYXQuZ2F1Z2VbMF0udXBkYXRlKCdsYWJlbEZvbnRDb2xvcicsICcjZTBlMGU0JylcclxuICAgICAgICAgICAgICAgIHRoYXQuZ2F1Z2VbMF0udmFsdWVGb250Q29sb3IgPSAnIzIzMmI5OSdcclxuICAgICAgICAgICAgICAgIHRoYXQuZ2F1Z2VbMF0udXBkYXRlKCd2YWx1ZUZvbnRDb2xvcicsICcjMjMyYjk5JylcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmICggbmV3bHVtaW5vc2l0eSA9PT0gJ25pZ2h0Jykge1xyXG4gICAgICAgICAgICAgICAgdGhhdC5nYXVnZVswXS5sYWJlbEZvbnRDb2xvciA9ICcjNjE2OGMyJ1xyXG4gICAgICAgICAgICAgICAgdGhhdC5nYXVnZVswXS51cGRhdGUoJ2xhYmVsRm9udENvbG9yJywgJyM2MTY4YzInKVxyXG4gICAgICAgICAgICAgICAgdGhhdC5nYXVnZVswXS52YWx1ZUZvbnRDb2xvciA9ICcjYWFhZWViJ1xyXG4gICAgICAgICAgICAgICAgdGhhdC5nYXVnZVswXS51cGRhdGUoJ3ZhbHVlRm9udENvbG9yJywgJyNhYWFlZWInKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuXHJcbn1cclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7OztBQUtBO0FBRUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFJQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUdBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFHQTtBQUlBO0FBQ0E7QUFDQTtBQUdBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFJQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBSUE7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/css.js\n");

/***/ }),

/***/ "./src/data.js":
/*!*********************!*\
  !*** ./src/data.js ***!
  \*********************/
/*! exports provided: onWaitdataFinalCheck, showData, clearData, prepareDataHalt */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"onWaitdataFinalCheck\", function() { return onWaitdataFinalCheck; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"showData\", function() { return showData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clearData\", function() { return clearData; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"prepareDataHalt\", function() { return prepareDataHalt; });\n/* harmony import */ var _src_escapeHTML__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../src/escapeHTML */ \"../src/escapeHTML.js\");\n/* harmony import */ var _disp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./disp */ \"./src/disp.js\");\n/* harmony import */ var _src_conf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../src/conf */ \"../src/conf.js\");\n/* $Id: data.js, v1.0 2019/11/30 VaderDarth Exp $\r\n * OpenCPN dashboard_tactics plug-in\r\n * Licensed under MIT - see distribution.\r\n */\n// An actor to ask and retrieve from a client a unique ID for this instance\n\nvar Sanitizer = Object(_src_escapeHTML__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n\n\nvar dbglevel = window.instrustat.debuglevel;\nvar alerts = window.instrustat.alerts;\nvar alertdelay = window.instrustat.alertdelay;\nfunction onWaitdataFinalCheck(that) {\n  var elem = document.getElementById('skPath');\n  var htmlObj = null;\n  var htmlCandidate = null;\n\n  var getSetDefTitle = function getSetDefTitle() {\n    Object(_src_conf__WEBPACK_IMPORTED_MODULE_2__[\"getPathDefaultsIfNew\"])(that);\n    if (that.conf.title !== null && that.conf.title !== '') htmlCandidate = that.conf.title;else htmlCandidate = that.conf.path;\n  };\n\n  if (that.conf !== null) {\n    if (that.conf.title !== null && that.conf.title !== '') htmlCandidate = that.conf.title;else if (that.conf.path !== null && that.conf.path !== '') getSetDefTitle();\n  } else if (that.path !== null && that.path !== '') getSetDefTitle();else if (dbglevel > 1) console.error('onWaitdataFinalCheck(): no path, no conf!');\n\n  if (htmlCandidate !== null) {\n    htmlObj = Sanitizer.createSafeHTML(htmlCandidate);\n    elem.innerHTML = Sanitizer.unwrapSafeHTML(htmlObj);\n  }\n}\nvar alertcondition = false;\nvar alertcounter = 0;\nvar alertthreshold = alertdelay;\nvar suppressShowData = false;\nfunction showData(that) {\n  if (suppressShowData) return;\n  that.glastvalue = window.iface.getdata();\n  var dispvalue = that.glastvalue;\n  console.log('dispvalue : ', dispvalue);\n\n  if (that.conf !== null) {\n    dispvalue *= that.conf.multiplier;\n    if (dbglevel > 2) console.log('dispvalue x: ', dispvalue, 'multiplier: ', that.conf.multiplier);\n    if (that.conf.divider > 0) dispvalue /= that.conf.divider;\n    if (dbglevel > 2) console.log('dispvalue /: ', dispvalue, 'divider: ', that.conf.divider);\n    if (that.conf.offset !== 0) dispvalue += that.conf.offset;\n    if (dbglevel > 2) console.log('dispvalue +: ', dispvalue, 'offset: ', that.conf.offset);\n\n    if (alerts) {\n      if (!alertcondition) {\n        var alertSource;\n        if (that.conf.title !== null && that.conf.title !== '') alertSource = that.conf.title;else alertSource = that.conf.path;\n\n        if (that.conf.loalert !== 0) {\n          if (dispvalue < that.conf.loalert) {\n            if (alertcounter >= alertthreshold) {\n              alertcondition = true;\n              alert(window.instrulang.alertTitle + '\\n' + alertSource + '\\n' + window.instrulang.alertLolimit + '\\n' + dispvalue + ' ' + that.conf.unit);\n            } else {\n              alertcounter += 1;\n            }\n          }\n        }\n\n        if (that.conf.hialert !== 0) {\n          if (dispvalue > that.conf.hialert) {\n            if (alertcounter >= alertthreshold) {\n              alertcondition = true;\n              alert(window.instrulang.alertTitle + '\\n' + alertSource + '\\n' + window.instrulang.alertHilimit + '\\n' + dispvalue + ' ' + that.conf.unit);\n            } else {\n              alertcounter += 1;\n            }\n          }\n        }\n      } else {\n        if (dispvalue > that.conf.loalert && (dispvalue < that.conf.hialert || that.conf.hialert === 0)) {\n          alertcondition = false;\n          alertcounter = 0;\n        }\n      }\n    }\n  }\n\n  if (that.gauge.length > 0 && that.glastvalue !== null) {\n    that.gauge[0].refresh(dispvalue, that.conf.maxval, that.conf.minval, that.conf.unit);\n  } else {\n    var elemnum = document.getElementById('numgauge0');\n    var htmlCandidate;\n    var htmlObj;\n\n    if (elemnum !== null) {\n      var roundedval = dispvalue.toFixed(that.conf.decimals);\n      htmlCandidate = roundedval + that.conf.symbol;\n      htmlObj = Sanitizer.createSafeHTML(htmlCandidate);\n      elemnum.innerHTML = Sanitizer.unwrapSafeHTML(htmlObj);\n    }\n\n    var elemunit = document.getElementById('numgunit0');\n\n    if (elemunit !== null) {\n      htmlCandidate = that.conf.unit;\n      htmlObj = Sanitizer.createSafeHTML(htmlCandidate);\n      elemunit.innerHTML = Sanitizer.unwrapSafeHTML(htmlObj);\n    }\n  }\n}\nfunction clearData(that) {\n  that.glastvalue = 0;\n\n  if (that.gauge.length > 0) {\n    that.gauge[0].symbol = '';\n    that.gauge[0].refresh(0, 100, 0, '');\n  } else {\n    document.getElementById('numgauge0').innerHTML = '&nbsp;';\n    document.getElementById('numgunit0').innerHTML = '&nbsp;';\n  }\n\n  suppressShowData = true; // otherwise the rolling dial will check for value\n\n  Object(_disp__WEBPACK_IMPORTED_MODULE_1__[\"rollDisplayToSelection\"])(that);\n  suppressShowData = false;\n}\nfunction prepareDataHalt(that) {\n  clearData(that);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/data.js\n");

/***/ }),

/***/ "./src/disp.js":
/*!*********************!*\
  !*** ./src/disp.js ***!
  \*********************/
/*! exports provided: swapDisplay, rollDisplayToSelection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"swapDisplay\", function() { return swapDisplay; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rollDisplayToSelection\", function() { return rollDisplayToSelection; });\n/* harmony import */ var _src_escapeHTML__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../src/escapeHTML */ \"../src/escapeHTML.js\");\n/* harmony import */ var _gauge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gauge */ \"./src/gauge.js\");\n/* harmony import */ var _css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./css */ \"./src/css.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data */ \"./src/data.js\");\n/* harmony import */ var _src_conf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../src/conf */ \"../src/conf.js\");\n/* $Id: disp.js, v1.0 2019/11/30 VaderDarth Exp $\r\n * OpenCPN dashboard_tactics plug-in\r\n * Licensed under MIT - see distribution.\r\n */\n// An actor to handle the display object(s)\n\nvar Sanitizer = Object(_src_escapeHTML__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n\n\n\n\nfunction swapDisplay(that, direction, memorize) {\n  var dir = direction || 'up';\n  var memorizeChange = memorize || true;\n\n  if (that.gauge.length > 0) {\n    var removedgauge = that.gauge.pop();\n    removedgauge.destroy();\n  }\n\n  var nextdisp = 'dial';\n\n  if (dir === 'up') {\n    if (that.conf.display === 'dial') nextdisp = 'donut';else if (that.conf.display === 'donut') nextdisp = 'simple';\n  } else {\n    if (that.conf.display === 'dial') nextdisp = 'simple';else if (that.conf.display === 'simple') nextdisp = 'donut';\n  }\n\n  if (nextdisp === 'simple') {\n    var htmlCandidate = '<div class=\"numgauge ' + (_css__WEBPACK_IMPORTED_MODULE_2__[\"hasProportionalFontSupport\"] ? 'propl ' : 'fixed ') + that.luminosity + '\" id=\"numgauge0\"></div>' + '<div class=\"numgunit ' + (_css__WEBPACK_IMPORTED_MODULE_2__[\"hasProportionalFontSupport\"] ? 'propl ' : 'fixed ') + that.luminosity + '\" id=\"numgunit0\"></div>';\n    var htmlObj = Sanitizer.createSafeHTML(htmlCandidate);\n    document.getElementById('gauge0').innerHTML = Sanitizer.unwrapSafeHTML(htmlObj);\n  } else {\n    document.getElementById('gauge0').innerHTML = '';\n\n    if (nextdisp === 'dial') {\n      that.gauge.push(Object(_gauge__WEBPACK_IMPORTED_MODULE_1__[\"createGauge\"])('gauge0', 0, that.conf.decimals, that.conf.unit, false, that.conf.symbol));\n    } else {\n      that.gauge.push(Object(_gauge__WEBPACK_IMPORTED_MODULE_1__[\"createGauge\"])('gauge0', 0, that.conf.decimals, that.conf.unit, true, that.conf.symbol));\n    }\n  }\n\n  Object(_data__WEBPACK_IMPORTED_MODULE_3__[\"showData\"])(that);\n  that.conf.display = nextdisp;\n  if (memorizeChange) Object(_src_conf__WEBPACK_IMPORTED_MODULE_4__[\"memorizeSettings\"])(that);\n  return;\n}\nfunction rollDisplayToSelection(that) {\n  if (that.conf.display === 'dial') {\n    swapDisplay(that, 'down', false); // re-init\n\n    swapDisplay(that, 'down', false);\n    swapDisplay(that, 'down', false);\n  } else if (that.conf.display === 'simple') {\n    that.conf.display = 'dial';\n    swapDisplay(that, 'down', true);\n  } else {\n    that.conf.display = 'dial';\n    swapDisplay(that, 'up', true);\n  }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZGlzcC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9kaXNwLmpzPzQ1MzQiXSwic291cmNlc0NvbnRlbnQiOlsiLyogJElkOiBkaXNwLmpzLCB2MS4wIDIwMTkvMTEvMzAgVmFkZXJEYXJ0aCBFeHAgJFxyXG4gKiBPcGVuQ1BOIGRhc2hib2FyZF90YWN0aWNzIHBsdWctaW5cclxuICogTGljZW5zZWQgdW5kZXIgTUlUIC0gc2VlIGRpc3RyaWJ1dGlvbi5cclxuICovXHJcblxyXG4vLyBBbiBhY3RvciB0byBoYW5kbGUgdGhlIGRpc3BsYXkgb2JqZWN0KHMpXHJcblxyXG5pbXBvcnQgc2FuaXRpemVyIGZyb20gJy4uLy4uL3NyYy9lc2NhcGVIVE1MJ1xyXG52YXIgU2FuaXRpemVyID0gc2FuaXRpemVyKClcclxuXHJcbmltcG9ydCB7IGNyZWF0ZUdhdWdlIH0gZnJvbSAnLi9nYXVnZSdcclxuaW1wb3J0IHsgaGFzUHJvcG9ydGlvbmFsRm9udFN1cHBvcnQgfSBmcm9tICcuL2NzcydcclxuaW1wb3J0IHsgc2hvd0RhdGEgfSBmcm9tICcuL2RhdGEnXHJcbmltcG9ydCB7IG1lbW9yaXplU2V0dGluZ3MgfSBmcm9tICcuLi8uLi9zcmMvY29uZidcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzd2FwRGlzcGxheSggdGhhdCwgZGlyZWN0aW9uLCBtZW1vcml6ZSApIHtcclxuICAgIHZhciBkaXIgPSBkaXJlY3Rpb24gfHwgJ3VwJ1xyXG4gICAgdmFyIG1lbW9yaXplQ2hhbmdlID0gbWVtb3JpemUgfHwgdHJ1ZVxyXG4gICAgaWYgKCAodGhhdC5nYXVnZS5sZW5ndGggPiAwKSApIHtcclxuICAgICAgICB2YXIgcmVtb3ZlZGdhdWdlID0gdGhhdC5nYXVnZS5wb3AoKVxyXG4gICAgICAgIHJlbW92ZWRnYXVnZS5kZXN0cm95KClcclxuICAgIH1cclxuICAgIHZhciBuZXh0ZGlzcCA9ICdkaWFsJ1xyXG4gICAgaWYgKCBkaXIgPT09ICd1cCcgKSB7XHJcbiAgICAgICAgaWYgKCB0aGF0LmNvbmYuZGlzcGxheSA9PT0gJ2RpYWwnIClcclxuICAgICAgICAgICAgbmV4dGRpc3AgPSAnZG9udXQnXHJcbiAgICAgICAgZWxzZSBpZiAoIHRoYXQuY29uZi5kaXNwbGF5ID09PSAnZG9udXQnIClcclxuICAgICAgICAgICAgbmV4dGRpc3AgPSAnc2ltcGxlJ1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgaWYgKCB0aGF0LmNvbmYuZGlzcGxheSA9PT0gJ2RpYWwnIClcclxuICAgICAgICAgICAgbmV4dGRpc3AgPSAnc2ltcGxlJ1xyXG4gICAgICAgIGVsc2UgaWYgKCB0aGF0LmNvbmYuZGlzcGxheSA9PT0gJ3NpbXBsZScgKVxyXG4gICAgICAgICAgICBuZXh0ZGlzcCA9ICdkb251dCdcclxuICAgIH1cclxuICAgIFxyXG4gICAgaWYgKCBuZXh0ZGlzcCA9PT0gJ3NpbXBsZScgKSB7XHJcbiAgICAgICAgdmFyIGh0bWxDYW5kaWRhdGUgPVxyXG4gICAgICAgICAgICAnPGRpdiBjbGFzcz1cIm51bWdhdWdlICcgK1xyXG4gICAgICAgICAgICAoaGFzUHJvcG9ydGlvbmFsRm9udFN1cHBvcnQ/J3Byb3BsICc6J2ZpeGVkICcpICtcclxuICAgICAgICAgICAgdGhhdC5sdW1pbm9zaXR5ICtcclxuICAgICAgICAgICAgJ1wiIGlkPVwibnVtZ2F1Z2UwXCI+PC9kaXY+JyArXHJcbiAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwibnVtZ3VuaXQgJyArXHJcbiAgICAgICAgICAgIChoYXNQcm9wb3J0aW9uYWxGb250U3VwcG9ydD8ncHJvcGwgJzonZml4ZWQgJykgK1xyXG4gICAgICAgICAgICB0aGF0Lmx1bWlub3NpdHkgK1xyXG4gICAgICAgICAgICAnXCIgaWQ9XCJudW1ndW5pdDBcIj48L2Rpdj4nXHJcbiAgICAgICAgdmFyIGh0bWxPYmogPSBTYW5pdGl6ZXIuY3JlYXRlU2FmZUhUTUwoaHRtbENhbmRpZGF0ZSlcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZ2F1Z2UwJykuaW5uZXJIVE1MID1cclxuICAgICAgICAgICAgU2FuaXRpemVyLnVud3JhcFNhZmVIVE1MKGh0bWxPYmopXHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZ2F1Z2UwJykuaW5uZXJIVE1MID0gJydcclxuICAgICAgICBpZiAobmV4dGRpc3AgPT09ICdkaWFsJykge1xyXG4gICAgICAgICAgICB0aGF0LmdhdWdlLnB1c2ggKFxyXG4gICAgICAgICAgICAgICAgY3JlYXRlR2F1Z2UoJ2dhdWdlMCcsIDAsIHRoYXQuY29uZi5kZWNpbWFscyxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoYXQuY29uZi51bml0LCBmYWxzZSwgdGhhdC5jb25mLnN5bWJvbCApIClcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoYXQuZ2F1Z2UucHVzaCAoXHJcbiAgICAgICAgICAgICAgICBjcmVhdGVHYXVnZSgnZ2F1Z2UwJywgMCwgdGhhdC5jb25mLmRlY2ltYWxzLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhhdC5jb25mLnVuaXQsIHRydWUsIHRoYXQuY29uZi5zeW1ib2wgKSApXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHNob3dEYXRhKCB0aGF0IClcclxuICAgIHRoYXQuY29uZi5kaXNwbGF5ID0gbmV4dGRpc3BcclxuICAgIGlmICggbWVtb3JpemVDaGFuZ2UgKVxyXG4gICAgICAgIG1lbW9yaXplU2V0dGluZ3MoIHRoYXQgKVxyXG4gICAgcmV0dXJuXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiByb2xsRGlzcGxheVRvU2VsZWN0aW9uKCB0aGF0ICkge1xyXG4gICAgaWYgKCB0aGF0LmNvbmYuZGlzcGxheSA9PT0gJ2RpYWwnICkge1xyXG4gICAgICAgIHN3YXBEaXNwbGF5KCB0aGF0LCAnZG93bicsIGZhbHNlICkgLy8gcmUtaW5pdFxyXG4gICAgICAgIHN3YXBEaXNwbGF5KCB0aGF0LCAnZG93bicsIGZhbHNlIClcclxuICAgICAgICBzd2FwRGlzcGxheSggdGhhdCwgJ2Rvd24nLCBmYWxzZSApXHJcbiAgICB9XHJcbiAgICBlbHNlIGlmICggdGhhdC5jb25mLmRpc3BsYXkgPT09ICdzaW1wbGUnICkge1xyXG4gICAgICAgIHRoYXQuY29uZi5kaXNwbGF5ID0gJ2RpYWwnXHJcbiAgICAgICAgc3dhcERpc3BsYXkoIHRoYXQsICdkb3duJywgdHJ1ZSApXHJcbiAgICB9XHJcbiAgICBlbHNlIHtcclxuICAgICAgICB0aGF0LmNvbmYuZGlzcGxheSA9ICdkaWFsJ1xyXG4gICAgICAgIHN3YXBEaXNwbGF5KCB0aGF0LCAndXAnLCB0cnVlIClcclxuICAgIH1cclxufVxyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7OztBQUtBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUFBO0FBQ0E7QUFJQTtBQUVBO0FBSUE7QUFDQTtBQUNBO0FBQ0E7QUFTQTtBQUNBO0FBRUE7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUdBO0FBRUE7QUFHQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/disp.js\n");

/***/ }),

/***/ "./src/gauge.js":
/*!**********************!*\
  !*** ./src/gauge.js ***!
  \**********************/
/*! exports provided: createGauge */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createGauge\", function() { return createGauge; });\n/* harmony import */ var justgage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! justgage */ \"./node_modules/justgage/index.js\");\n/* harmony import */ var justgage__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(justgage__WEBPACK_IMPORTED_MODULE_0__);\n/* $Id: gauge.js, v1.0 2019/11/30 VaderDarth Exp $\r\n * OpenCPN dashboard_tactics plug-in\r\n * Licensed under MIT - see distribution.\r\n */\n\n/*eslint camelcase: ['error', {'properties': 'never'}]*/\n\nfunction createGauge(name, value, decimals, label, donut, symbol) {\n  var hasDonut = donut || false;\n  var hasSymbol = symbol || '';\n  return new justgage__WEBPACK_IMPORTED_MODULE_0___default.a({\n    id: name,\n    value: value,\n    decimals: decimals,\n    symbol: hasSymbol,\n    label: label,\n    min: 0,\n    max: 100,\n    donut: hasDonut,\n    donutStartAngle: 270,\n    pointer: true,\n    pointerOptions: {\n      toplength: -15,\n      bottomlength: 10,\n      bottomwidth: 12,\n      color: '#8e8e93',\n      stroke: '#ffffff',\n      stroke_width: 3,\n      stroke_linecap: 'round'\n    },\n    gaugeColor: '#bcb9b9',\n    labelFontColor: '#262626',\n    valueFontColor: '#232b99',\n    valueFontFamily: 'Courier',\n    relativeGaugeSize: true\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2F1Z2UuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZ2F1Z2UuanM/ZDRlNSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiAkSWQ6IGdhdWdlLmpzLCB2MS4wIDIwMTkvMTEvMzAgVmFkZXJEYXJ0aCBFeHAgJFxyXG4gKiBPcGVuQ1BOIGRhc2hib2FyZF90YWN0aWNzIHBsdWctaW5cclxuICogTGljZW5zZWQgdW5kZXIgTUlUIC0gc2VlIGRpc3RyaWJ1dGlvbi5cclxuICovXHJcblxyXG4vKmVzbGludCBjYW1lbGNhc2U6IFsnZXJyb3InLCB7J3Byb3BlcnRpZXMnOiAnbmV2ZXInfV0qL1xyXG5pbXBvcnQgSnVzdEdhZ2UgZnJvbSAnanVzdGdhZ2UnXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlR2F1Z2UobmFtZSwgdmFsdWUsIGRlY2ltYWxzLCBsYWJlbCwgZG9udXQsIHN5bWJvbCkge1xyXG4gICAgdmFyIGhhc0RvbnV0ID0gZG9udXQgfHwgZmFsc2VcclxuICAgIHZhciBoYXNTeW1ib2wgPSBzeW1ib2wgfHwgJydcclxuICAgIHJldHVybiBuZXcgSnVzdEdhZ2Uoe1xyXG4gICAgICAgIGlkOiBuYW1lLFxyXG4gICAgICAgIHZhbHVlOiB2YWx1ZSxcclxuICAgICAgICBkZWNpbWFsczogZGVjaW1hbHMsXHJcbiAgICAgICAgc3ltYm9sOiBoYXNTeW1ib2wsXHJcbiAgICAgICAgbGFiZWw6IGxhYmVsLFxyXG4gICAgICAgIG1pbjogMCxcclxuICAgICAgICBtYXg6IDEwMCxcclxuICAgICAgICBkb251dDogaGFzRG9udXQsXHJcbiAgICAgICAgZG9udXRTdGFydEFuZ2xlOiAyNzAsXHJcbiAgICAgICAgcG9pbnRlcjogdHJ1ZSxcclxuICAgICAgICBwb2ludGVyT3B0aW9uczoge1xyXG4gICAgICAgICAgICB0b3BsZW5ndGg6IC0xNSxcclxuICAgICAgICAgICAgYm90dG9tbGVuZ3RoOiAxMCxcclxuICAgICAgICAgICAgYm90dG9td2lkdGg6IDEyLFxyXG4gICAgICAgICAgICBjb2xvcjogJyM4ZThlOTMnLFxyXG4gICAgICAgICAgICBzdHJva2U6ICcjZmZmZmZmJyxcclxuICAgICAgICAgICAgc3Ryb2tlX3dpZHRoOiAzLFxyXG4gICAgICAgICAgICBzdHJva2VfbGluZWNhcDogJ3JvdW5kJ1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgZ2F1Z2VDb2xvciAgICAgIDogJyNiY2I5YjknLFxyXG4gICAgICAgIGxhYmVsRm9udENvbG9yICA6ICcjMjYyNjI2JyxcclxuICAgICAgICB2YWx1ZUZvbnRDb2xvciAgOiAnIzIzMmI5OScsXHJcbiAgICAgICAgdmFsdWVGb250RmFtaWx5IDogJ0NvdXJpZXInLFxyXG4gICAgICAgIHJlbGF0aXZlR2F1Z2VTaXplOiB0cnVlXHJcbiAgICB9KVxyXG59XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7QUFLQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFQQTtBQVNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUF4QkE7QUEwQkEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/gauge.js\n");

/***/ }),

/***/ "./src/getid.js":
/*!**********************!*\
  !*** ./src/getid.js ***!
  \**********************/
/*! exports provided: getidAskClient, getidClientAnswer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getidAskClient\", function() { return getidAskClient; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getidClientAnswer\", function() { return getidClientAnswer; });\n/* $Id: getid.js, v1.0 2019/11/30 VaderDarth Exp $\r\n * OpenCPN dashboard_tactics plug-in\r\n * Licensed under MIT - see distribution.\r\n */\n//An actor to ask and retrieve from a client a unique ID for this instance\nvar dbglevel = window.instrustat.debuglevel;\nfunction getidAskClient() {\n  window.iface.setFlag('bottom', 'getid');\n}\nfunction getidClientAnswer(that) {\n  that.uid = window.iface.getid();\n  if (dbglevel > 1) console.log('getidClientAnswer(): that.uid : ', that.uid);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvZ2V0aWQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvZ2V0aWQuanM/ZGQxMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiAkSWQ6IGdldGlkLmpzLCB2MS4wIDIwMTkvMTEvMzAgVmFkZXJEYXJ0aCBFeHAgJFxyXG4gKiBPcGVuQ1BOIGRhc2hib2FyZF90YWN0aWNzIHBsdWctaW5cclxuICogTGljZW5zZWQgdW5kZXIgTUlUIC0gc2VlIGRpc3RyaWJ1dGlvbi5cclxuICovXHJcblxyXG4vL0FuIGFjdG9yIHRvIGFzayBhbmQgcmV0cmlldmUgZnJvbSBhIGNsaWVudCBhIHVuaXF1ZSBJRCBmb3IgdGhpcyBpbnN0YW5jZVxyXG5cclxudmFyIGRiZ2xldmVsID0gd2luZG93Lmluc3RydXN0YXQuZGVidWdsZXZlbFxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldGlkQXNrQ2xpZW50KCkge1xyXG4gICAgd2luZG93LmlmYWNlLnNldEZsYWcoJ2JvdHRvbScsICdnZXRpZCcpXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRpZENsaWVudEFuc3dlciggdGhhdCApIHtcclxuICAgIHRoYXQudWlkID0gd2luZG93LmlmYWNlLmdldGlkKClcclxuICAgIGlmICggZGJnbGV2ZWwgPiAxICkgY29uc29sZS5sb2coJ2dldGlkQ2xpZW50QW5zd2VyKCk6IHRoYXQudWlkIDogJywgdGhhdC51aWQgKVxyXG59XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7Ozs7QUFLQTtBQUVBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/getid.js\n");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_version__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../src/version */ \"../src/version.js\");\n/* harmony import */ var _sass_style_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../sass/style.scss */ \"./sass/style.scss\");\n/* harmony import */ var _sass_style_scss__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_sass_style_scss__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _src_kbd__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../src/kbd */ \"../src/kbd.js\");\n/* harmony import */ var _statemachine__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./statemachine */ \"./src/statemachine.js\");\n/* harmony import */ var _css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./css */ \"./src/css.js\");\n/* harmony import */ var _src_state_machine_visualize__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../src/state-machine-visualize */ \"../src/state-machine-visualize.js\");\n/* $Id: index.js, v1.0 2019/11/30 VaderDarth Exp $\r\n * OpenCPN dashboard_tactics plug-in\r\n * Licensed under MIT - see distribution.\r\n */\n\nconsole.log('enginedjg ', Object(_src_version__WEBPACK_IMPORTED_MODULE_0__[\"packagename\"])(), ' ', Object(_src_version__WEBPACK_IMPORTED_MODULE_0__[\"version\"])());\nvar dbglevel = window.instrustat.debuglevel;\n\n\n\n\n // we access it with window.iface but this is needed once, to get it in...\n\nvar iface = __webpack_require__(/*! exports-loader?iface!../../src/iface.js */ \"./node_modules/exports-loader/index.js?iface!../src/iface.js\"); // State Machine Service\n\n\nif (dbglevel > 0) console.log('index.js - creating the finite state machine');\nvar fsm = Object(_statemachine__WEBPACK_IMPORTED_MODULE_3__[\"createStateMachine\"])();\nif (dbglevel > 0) console.log('fsm created - state: ', fsm.state);\n\ntry {\n  var dot = Object(_src_state_machine_visualize__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(fsm);\n  window.iface.setgraphwizdot(dot);\n  if (dbglevel > 0) console.log('index.js: state machine GraphWiz presentation available through iface.js');\n} catch (error) {\n  console.error('index.js: state machine visualize, error: ', error);\n}\n\ntry {\n  fsm.init();\n} catch (error) {\n  console.error('index.js: fsm.init() transition failed, error: ', error);\n} // Create the transitional events (the IE way, sorry!) for clieant messages\n\n\nvar bottom = document.getElementById('bottom'); // UID and configuration file\n\nvar eventsetid = document.createEvent('Event');\neventsetid.initEvent('setid', false, false);\nbottom.addEventListener('setid', function (e) {\n  if (dbglevel > 1) console.log('pollhascfg() - attempt to setid() transition.');\n\n  try {\n    fsm.setid();\n  } catch (error) {\n    console.error('Event:  setid: fsm.setid() transition failed, error: ', error, ' current state: ', fsm.state);\n  }\n\n  var pollhascfg = function () {\n    if (dbglevel > 1) console.log('pollhascfg() - waiting on \"hasid\" state');\n\n    if (fsm.is('hasid')) {\n      var hascfg = true;\n      if (fsm.conf === null) hascfg = false;else if (fsm.conf.path === null || fsm.conf.path === '') hascfg = false;\n\n      if (hascfg) {\n        try {\n          fsm.hascfg();\n        } catch (error) {\n          console.error('index.js:  pollhascfg(): fsm.hascfg() transition failed, error: ', error, ' current state: ', fsm.state);\n        }\n      } else {\n        try {\n          fsm.nocfg();\n        } catch (error) {\n          console.error('index.js: pollhascfg(): fsm.nocfg() transition failed, error: ', error, ' current state: ', fsm.state);\n        }\n      }\n    } else {\n      setTimeout(pollhascfg, 100);\n    }\n  }(); // do selection of the next action in the routing once ID has been set, or not\n\n}, true);\nwindow.iface.regeventsetid(bottom, eventsetid); // All available paths have been set\n\nvar eventsetall = document.createEvent('Event');\neventsetall.initEvent('setall', false, false);\nbottom.addEventListener('setall', function (e) {\n  try {\n    fsm.setall();\n  } catch (error) {\n    console.error('Event:  setall: fsm.setall() transition failed, error: ', error, ' current state: ', fsm.state);\n  }\n}, true);\nwindow.iface.regeventsetall(bottom, eventsetall); // All available DB schema paths have been set\n\nvar eventsetalldb = document.createEvent('Event');\neventsetalldb.initEvent('setalldb', false, false);\nbottom.addEventListener('setalldb', function (e) {\n  console.error('Event:  setalldb: error: enginedjg does not require DB paths');\n}, true);\nwindow.iface.regeventsetalldb(bottom, eventsetalldb); // Selection of a path has been made\n\nvar eventselected = document.createEvent('Event');\neventselected.initEvent('selected', false, false);\nbottom.addEventListener('selected', function (e) {\n  try {\n    fsm.selected();\n  } catch (error) {\n    console.error('Event:  selected: fsm.selected() transition failed, error: ', error, ' current state: ', fsm.state);\n  }\n}, true);\nwindow.iface.regeventselected(bottom, eventselected); // Selection of a path requires reload\n\nvar eventrescan = document.createEvent('Event');\neventrescan.initEvent('rescan', false, false);\nbottom.addEventListener('rescan', function (e) {\n  try {\n    fsm.rescan();\n  } catch (error) {\n    console.error('Event:  rescan: fsm.rescan() transition failed, error: ', error, ' current state: ', fsm.state);\n  }\n}, true);\nwindow.iface.regeventrescan(bottom, eventrescan); // Selection of a path has been acknowledged\n\nvar eventacksubs = document.createEvent('Event');\neventacksubs.initEvent('acksubs', false, false);\nbottom.addEventListener('acksubs', function (e) {\n  try {\n    fsm.acksubs();\n  } catch (error) {\n    console.error('Event:  acksubs: fsm.acksubs() transition failed, error: ', error, ' current state: ', fsm.state);\n  }\n}, true);\nwindow.iface.regeventacksubs(bottom, eventacksubs); // Requested database schema is now available\n\nvar eventackschema = document.createEvent('Event');\neventackschema.initEvent('ackschema', false, false);\nbottom.addEventListener('ackschema', function (e) {\n  console.error('Event:  ackschema: error: enginedjg does not ask for DB schema');\n}, true);\nwindow.iface.regeventackschema(bottom, eventackschema); // New data is coming in\n\nvar eventnewdata = document.createEvent('Event');\neventnewdata.initEvent('newdata', false, false);\nbottom.addEventListener('newdata', function (e) {\n  try {\n    if (fsm.state === 'waitdata' || fsm.state === 'showdata') fsm.newdata();\n  } catch (error) {\n    console.error('Event:  newdata: fsm.newdata() transition failed, error: ', error, ' current state: ', fsm.state);\n  }\n}, true);\nwindow.iface.regeventnewdata(bottom, eventnewdata); // Change of configuration has been requested\n\nvar eventchgconf = document.createEvent('Event');\neventchgconf.initEvent('chgconf', false, false);\nbottom.addEventListener('chgconf', function (e) {\n  try {\n    fsm.chgconf();\n  } catch (error) {\n    console.error('Event:  chgconf: fsm.chgconf() transition failed, error: ', error, ' current state: ', fsm.state);\n  }\n}, true);\nwindow.iface.regeventchgconf(bottom, eventchgconf); // Luminosity\n\nvar eventluminsty = document.createEvent('Event');\neventluminsty.initEvent('luminsty', false, false);\nbottom.addEventListener('luminsty', function (e) {\n  try {\n    fsm.luminsty();\n  } catch (error) {\n    console.error('Event:  luminsty: fsm.luminsty() transition failed, error: ', error, ' current state: ', fsm.state);\n  }\n}, true);\nwindow.iface.regeventluminsty(bottom, eventluminsty); // Keyboard event requires to swap the display format\n\nObject(_src_kbd__WEBPACK_IMPORTED_MODULE_2__[\"kbdInit\"])();\nvar eventswapdisp = document.createEvent('Event');\neventswapdisp.initEvent('swapdisp', false, false);\nbottom.addEventListener('swapdisp', function (e) {\n  try {\n    if (fsm.state === 'showdata') fsm.swapdisp();\n  } catch (error) {\n    console.error('Event:  swapdisp: fsm.swapdisp() transition failed, error: ', error, ' current state: ', fsm.state);\n  }\n}, true);\nwindow.iface.regeventswapdisp(bottom, eventswapdisp); // The instrument has a persistent configuration object, close gracefully\n\nvar eventclosing = document.createEvent('Event');\neventclosing.initEvent('closing', false, false);\nbottom.addEventListener('closing', function (e) {\n  try {\n    fsm.closing();\n  } catch (error) {\n    console.error('Event:  closing: fsm.closing() transition failed, error: ', error, ' current state: ', fsm.state);\n  }\n}, true);\nwindow.iface.regeventclosing(bottom, eventclosing);\n/* Since now no other events apart the window load(), we need to await here until\r\n   it has been executed, before continuing to truy event driven operation */\n\nfunction pollinitga() {\n  if (dbglevel > 0) console.log('pollinitga() - waiting for initga, now: ', fsm.state);\n\n  if (fsm.is('initga')) {\n    try {\n      fsm.initok();\n    } catch (error) {\n      console.error('index.js:  fsm.initok() transition failed, error: ', error, ' current state: ', fsm.state);\n    }\n  } else {\n    setTimeout(pollinitga, 100);\n  }\n}\n\npollinitga(); // do _everything_ in the routing once condition met\n\n/* ------------------------------------------ */\n\nvar unloadScrollBars = function unloadScrollBars() {\n  document.documentElement.style.overflow = 'hidden'; // webkit\n\n  document.body.scroll = 'no'; // ie\n};\n\nwindow.addEventListener('load', function () {\n  if (dbglevel > 0) console.log('index.js - state: ', fsm.state);\n  unloadScrollBars(); // Loading state done\n\n  try {\n    fsm.loaded();\n  } catch (error) {\n    console.error('loading: fsm.loaded() transition failed, error: ', error);\n  }\n}, false);\n/* ------------------------------------------ *///# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/index.js\n");

/***/ }),

/***/ "./src/init.js":
/*!*********************!*\
  !*** ./src/init.js ***!
  \*********************/
/*! exports provided: initLoad */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"initLoad\", function() { return initLoad; });\n/* harmony import */ var _src_location__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../src/location */ \"../src/location.js\");\n/* harmony import */ var _gauge__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./gauge */ \"./src/gauge.js\");\n/* harmony import */ var _css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./css */ \"./src/css.js\");\n/* harmony import */ var _src_conf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../src/conf */ \"../src/conf.js\");\n/* $Id: init.js, v1.0 2019/11/30 VaderDarth Exp $\r\n * OpenCPN dashboard_tactics plug-in\r\n * Licensed under MIT - see distribution.\r\n */\n//An actor to init supporting members\n\n\n\n\nfunction initLoad(that) {\n  that.locInfo = Object(_src_location__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n  that.gauge.push(Object(_gauge__WEBPACK_IMPORTED_MODULE_1__[\"createGauge\"])('gauge0', 0, 1, '[init]', false, ''));\n  that.glastvalue[0] = 0;\n  Object(_css__WEBPACK_IMPORTED_MODULE_2__[\"setSkPathFontResizingStyle\"])();\n  that.conf = Object(_src_conf__WEBPACK_IMPORTED_MODULE_3__[\"createEmptyConf\"])();\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5pdC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9pbml0LmpzP2Q5OWUiXSwic291cmNlc0NvbnRlbnQiOlsiLyogJElkOiBpbml0LmpzLCB2MS4wIDIwMTkvMTEvMzAgVmFkZXJEYXJ0aCBFeHAgJFxyXG4gKiBPcGVuQ1BOIGRhc2hib2FyZF90YWN0aWNzIHBsdWctaW5cclxuICogTGljZW5zZWQgdW5kZXIgTUlUIC0gc2VlIGRpc3RyaWJ1dGlvbi5cclxuICovXHJcblxyXG4vL0FuIGFjdG9yIHRvIGluaXQgc3VwcG9ydGluZyBtZW1iZXJzXHJcblxyXG5pbXBvcnQgZ2V0TG9jSW5mbyBmcm9tICcuLi8uLi9zcmMvbG9jYXRpb24nXHJcbmltcG9ydCB7IGNyZWF0ZUdhdWdlIH0gZnJvbSAnLi9nYXVnZSdcclxuaW1wb3J0IHsgc2V0U2tQYXRoRm9udFJlc2l6aW5nU3R5bGUgfSBmcm9tICcuL2NzcydcclxuaW1wb3J0IHsgY3JlYXRlRW1wdHlDb25mIH0gZnJvbSAnLi4vLi4vc3JjL2NvbmYnXHJcblxyXG5leHBvcnQgZnVuY3Rpb24gaW5pdExvYWQoIHRoYXQgKSB7XHJcbiAgICB0aGF0LmxvY0luZm8gPSBnZXRMb2NJbmZvKClcclxuICAgIHRoYXQuZ2F1Z2UucHVzaCAoIGNyZWF0ZUdhdWdlKCdnYXVnZTAnLCAwLCAxLCAnW2luaXRdJywgZmFsc2UsICcnKSApXHJcbiAgICB0aGF0LmdsYXN0dmFsdWVbMF0gPSAwXHJcbiAgICBzZXRTa1BhdGhGb250UmVzaXppbmdTdHlsZSgpXHJcbiAgICB0aGF0LmNvbmYgPSBjcmVhdGVFbXB0eUNvbmYoKVxyXG59XHJcblxyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7O0FBS0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/init.js\n");

/***/ }),

/***/ "./src/path.js":
/*!*********************!*\
  !*** ./src/path.js ***!
  \*********************/
/*! exports provided: getallAskClient, getallClientAnswer, getpathAskClient, getpathAcknowledged, gotAckCheckPath */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getallAskClient\", function() { return getallAskClient; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getallClientAnswer\", function() { return getallClientAnswer; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getpathAskClient\", function() { return getpathAskClient; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"getpathAcknowledged\", function() { return getpathAcknowledged; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"gotAckCheckPath\", function() { return gotAckCheckPath; });\n/* $Id: path.js, v1.0 2019/11/30 VaderDarth Exp $\r\n * OpenCPN dashboard_tactics plug-in\r\n * Licensed under MIT - see distribution.\r\n */\n// An actor to ask and retrieve from a client a unique ID for this instance\nvar alertsenabled = window.instrustat.alerts;\nvar dbglevel = window.instrustat.debuglevel;\nfunction getallAskClient() {\n  window.iface.setFlag('bottom', 'getall');\n}\nfunction getallClientAnswer(that) {\n  that.allpaths = window.iface.getall();\n}\nfunction getpathAskClient(that) {\n  if (that.perspath) {\n    if (that.conf === null) {\n      if (dbglevel > 0) console.log('path.js getpathAskClient() - static path suggested but conf object is null!');\n      return;\n    }\n\n    if (that.conf.path === null || that.conf.path === '') {\n      if (dbglevel > 0) console.log('path.js getpathAskClient() - static path suggested but conf.path is empty or null!');\n      return;\n    }\n\n    window.iface.setFlag('bottom', that.conf.path);\n  } else {\n    that.path = window.iface.getselected();\n    if (that.path !== '') window.iface.setFlag('bottom', that.path);\n  }\n}\nfunction getpathAcknowledged(that) {\n  window.iface.clearFlagById('bottom');\n}\nfunction gotAckCheckPath(that) {\n  if (dbglevel > 0) console.log('path.js gotAckCheckPath()');\n  var expectedpath = that.path;\n\n  if (that.perspath) {\n    if (that.conf === null) {\n      if (dbglevel > 0) console.log('path.js gotAckCheckPath() - static path suggested but conf object is null!');\n    }\n\n    if (that.conf.path === null || that.conf.path === '') {\n      if (dbglevel > 0) console.log('path.js gotAckCheckPath() - static path suggested but conf.path is empty or null!');\n    }\n\n    expectedpath = that.conf.path;\n  }\n\n  var acknowledgedpath = window.iface.getacksubs();\n  if (dbglevel > 1) console.log('path.js gotAckCheckPath() - acknowledgedpath: ', acknowledgedpath);\n\n  if (acknowledgedpath !== null && acknowledgedpath !== '') {\n    if (acknowledgedpath === expectedpath) {\n      if (dbglevel > 0) console.log('path.js gotAckCheckPath() - acknowledgedpath matches: ', expectedpath);\n    } else {\n      if (dbglevel > 0) console.log('path.js gotAckCheckPath() - acknowledgedpath mismatch! Requested: ', expectedpath, ', got: ', acknowledgedpath);\n      if (alertsenabled) alert(window.instrulang.errSubscriptionAck1 + '\\n' + expectedpath + '\\n' + window.instrulang.errSubscriptionAck2 + '\\n' + acknowledgedpath);\n    }\n  } else {\n    if (dbglevel > 0) console.log('path.js gotAckCheckPath() - acknowledgedpath is empty or null! Requested: ', expectedpath);\n    if (alertsenabled) alert(window.instrulang.errSubscriptionAck1 + '\\n' + expectedpath + '\\n' + window.instrulang.errSubscriptionAck2 + '\\n' + '');\n  }\n\n  return;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGF0aC5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9wYXRoLmpzP2E4MDQiXSwic291cmNlc0NvbnRlbnQiOlsiLyogJElkOiBwYXRoLmpzLCB2MS4wIDIwMTkvMTEvMzAgVmFkZXJEYXJ0aCBFeHAgJFxyXG4gKiBPcGVuQ1BOIGRhc2hib2FyZF90YWN0aWNzIHBsdWctaW5cclxuICogTGljZW5zZWQgdW5kZXIgTUlUIC0gc2VlIGRpc3RyaWJ1dGlvbi5cclxuICovXHJcblxyXG4vLyBBbiBhY3RvciB0byBhc2sgYW5kIHJldHJpZXZlIGZyb20gYSBjbGllbnQgYSB1bmlxdWUgSUQgZm9yIHRoaXMgaW5zdGFuY2VcclxuXHJcbnZhciBhbGVydHNlbmFibGVkID0gd2luZG93Lmluc3RydXN0YXQuYWxlcnRzXHJcbnZhciBkYmdsZXZlbCA9IHdpbmRvdy5pbnN0cnVzdGF0LmRlYnVnbGV2ZWxcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRhbGxBc2tDbGllbnQoKSB7XHJcbiAgICB3aW5kb3cuaWZhY2Uuc2V0RmxhZygnYm90dG9tJywgJ2dldGFsbCcpXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRhbGxDbGllbnRBbnN3ZXIoIHRoYXQgKSB7XHJcbiAgICB0aGF0LmFsbHBhdGhzPSB3aW5kb3cuaWZhY2UuZ2V0YWxsKClcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGdldHBhdGhBc2tDbGllbnQoIHRoYXQgKSB7XHJcbiAgICBpZiAoIHRoYXQucGVyc3BhdGggKSB7XHJcbiAgICAgICAgaWYgKCB0aGF0LmNvbmYgPT09IG51bGwgKSB7XHJcbiAgICAgICAgICAgIGlmICggZGJnbGV2ZWwgPiAwIClcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdwYXRoLmpzIGdldHBhdGhBc2tDbGllbnQoKSAtIHN0YXRpYyBwYXRoIHN1Z2dlc3RlZCBidXQgY29uZiBvYmplY3QgaXMgbnVsbCEnKVxyXG4gICAgICAgICAgICByZXR1cm5cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCAodGhhdC5jb25mLnBhdGggPT09IG51bGwpIHx8ICh0aGF0LmNvbmYucGF0aCA9PT0gJycpICkge1xyXG4gICAgICAgICAgICBpZiAoIGRiZ2xldmVsID4gMCApXHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygncGF0aC5qcyBnZXRwYXRoQXNrQ2xpZW50KCkgLSBzdGF0aWMgcGF0aCBzdWdnZXN0ZWQgYnV0IGNvbmYucGF0aCBpcyBlbXB0eSBvciBudWxsIScpXHJcbiAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgIH1cclxuICAgICAgICB3aW5kb3cuaWZhY2Uuc2V0RmxhZyggJ2JvdHRvbScsIHRoYXQuY29uZi5wYXRoIClcclxuICAgIH1cclxuICAgIGVsc2Uge1xyXG4gICAgICAgIHRoYXQucGF0aCA9IHdpbmRvdy5pZmFjZS5nZXRzZWxlY3RlZCgpXHJcbiAgICAgICAgaWYgKCB0aGF0LnBhdGggIT09ICcnIClcclxuICAgICAgICAgICAgd2luZG93LmlmYWNlLnNldEZsYWcoICdib3R0b20nLCB0aGF0LnBhdGggKVxyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0cGF0aEFja25vd2xlZGdlZCggdGhhdCApIHtcclxuICAgIHdpbmRvdy5pZmFjZS5jbGVhckZsYWdCeUlkKCAnYm90dG9tJyApXHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnb3RBY2tDaGVja1BhdGgoIHRoYXQgKSB7XHJcbiAgICBpZiAoIGRiZ2xldmVsID4gMCApXHJcbiAgICAgICAgY29uc29sZS5sb2coJ3BhdGguanMgZ290QWNrQ2hlY2tQYXRoKCknKVxyXG4gICAgdmFyIGV4cGVjdGVkcGF0aCA9IHRoYXQucGF0aFxyXG4gICAgaWYgKCB0aGF0LnBlcnNwYXRoICkge1xyXG4gICAgICAgIGlmICggdGhhdC5jb25mID09PSBudWxsICkge1xyXG4gICAgICAgICAgICBpZiAoIGRiZ2xldmVsID4gMCApXHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygncGF0aC5qcyBnb3RBY2tDaGVja1BhdGgoKSAtIHN0YXRpYyBwYXRoIHN1Z2dlc3RlZCBidXQgY29uZiBvYmplY3QgaXMgbnVsbCEnKVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoICh0aGF0LmNvbmYucGF0aCA9PT0gbnVsbCkgfHwgKHRoYXQuY29uZi5wYXRoID09PSAnJykgKSB7XHJcbiAgICAgICAgICAgIGlmICggZGJnbGV2ZWwgPiAwIClcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdwYXRoLmpzIGdvdEFja0NoZWNrUGF0aCgpIC0gc3RhdGljIHBhdGggc3VnZ2VzdGVkIGJ1dCBjb25mLnBhdGggaXMgZW1wdHkgb3IgbnVsbCEnKVxyXG4gICAgICAgIH1cclxuICAgICAgICBleHBlY3RlZHBhdGggPSB0aGF0LmNvbmYucGF0aFxyXG4gICAgfVxyXG4gICAgdmFyIGFja25vd2xlZGdlZHBhdGggPSB3aW5kb3cuaWZhY2UuZ2V0YWNrc3VicygpXHJcbiAgICBpZiAoIGRiZ2xldmVsID4gMSApXHJcbiAgICAgICAgY29uc29sZS5sb2coJ3BhdGguanMgZ290QWNrQ2hlY2tQYXRoKCkgLSBhY2tub3dsZWRnZWRwYXRoOiAnLCBhY2tub3dsZWRnZWRwYXRoKVxyXG4gICAgaWYgKCAoYWNrbm93bGVkZ2VkcGF0aCAhPT0gbnVsbCkgJiYgKGFja25vd2xlZGdlZHBhdGggIT09ICcnKSApIHtcclxuICAgICAgICBpZiAoIGFja25vd2xlZGdlZHBhdGggPT09IGV4cGVjdGVkcGF0aCApIHtcclxuICAgICAgICAgICAgaWYgKCBkYmdsZXZlbCA+IDAgKVxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ3BhdGguanMgZ290QWNrQ2hlY2tQYXRoKCkgLSBhY2tub3dsZWRnZWRwYXRoIG1hdGNoZXM6ICcsIGV4cGVjdGVkcGF0aClcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmICggZGJnbGV2ZWwgPiAwIClcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdwYXRoLmpzIGdvdEFja0NoZWNrUGF0aCgpIC0gYWNrbm93bGVkZ2VkcGF0aCBtaXNtYXRjaCEgUmVxdWVzdGVkOiAnLCBleHBlY3RlZHBhdGgsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAnLCBnb3Q6ICcsIGFja25vd2xlZGdlZHBhdGgpXHJcbiAgICAgICAgICAgIGlmICggYWxlcnRzZW5hYmxlZCApXHJcbiAgICAgICAgICAgICAgICBhbGVydCAoIHdpbmRvdy5pbnN0cnVsYW5nLmVyclN1YnNjcmlwdGlvbkFjazEgKyAnXFxuJyArXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGV4cGVjdGVkcGF0aCArICdcXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93Lmluc3RydWxhbmcuZXJyU3Vic2NyaXB0aW9uQWNrMiArICdcXG4nICtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYWNrbm93bGVkZ2VkcGF0aCApXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgICAgaWYgKCBkYmdsZXZlbCA+IDAgKVxyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygncGF0aC5qcyBnb3RBY2tDaGVja1BhdGgoKSAtIGFja25vd2xlZGdlZHBhdGggaXMgZW1wdHkgb3IgbnVsbCEgUmVxdWVzdGVkOiAnLCBleHBlY3RlZHBhdGgpXHJcbiAgICAgICAgaWYgKCBhbGVydHNlbmFibGVkIClcclxuICAgICAgICAgICAgYWxlcnQgKCB3aW5kb3cuaW5zdHJ1bGFuZy5lcnJTdWJzY3JpcHRpb25BY2sxICsgJ1xcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgIGV4cGVjdGVkcGF0aCArICdcXG4nICtcclxuICAgICAgICAgICAgICAgICAgICB3aW5kb3cuaW5zdHJ1bGFuZy5lcnJTdWJzY3JpcHRpb25BY2syICsgJ1xcbicgK1xyXG4gICAgICAgICAgICAgICAgICAgICcnIClcclxuICAgIH1cclxuICAgIHJldHVyblxyXG59XHJcblxyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7O0FBS0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUVBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUVBO0FBR0E7QUFLQTtBQUNBO0FBRUE7QUFFQTtBQUtBO0FBQ0E7QUFBQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/path.js\n");

/***/ }),

/***/ "./src/statemachine.js":
/*!*****************************!*\
  !*** ./src/statemachine.js ***!
  \*****************************/
/*! exports provided: createStateMachine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"createStateMachine\", function() { return createStateMachine; });\n/* harmony import */ var javascript_state_machine__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! javascript-state-machine */ \"./node_modules/javascript-state-machine/lib/state-machine.js\");\n/* harmony import */ var javascript_state_machine__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(javascript_state_machine__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _src_location__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../src/location */ \"../src/location.js\");\n/* harmony import */ var _init__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./init */ \"./src/init.js\");\n/* harmony import */ var _getid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getid */ \"./src/getid.js\");\n/* harmony import */ var _src_conf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../src/conf */ \"../src/conf.js\");\n/* harmony import */ var _path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./path */ \"./src/path.js\");\n/* harmony import */ var _src_menu__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../src/menu */ \"../src/menu.js\");\n/* harmony import */ var _data__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./data */ \"./src/data.js\");\n/* harmony import */ var _disp__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./disp */ \"./src/disp.js\");\n/* harmony import */ var _css__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./css */ \"./src/css.js\");\n/* $Id: statemachine.js, v1.0 2019/11/30 VaderDarth Exp $\r\n * OpenCPN dashboard_tactics plug-in\r\n * Licensed under MIT - see distribution.\r\n */\n\n/*\r\n  Visualize with GraphViz, see iface.getgraphvizout(), feed a web app\r\n  Note: with javascript-state-machine, avoid keyword 'init' in state/transition!\r\n*/\nvar dbglevel = window.instrustat.debuglevel;\n\n\n\n\n\n\n\n\n\n\n\nfunction dbgPrintFromTo(stateOrTransStr, lifecycle) {\n  if (dbglevel > 0) console.log(stateOrTransStr);\n\n  if (dbglevel > 2) {\n    console.log('- transition: ', lifecycle.transition);\n    console.log('- from      : ', lifecycle.from);\n    console.log('- to        : ', lifecycle.to);\n  }\n}\n\nfunction createStateMachine() {\n  return new javascript_state_machine__WEBPACK_IMPORTED_MODULE_0___default.a({\n    init: 'window',\n    data: {\n      // Static\n      uid: '',\n      conf: null,\n      perspath: false,\n      // Environmental\n      luminosity: 'day',\n      locInfo: Object(_src_location__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(),\n      // Functional\n      gauge: [],\n      glastvalue: [0],\n      // Signal K Paths\n      path: '',\n      allpaths: [],\n      menu: null\n    },\n    transitions: [{\n      name: 'init',\n      from: 'window',\n      to: 'loading'\n    }, {\n      name: 'loaded',\n      from: 'loading',\n      to: 'initga'\n    }, {\n      name: 'initok',\n      from: 'initga',\n      to: 'getid'\n    }, {\n      name: 'setid',\n      from: 'getid',\n      to: 'hasid'\n    }, {\n      name: 'nocfg',\n      from: 'hasid',\n      to: 'getall'\n    }, {\n      name: 'hascfg',\n      from: 'hasid',\n      to: 'getpath'\n    }, {\n      name: 'setall',\n      from: 'getall',\n      to: 'showmenu'\n    }, {\n      name: 'rescan',\n      from: 'showmenu',\n      to: 'getall'\n    }, {\n      name: 'selected',\n      from: 'showmenu',\n      to: 'getpath'\n    }, {\n      name: 'acksubs',\n      from: 'getpath',\n      to: 'waitdata'\n    }, {\n      name: 'newdata',\n      from: 'waitdata',\n      to: 'showdata'\n    }, {\n      name: 'newdata',\n      from: 'showdata',\n      to: 'showdata'\n    }, {\n      name: 'chgconf',\n      from: 'waitdata',\n      to: 'getall'\n    }, {\n      name: 'chgconf',\n      from: 'showdata',\n      to: 'getall'\n    }, {\n      name: 'luminsty',\n      from: 'getid',\n      to: 'getid'\n    }, {\n      name: 'luminsty',\n      from: 'hasid',\n      to: 'hasid'\n    }, {\n      name: 'luminsty',\n      from: 'getpath',\n      to: 'getpath'\n    }, {\n      name: 'luminsty',\n      from: 'waitdata',\n      to: 'waitdata'\n    }, {\n      name: 'luminsty',\n      from: 'getall',\n      to: 'getall'\n    }, {\n      name: 'luminsty',\n      from: 'showmenu',\n      to: 'showmenu'\n    }, {\n      name: 'luminsty',\n      from: 'showdata',\n      to: 'showdata'\n    }, {\n      name: 'swapdisp',\n      from: 'showdata',\n      to: 'showdata'\n    }, {\n      name: 'closing',\n      from: 'showdata',\n      to: 'halt'\n    }],\n    methods: {\n      onWindow: function onWindow() {\n        if (dbglevel > 0) console.log('onWindow() - state');\n      },\n      onLoading: function onLoading() {\n        if (dbglevel > 0) console.log('onLoading() - state');\n        if (dbglevel > 1) console.log('uid: ', this.uid);\n        if (dbglevel > 1) console.log('locInfo: ', this.locInfo);\n        if (dbglevel > 1) console.log('gauge[', this.gauge.length, ']');\n        if (dbglevel > 1) console.log('conf: ', this.conf);\n      },\n      onInitga: function onInitga() {\n        if (dbglevel > 0) console.log('onInitga() - state');\n        Object(_init__WEBPACK_IMPORTED_MODULE_2__[\"initLoad\"])(this);\n      },\n      onGetid: function onGetid() {\n        if (dbglevel > 0) console.log('onGetid() - state');\n        Object(_getid__WEBPACK_IMPORTED_MODULE_3__[\"getidAskClient\"])();\n      },\n      onBeforeSetid: function onBeforeSetid() {\n        if (dbglevel > 0) console.log('onSetid() - before transition');\n        Object(_getid__WEBPACK_IMPORTED_MODULE_3__[\"getidClientAnswer\"])(this);\n        if (dbglevel > 1) console.log('uid : ', this.uid);\n        Object(_src_conf__WEBPACK_IMPORTED_MODULE_4__[\"getConf\"])(this);\n        if (dbglevel > 1) console.log('conf: ', this.conf);\n        Object(_disp__WEBPACK_IMPORTED_MODULE_8__[\"rollDisplayToSelection\"])(this);\n      },\n      onHasid: function onHasid() {\n        if (dbglevel > 0) console.log('onHasid() - state');\n      },\n      onBeforeNocfg: function onBeforeNocfg(lifecycle) {\n        if (dbglevel > 0) console.log('onNocfg() - before transition');\n\n        if (dbglevel > 2) {\n          console.log('- transition: ', lifecycle.transition);\n          console.log('- from      : ', lifecycle.from);\n          console.log('- to        : ', lifecycle.to);\n        }\n\n        this.perspath = false;\n      },\n      onBeforeChgconf: function onBeforeChgconf() {\n        if (dbglevel > 0) console.log('onChgconf() - before transition');\n        Object(_src_menu__WEBPACK_IMPORTED_MODULE_6__[\"setMenuBackToLoading\"])(this);\n        Object(_data__WEBPACK_IMPORTED_MODULE_7__[\"clearData\"])(this);\n        Object(_src_conf__WEBPACK_IMPORTED_MODULE_4__[\"clearConf\"])(this);\n      },\n      onGetall: function onGetall() {\n        if (dbglevel > 0) console.log('onGetall() - state');\n        Object(_path__WEBPACK_IMPORTED_MODULE_5__[\"getallAskClient\"])();\n      },\n      onShowmenu: function onShowmenu() {\n        if (dbglevel > 0) console.log('onShowmenu() - state');\n        Object(_path__WEBPACK_IMPORTED_MODULE_5__[\"getallClientAnswer\"])(this);\n        if (dbglevel > 1) console.log('allpaths: ', this.allpaths);\n        Object(_src_menu__WEBPACK_IMPORTED_MODULE_6__[\"setMenuAllPaths\"])(this);\n      },\n      onBeforeRescan: function onBeforeRescan(lifecycle) {\n        if (dbglevel > 0) console.log('onRescan() - before transition');\n\n        if (dbglevel > 2) {\n          console.log('- from      : ', lifecycle.from);\n          console.log('- transition: ', lifecycle.transition);\n          console.log('- to        : ', lifecycle.to);\n        }\n\n        Object(_src_menu__WEBPACK_IMPORTED_MODULE_6__[\"setMenuBackToLoading\"])(this);\n      },\n      onBeforeHascfg: function onBeforeHascfg(lifecycle) {\n        dbgPrintFromTo('onHascfg() - before transition', lifecycle);\n        this.perspath = true;\n        Object(_src_menu__WEBPACK_IMPORTED_MODULE_6__[\"setMenuRunTime\"])(this);\n      },\n      onBeforeSelected: function onBeforeSelected() {\n        if (dbglevel > 0) console.log('onSelected() - before transition');\n        Object(_src_menu__WEBPACK_IMPORTED_MODULE_6__[\"setMenuRunTime\"])(this);\n        this.path = window.iface.getselected();\n        Object(_src_conf__WEBPACK_IMPORTED_MODULE_4__[\"getPathDefaultsIfNew\"])(this);\n      },\n      onGetpath: function onGetpath(lifecycle) {\n        dbgPrintFromTo('onGetpath() - state', lifecycle);\n        Object(_path__WEBPACK_IMPORTED_MODULE_5__[\"getpathAskClient\"])(this);\n      },\n      onBeforeAcksubs: function onBeforeAcksubs() {\n        if (dbglevel > 0) console.log('onAcksubs() - before transition');\n        Object(_data__WEBPACK_IMPORTED_MODULE_7__[\"clearData\"])(this);\n        Object(_path__WEBPACK_IMPORTED_MODULE_5__[\"gotAckCheckPath\"])(this);\n        Object(_path__WEBPACK_IMPORTED_MODULE_5__[\"getpathAcknowledged\"])(this);\n      },\n      onWaitdata: function onWaitdata() {\n        if (dbglevel > 0) console.log('onWaitdata() - state');\n        Object(_data__WEBPACK_IMPORTED_MODULE_7__[\"onWaitdataFinalCheck\"])(this);\n      },\n      onBeforeNewdata: function onBeforeNewdata() {\n        if (dbglevel > 0) console.log('onNewdata() - before transition');\n        Object(_data__WEBPACK_IMPORTED_MODULE_7__[\"showData\"])(this);\n      },\n      onShowdata: function onShowdata() {\n        if (dbglevel > 0) console.log('onShowData() - state');\n      },\n      onBeforeSwapdisp: function onBeforeSwapdisp() {\n        if (dbglevel > 0) console.log('onSwapdisp() - before transition');\n        var kbdDir = window.iface.getswapdisp() === 1 ? 'down' : 'up';\n        Object(_disp__WEBPACK_IMPORTED_MODULE_8__[\"swapDisplay\"])(this, kbdDir, true);\n      },\n      onBeforeLuminsty: function onBeforeLuminsty() {\n        if (dbglevel > 0) console.log('onLuminsty() - before transition');\n        Object(_css__WEBPACK_IMPORTED_MODULE_9__[\"getNewLuminosity\"])(this);\n        if (dbglevel > 1) console.log('luminosity: ', this.luminosity);\n      },\n      onBeforeClosing: function onBeforeClosing() {\n        if (dbglevel > 0) console.log('onClosing() - before transition');\n        Object(_data__WEBPACK_IMPORTED_MODULE_7__[\"prepareDataHalt\"])(this);\n        Object(_src_conf__WEBPACK_IMPORTED_MODULE_4__[\"prepareConfHalt\"])(this);\n      }\n    }\n  });\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/statemachine.js\n");

/***/ })

/******/ });