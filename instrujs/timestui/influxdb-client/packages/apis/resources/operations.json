[
  {
    "server": "/api/v2",
    "path": "/signin",
    "operation": "post",
    "operationId": "PostSignin",
    "basicAuth": true,
    "summary": "Exchange basic auth credentials for session",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Successfully authenticated",
        "mediaTypes": []
      },
      {
        "code": "401",
        "description": "Unauthorized access",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "403",
        "description": "user account is disabled",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unsuccessful authentication",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/signout",
    "operation": "post",
    "operationId": "PostSignout",
    "basicAuth": false,
    "summary": "Expire the current session",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Session successfully expired",
        "mediaTypes": []
      },
      {
        "code": "401",
        "description": "Unauthorized access",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unsuccessful session expiry",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/",
    "operation": "get",
    "operationId": "GetRoutes",
    "basicAuth": false,
    "summary": "Map of all top level routes available",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "default",
        "description": "All routes",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Routes"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/setup",
    "operation": "get",
    "operationId": "GetSetup",
    "basicAuth": false,
    "summary": "Check if database has default user, org, bucket",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "allowed true or false",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "IsOnboarding"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/setup",
    "operation": "post",
    "operationId": "PostSetup",
    "basicAuth": false,
    "summary": "Set up initial user, org and bucket",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Source to create",
      "required": true,
      "mediaType": "application/json",
      "type": "OnboardingRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "Created default user, bucket, org",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "OnboardingResponse"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/documents/templates",
    "operation": "get",
    "operationId": "GetDocumentsTemplates",
    "basicAuth": false,
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "org",
        "description": "Specifies the name of the organization of the template.",
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "Specifies the organization ID of the template.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of template documents",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Documents"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/documents/templates",
    "operation": "post",
    "operationId": "PostDocumentsTemplates",
    "basicAuth": false,
    "summary": "Create a template",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Template that will be created",
      "required": true,
      "mediaType": "application/json",
      "type": "DocumentCreate"
    },
    "responses": [
      {
        "code": "201",
        "description": "Template created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Document"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/documents/templates/{templateID}",
    "operation": "get",
    "operationId": "GetDocumentsTemplatesID",
    "basicAuth": false,
    "positionalParams": [
      {
        "name": "templateID",
        "description": "The template ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The template requested",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Document"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/documents/templates/{templateID}",
    "operation": "put",
    "operationId": "PutDocumentsTemplatesID",
    "basicAuth": false,
    "positionalParams": [
      {
        "name": "templateID",
        "description": "The template ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Template that will be updated",
      "required": true,
      "mediaType": "application/json",
      "type": "DocumentUpdate"
    },
    "responses": [
      {
        "code": "200",
        "description": "The newly updated template",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Document"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/documents/templates/{templateID}",
    "operation": "delete",
    "operationId": "DeleteDocumentsTemplatesID",
    "basicAuth": false,
    "summary": "Delete a template",
    "positionalParams": [
      {
        "name": "templateID",
        "description": "The template ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/documents/templates/{templateID}/labels",
    "operation": "get",
    "operationId": "GetDocumentsTemplatesIDLabels",
    "basicAuth": false,
    "summary": "List all labels for a template",
    "positionalParams": [
      {
        "name": "templateID",
        "description": "The template ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all labels for a template",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/documents/templates/{templateID}/labels",
    "operation": "post",
    "operationId": "PostDocumentsTemplatesIDLabels",
    "basicAuth": false,
    "summary": "Add a label to a template",
    "positionalParams": [
      {
        "name": "templateID",
        "description": "The template ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "The label added to the template",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/documents/templates/{templateID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteDocumentsTemplatesIDLabelsID",
    "basicAuth": false,
    "summary": "Delete a label from a template",
    "positionalParams": [
      {
        "name": "templateID",
        "description": "The template ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The label ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Template not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegraf/plugins",
    "operation": "get",
    "operationId": "GetTelegrafPlugins",
    "basicAuth": false,
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "type",
        "description": "The type of plugin desired.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of Telegraf plugins.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "TelegrafPlugins"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs",
    "operation": "get",
    "operationId": "GetTelegrafs",
    "basicAuth": false,
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "orgID",
        "description": "The organization ID the Telegraf config belongs to.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of Telegraf configs",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Telegrafs"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs",
    "operation": "post",
    "operationId": "PostTelegrafs",
    "basicAuth": false,
    "summary": "Create a Telegraf config",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Telegraf config to create",
      "required": true,
      "mediaType": "application/json",
      "type": "TelegrafRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "Telegraf config created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Telegraf"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}",
    "operation": "get",
    "operationId": "GetTelegrafsID",
    "basicAuth": false,
    "summary": "Retrieve a Telegraf config",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      },
      {
        "name": "Accept",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Telegraf config details",
        "mediaTypes": [
          {
            "mediaType": "application/toml",
            "type": "string"
          },
          {
            "mediaType": "application/json",
            "type": "Telegraf"
          },
          {
            "mediaType": "application/octet-stream",
            "type": "string"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}",
    "operation": "put",
    "operationId": "PutTelegrafsID",
    "basicAuth": false,
    "summary": "Update a Telegraf config",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Telegraf config update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "TelegrafRequest"
    },
    "responses": [
      {
        "code": "200",
        "description": "An updated Telegraf config",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Telegraf"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}",
    "operation": "delete",
    "operationId": "DeleteTelegrafsID",
    "basicAuth": false,
    "summary": "Delete a Telegraf config",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}/labels",
    "operation": "get",
    "operationId": "GetTelegrafsIDLabels",
    "basicAuth": false,
    "summary": "List all labels for a Telegraf config",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all labels for a Telegraf config",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}/labels",
    "operation": "post",
    "operationId": "PostTelegrafsIDLabels",
    "basicAuth": false,
    "summary": "Add a label to a Telegraf config",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "The label added to the Telegraf config",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteTelegrafsIDLabelsID",
    "basicAuth": false,
    "summary": "Delete a label from a Telegraf config",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The label ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Telegraf config not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}/members",
    "operation": "get",
    "operationId": "GetTelegrafsIDMembers",
    "basicAuth": false,
    "summary": "List all users with member privileges for a Telegraf config",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of Telegraf config members",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMembers"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}/members",
    "operation": "post",
    "operationId": "PostTelegrafsIDMembers",
    "basicAuth": false,
    "summary": "Add a member to a Telegraf config",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as member",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Member added to Telegraf config",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMember"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}/members/{userID}",
    "operation": "delete",
    "operationId": "DeleteTelegrafsIDMembersID",
    "basicAuth": false,
    "summary": "Remove a member from a Telegraf config",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the member to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Member removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}/owners",
    "operation": "get",
    "operationId": "GetTelegrafsIDOwners",
    "basicAuth": false,
    "summary": "List all owners of a Telegraf config",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of Telegraf config owners",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwners"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}/owners",
    "operation": "post",
    "operationId": "PostTelegrafsIDOwners",
    "basicAuth": false,
    "summary": "Add an owner to a Telegraf config",
    "positionalParams": [
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as owner",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Telegraf config owner added",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwner"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/telegrafs/{telegrafID}/owners/{userID}",
    "operation": "delete",
    "operationId": "DeleteTelegrafsIDOwnersID",
    "basicAuth": false,
    "summary": "Remove an owner from a Telegraf config",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the owner to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "telegrafID",
        "description": "The Telegraf config ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Owner removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers",
    "operation": "get",
    "operationId": "GetScrapers",
    "basicAuth": false,
    "summary": "Get all scraper targets",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "name",
        "description": "Specifies the name of the scraper target.",
        "type": "string"
      },
      {
        "name": "id",
        "description": "List of scraper target IDs to return. If both `id` and `owner` are specified, only `id` is used.",
        "type": "any"
      },
      {
        "name": "orgID",
        "description": "Specifies the organization ID of the scraper target.",
        "type": "string"
      },
      {
        "name": "org",
        "description": "Specifies the organization name of the scraper target.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "All scraper targets",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ScraperTargetResponses"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers",
    "operation": "post",
    "operationId": "PostScrapers",
    "basicAuth": false,
    "summary": "Create a scraper target",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Scraper target to create",
      "required": true,
      "mediaType": "application/json",
      "type": "ScraperTargetRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "Scraper target created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ScraperTargetResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}",
    "operation": "get",
    "operationId": "GetScrapersID",
    "basicAuth": false,
    "summary": "Get a scraper target by ID",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Scraper target updated",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ScraperTargetResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}",
    "operation": "patch",
    "operationId": "PatchScrapersID",
    "basicAuth": false,
    "summary": "Update a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Scraper target update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "ScraperTargetRequest"
    },
    "responses": [
      {
        "code": "200",
        "description": "Scraper target updated",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ScraperTargetResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}",
    "operation": "delete",
    "operationId": "DeleteScrapersID",
    "basicAuth": false,
    "summary": "Delete a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Scraper target deleted",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}/labels",
    "operation": "get",
    "operationId": "GetScrapersIDLabels",
    "basicAuth": false,
    "summary": "List all labels for a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all labels for a scraper target",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}/labels",
    "operation": "post",
    "operationId": "PostScrapersIDLabels",
    "basicAuth": false,
    "summary": "Add a label to a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "The newly added label",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}/labels/{labelID}",
    "operation": "patch",
    "operationId": "PatchScrapersIDLabelsID",
    "basicAuth": false,
    "summary": "Update a label on a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The label ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "Label"
    },
    "responses": [
      {
        "code": "200",
        "description": "Updated successfully",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Scraper target not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteScrapersIDLabelsID",
    "basicAuth": false,
    "summary": "Delete a label from a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The label ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Scraper target not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}/members",
    "operation": "get",
    "operationId": "GetScrapersIDMembers",
    "basicAuth": false,
    "summary": "List all users with member privileges for a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of scraper target members",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMembers"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}/members",
    "operation": "post",
    "operationId": "PostScrapersIDMembers",
    "basicAuth": false,
    "summary": "Add a member to a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as member",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Member added to scraper targets",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMember"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}/members/{userID}",
    "operation": "delete",
    "operationId": "DeleteScrapersIDMembersID",
    "basicAuth": false,
    "summary": "Remove a member from a scraper target",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of member to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Member removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}/owners",
    "operation": "get",
    "operationId": "GetScrapersIDOwners",
    "basicAuth": false,
    "summary": "List all owners of a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of scraper target owners",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwners"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}/owners",
    "operation": "post",
    "operationId": "PostScrapersIDOwners",
    "basicAuth": false,
    "summary": "Add an owner to a scraper target",
    "positionalParams": [
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as owner",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Scraper target owner added",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwner"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/scrapers/{scraperTargetID}/owners/{userID}",
    "operation": "delete",
    "operationId": "DeleteScrapersIDOwnersID",
    "basicAuth": false,
    "summary": "Remove an owner from a scraper target",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of owner to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "scraperTargetID",
        "description": "The scraper target ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Owner removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/variables",
    "operation": "get",
    "operationId": "GetVariables",
    "basicAuth": false,
    "summary": "Get all variables",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "org",
        "description": "The organization name.",
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "The organization ID.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "All variables for an organization",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Variables"
          }
        ]
      },
      {
        "code": "400",
        "description": "Invalid request",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/variables",
    "operation": "post",
    "operationId": "PostVariables",
    "basicAuth": false,
    "summary": "Create a variable",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Variable to create",
      "required": true,
      "mediaType": "application/json",
      "type": "Variable"
    },
    "responses": [
      {
        "code": "201",
        "description": "Variable created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Variable"
          }
        ]
      },
      {
        "code": "default",
        "description": "Internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/variables/{variableID}",
    "operation": "get",
    "operationId": "GetVariablesID",
    "basicAuth": false,
    "summary": "Get a variable",
    "positionalParams": [
      {
        "name": "variableID",
        "description": "The variable ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Variable found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Variable"
          }
        ]
      },
      {
        "code": "404",
        "description": "Variable not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/variables/{variableID}",
    "operation": "put",
    "operationId": "PutVariablesID",
    "basicAuth": false,
    "summary": "Replace a variable",
    "positionalParams": [
      {
        "name": "variableID",
        "description": "The variable ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Variable to replace",
      "required": true,
      "mediaType": "application/json",
      "type": "Variable"
    },
    "responses": [
      {
        "code": "200",
        "description": "Variable updated",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Variable"
          }
        ]
      },
      {
        "code": "default",
        "description": "Internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/variables/{variableID}",
    "operation": "patch",
    "operationId": "PatchVariablesID",
    "basicAuth": false,
    "summary": "Update a variable",
    "positionalParams": [
      {
        "name": "variableID",
        "description": "The variable ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Variable update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "Variable"
    },
    "responses": [
      {
        "code": "200",
        "description": "Variable updated",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Variable"
          }
        ]
      },
      {
        "code": "default",
        "description": "Internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/variables/{variableID}",
    "operation": "delete",
    "operationId": "DeleteVariablesID",
    "basicAuth": false,
    "summary": "Delete a variable",
    "positionalParams": [
      {
        "name": "variableID",
        "description": "The variable ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Variable deleted",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/variables/{variableID}/labels",
    "operation": "get",
    "operationId": "GetVariablesIDLabels",
    "basicAuth": false,
    "summary": "List all labels for a variable",
    "positionalParams": [
      {
        "name": "variableID",
        "description": "The variable ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all labels for a variable",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/variables/{variableID}/labels",
    "operation": "post",
    "operationId": "PostVariablesIDLabels",
    "basicAuth": false,
    "summary": "Add a label to a variable",
    "positionalParams": [
      {
        "name": "variableID",
        "description": "The variable ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "The newly added label",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/variables/{variableID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteVariablesIDLabelsID",
    "basicAuth": false,
    "summary": "Delete a label from a variable",
    "positionalParams": [
      {
        "name": "variableID",
        "description": "The variable ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The label ID to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Variable not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/write",
    "operation": "post",
    "operationId": "PostWrite",
    "basicAuth": false,
    "summary": "Write time series data into InfluxDB",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      },
      {
        "name": "Content-Encoding",
        "description": "When present, its value indicates to the database that compression is applied to the line-protocol body.",
        "type": "string"
      },
      {
        "name": "Content-Type",
        "description": "Content-Type is used to indicate the format of the data sent to the server.",
        "type": "string"
      },
      {
        "name": "Content-Length",
        "description": "Content-Length is an entity header is indicating the size of the entity-body, in bytes, sent to the database. If the length is greater than the database max body configuration option, a 413 response is sent.",
        "type": "number"
      },
      {
        "name": "Accept",
        "description": "Specifies the return content format.",
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "org",
        "description": "Specifies the destination organization for writes. Takes either the ID or Name interchangeably. If both `orgID` and `org` are specified, `org` takes precedence.",
        "required": true,
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "Specifies the ID of the destination organization for writes. If both `orgID` and `org` are specified, `org` takes precedence.",
        "type": "string"
      },
      {
        "name": "bucket",
        "description": "The destination bucket for writes.",
        "required": true,
        "type": "string"
      },
      {
        "name": "precision",
        "description": "The precision for the unix timestamps within the body line-protocol.",
        "type": "any"
      }
    ],
    "bodyParam": {
      "description": "Line protocol body",
      "required": true,
      "mediaType": "text/plain",
      "type": "string"
    },
    "responses": [
      {
        "code": "204",
        "description": "Write data is correctly formatted and accepted for writing to the bucket.",
        "mediaTypes": []
      },
      {
        "code": "400",
        "description": "Line protocol poorly formed and no points were written.  Response can be used to determine the first malformed line in the body line-protocol. All data in body was rejected and not written.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LineProtocolError"
          }
        ]
      },
      {
        "code": "401",
        "description": "Token does not have sufficient permissions to write to this organization and bucket or the organization and bucket do not exist.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "403",
        "description": "No token was sent and they are required.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "413",
        "description": "Write has been rejected because the payload is too large. Error message returns max size supported. All data in body was rejected and not written.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LineProtocolLengthError"
          }
        ]
      },
      {
        "code": "429",
        "description": "Token is temporarily over quota. The Retry-After header describes when to try the write again.",
        "mediaTypes": []
      },
      {
        "code": "503",
        "description": "Server is temporarily unavailable to accept writes.  The Retry-After header describes when to try the write again.",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/delete",
    "operation": "post",
    "basicAuth": false,
    "summary": "Delete time series data from InfluxDB",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "org",
        "description": "Specifies the organization to delete data from.",
        "type": "string"
      },
      {
        "name": "bucket",
        "description": "Specifies the bucket to delete data from.",
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "Specifies the organization ID of the resource.",
        "type": "string"
      },
      {
        "name": "bucketID",
        "description": "Specifies the bucket ID to delete data from.",
        "type": "string"
      }
    ],
    "bodyParam": {
      "description": "Predicate delete request",
      "required": true,
      "mediaType": "application/json",
      "type": "DeletePredicateRequest"
    },
    "responses": [
      {
        "code": "204",
        "description": "delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "400",
        "description": "invalid request.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "403",
        "description": "no token was sent or does not have sufficient permissions.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "404",
        "description": "the bucket or organization is not found.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/ready",
    "operation": "get",
    "operationId": "GetReady",
    "basicAuth": false,
    "summary": "Get the readiness of an instance at startup",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The instance is ready",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Ready"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/health",
    "operation": "get",
    "operationId": "GetHealth",
    "basicAuth": false,
    "summary": "Get the health of an instance",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The instance is healthy",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "HealthCheck"
          }
        ]
      },
      {
        "code": "503",
        "description": "The instance is unhealthy",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "HealthCheck"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/sources",
    "operation": "get",
    "operationId": "GetSources",
    "basicAuth": false,
    "summary": "Get all sources",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "org",
        "description": "The organization name.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "All sources",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Sources"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/sources",
    "operation": "post",
    "operationId": "PostSources",
    "basicAuth": false,
    "summary": "Creates a source",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Source to create",
      "required": true,
      "mediaType": "application/json",
      "type": "Source"
    },
    "responses": [
      {
        "code": "201",
        "description": "Created Source",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Source"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/sources/{sourceID}",
    "operation": "get",
    "operationId": "GetSourcesID",
    "basicAuth": false,
    "summary": "Get a source",
    "positionalParams": [
      {
        "name": "sourceID",
        "description": "The source ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A source",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Source"
          }
        ]
      },
      {
        "code": "404",
        "description": "Source not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/sources/{sourceID}",
    "operation": "patch",
    "operationId": "PatchSourcesID",
    "basicAuth": false,
    "summary": "Update a Source",
    "positionalParams": [
      {
        "name": "sourceID",
        "description": "The source ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Source update",
      "required": true,
      "mediaType": "application/json",
      "type": "Source"
    },
    "responses": [
      {
        "code": "200",
        "description": "Created Source",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Source"
          }
        ]
      },
      {
        "code": "404",
        "description": "Source not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/sources/{sourceID}",
    "operation": "delete",
    "operationId": "DeleteSourcesID",
    "basicAuth": false,
    "summary": "Delete a source",
    "positionalParams": [
      {
        "name": "sourceID",
        "description": "The source ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "View not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/sources/{sourceID}/health",
    "operation": "get",
    "operationId": "GetSourcesIDHealth",
    "basicAuth": false,
    "summary": "Get the health of a source",
    "positionalParams": [
      {
        "name": "sourceID",
        "description": "The source ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The source is healthy",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "HealthCheck"
          }
        ]
      },
      {
        "code": "503",
        "description": "The source is not healthy",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "HealthCheck"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/sources/{sourceID}/buckets",
    "operation": "get",
    "operationId": "GetSourcesIDBuckets",
    "basicAuth": false,
    "summary": "Get buckets in a source",
    "positionalParams": [
      {
        "name": "sourceID",
        "description": "The source ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "org",
        "description": "The organization name.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A source",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Buckets"
          }
        ]
      },
      {
        "code": "404",
        "description": "Source not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/labels",
    "operation": "get",
    "operationId": "GetLabels",
    "basicAuth": false,
    "summary": "Get all labels",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "All labels",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/labels",
    "operation": "post",
    "operationId": "PostLabels",
    "basicAuth": false,
    "summary": "Create a label",
    "positionalParams": [],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to create",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelCreateRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "Added label",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/labels/{labelID}",
    "operation": "get",
    "operationId": "GetLabelsID",
    "basicAuth": false,
    "summary": "Get a label",
    "positionalParams": [
      {
        "name": "labelID",
        "description": "The ID of the label to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A label",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/labels/{labelID}",
    "operation": "patch",
    "operationId": "PatchLabelsID",
    "basicAuth": false,
    "summary": "Update a label",
    "positionalParams": [
      {
        "name": "labelID",
        "description": "The ID of the label to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label update",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelUpdate"
    },
    "responses": [
      {
        "code": "200",
        "description": "Updated label",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "404",
        "description": "Label not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteLabelsID",
    "basicAuth": false,
    "summary": "Delete a label",
    "positionalParams": [
      {
        "name": "labelID",
        "description": "The ID of the label to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Label not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards",
    "operation": "get",
    "operationId": "GetDashboards",
    "basicAuth": false,
    "summary": "Get all dashboards",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "owner",
        "description": "The owner ID.",
        "type": "string"
      },
      {
        "name": "sortBy",
        "description": "The column to sort by.",
        "type": "string"
      },
      {
        "name": "id",
        "description": "List of dashboard IDs to return. If both `id and `owner` are specified, only `id` is used.",
        "type": "any"
      },
      {
        "name": "orgID",
        "description": "The organization ID.",
        "type": "string"
      },
      {
        "name": "org",
        "description": "The organization name.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "All dashboards",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Dashboards"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards",
    "operation": "post",
    "operationId": "PostDashboards",
    "basicAuth": false,
    "summary": "Create a dashboard",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Dashboard to create",
      "required": true,
      "mediaType": "application/json",
      "type": "CreateDashboardRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "Added dashboard",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Dashboard | DashboardWithViewProperties"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}",
    "operation": "get",
    "operationId": "GetDashboardsID",
    "basicAuth": false,
    "summary": "Get a Dashboard",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The ID of the dashboard to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "include",
        "description": "Includes the cell view properties in the response if set to `properties`",
        "required": false,
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Get a single dashboard",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Dashboard | DashboardWithViewProperties"
          }
        ]
      },
      {
        "code": "404",
        "description": "Dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}",
    "operation": "patch",
    "operationId": "PatchDashboardsID",
    "basicAuth": false,
    "summary": "Update a dashboard",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The ID of the dashboard to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Patching of a dashboard",
      "required": true,
      "mediaType": "application/json",
      "type": "Dashboard"
    },
    "responses": [
      {
        "code": "200",
        "description": "Updated dashboard",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Dashboard"
          }
        ]
      },
      {
        "code": "404",
        "description": "Dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}",
    "operation": "delete",
    "operationId": "DeleteDashboardsID",
    "basicAuth": false,
    "summary": "Delete a dashboard",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The ID of the dashboard to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/cells",
    "operation": "post",
    "operationId": "PostDashboardsIDCells",
    "basicAuth": false,
    "summary": "Create a dashboard cell",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The ID of the dashboard to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Cell that will be added",
      "required": true,
      "mediaType": "application/json",
      "type": "CreateCell"
    },
    "responses": [
      {
        "code": "201",
        "description": "Cell successfully added",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Cell"
          }
        ]
      },
      {
        "code": "404",
        "description": "Dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/cells",
    "operation": "put",
    "operationId": "PutDashboardsIDCells",
    "basicAuth": false,
    "summary": "Replace cells in a dashboard",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The ID of the dashboard to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "mediaType": "application/json",
      "type": "Cells"
    },
    "responses": [
      {
        "code": "201",
        "description": "Replaced dashboard cells",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Dashboard"
          }
        ]
      },
      {
        "code": "404",
        "description": "Dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/cells/{cellID}",
    "operation": "patch",
    "operationId": "PatchDashboardsIDCellsID",
    "basicAuth": false,
    "summary": "Update the non-positional information related to a cell",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The ID of the dashboard to update.",
        "required": true,
        "type": "string"
      },
      {
        "name": "cellID",
        "description": "The ID of the cell to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "mediaType": "application/json",
      "type": "CellUpdate"
    },
    "responses": [
      {
        "code": "200",
        "description": "Updated dashboard cell",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Cell"
          }
        ]
      },
      {
        "code": "404",
        "description": "Cell or dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/cells/{cellID}",
    "operation": "delete",
    "operationId": "DeleteDashboardsIDCellsID",
    "basicAuth": false,
    "summary": "Delete a dashboard cell",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The ID of the dashboard to delete.",
        "required": true,
        "type": "string"
      },
      {
        "name": "cellID",
        "description": "The ID of the cell to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Cell successfully deleted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Cell or dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/cells/{cellID}/view",
    "operation": "get",
    "operationId": "GetDashboardsIDCellsIDView",
    "basicAuth": false,
    "summary": "Retrieve the view for a cell",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "cellID",
        "description": "The cell ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A dashboard cells view",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "View"
          }
        ]
      },
      {
        "code": "404",
        "description": "Cell or dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/cells/{cellID}/view",
    "operation": "patch",
    "operationId": "PatchDashboardsIDCellsIDView",
    "basicAuth": false,
    "summary": "Update the view for a cell",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The ID of the dashboard to update.",
        "required": true,
        "type": "string"
      },
      {
        "name": "cellID",
        "description": "The ID of the cell to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "mediaType": "application/json",
      "type": "View"
    },
    "responses": [
      {
        "code": "200",
        "description": "Updated cell view",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "View"
          }
        ]
      },
      {
        "code": "404",
        "description": "Cell or dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/labels",
    "operation": "get",
    "operationId": "GetDashboardsIDLabels",
    "basicAuth": false,
    "summary": "list all labels for a dashboard",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all labels for a dashboard",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/labels",
    "operation": "post",
    "operationId": "PostDashboardsIDLabels",
    "basicAuth": false,
    "summary": "Add a label to a dashboard",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "The label added to the dashboard",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteDashboardsIDLabelsID",
    "basicAuth": false,
    "summary": "Delete a label from a dashboard",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The ID of the label to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Dashboard not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/members",
    "operation": "get",
    "operationId": "GetDashboardsIDMembers",
    "basicAuth": false,
    "summary": "List all dashboard members",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of users who have member privileges for a dashboard",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMembers"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/members",
    "operation": "post",
    "operationId": "PostDashboardsIDMembers",
    "basicAuth": false,
    "summary": "Add a member to a dashboard",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as member",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Added to dashboard members",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMember"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/members/{userID}",
    "operation": "delete",
    "operationId": "DeleteDashboardsIDMembersID",
    "basicAuth": false,
    "summary": "Remove a member from a dashboard",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the member to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Member removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/owners",
    "operation": "get",
    "operationId": "GetDashboardsIDOwners",
    "basicAuth": false,
    "summary": "List all dashboard owners",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of users who have owner privileges for a dashboard",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwners"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/owners",
    "operation": "post",
    "operationId": "PostDashboardsIDOwners",
    "basicAuth": false,
    "summary": "Add an owner to a dashboard",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as owner",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Added to dashboard owners",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwner"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/owners/{userID}",
    "operation": "delete",
    "operationId": "DeleteDashboardsIDOwnersID",
    "basicAuth": false,
    "summary": "Remove an owner from a dashboard",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the owner to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Owner removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/dashboards/{dashboardID}/logs",
    "operation": "get",
    "operationId": "GetDashboardsIDLogs",
    "basicAuth": false,
    "summary": "Retrieve operation logs for a dashboard",
    "positionalParams": [
      {
        "name": "dashboardID",
        "description": "The dashboard ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "offset",
        "required": false,
        "type": "number"
      },
      {
        "name": "limit",
        "required": false,
        "type": "number"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Operation logs for the dashboard",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "OperationLogs"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/query/ast",
    "operation": "post",
    "operationId": "PostQueryAst",
    "basicAuth": false,
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      },
      {
        "name": "Content-Type",
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Analyzed Flux query to generate abstract syntax tree.",
      "required": false,
      "mediaType": "application/json",
      "type": "LanguageRequest"
    },
    "responses": [
      {
        "code": "200",
        "description": "Abstract syntax tree of flux query.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ASTResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Any response other than 200 is an internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/query/suggestions",
    "operation": "get",
    "operationId": "GetQuerySuggestions",
    "basicAuth": false,
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Suggestions for next functions in call chain",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "FluxSuggestions"
          }
        ]
      },
      {
        "code": "default",
        "description": "Any response other than 200 is an internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/query/suggestions/{name}",
    "operation": "get",
    "operationId": "GetQuerySuggestionsName",
    "basicAuth": false,
    "positionalParams": [
      {
        "name": "name",
        "description": "The name of the branching suggestion.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Suggestions for next functions in call chain",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "FluxSuggestion"
          }
        ]
      },
      {
        "code": "default",
        "description": "Any response other than 200 is an internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/authorizations",
    "operation": "get",
    "operationId": "GetAuthorizations",
    "basicAuth": false,
    "summary": "List all authorizations",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "userID",
        "description": "Only show authorizations that belong to a user ID.",
        "type": "string"
      },
      {
        "name": "user",
        "description": "Only show authorizations that belong to a user name.",
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "Only show authorizations that belong to an organization ID.",
        "type": "string"
      },
      {
        "name": "org",
        "description": "Only show authorizations that belong to a organization name.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of authorizations",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Authorizations"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/authorizations",
    "operation": "post",
    "operationId": "PostAuthorizations",
    "basicAuth": false,
    "summary": "Create an authorization",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Authorization to create",
      "required": true,
      "mediaType": "application/json",
      "type": "Authorization"
    },
    "responses": [
      {
        "code": "201",
        "description": "Authorization created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Authorization"
          }
        ]
      },
      {
        "code": "400",
        "description": "Invalid request",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/authorizations/{authID}",
    "operation": "get",
    "operationId": "GetAuthorizationsID",
    "basicAuth": false,
    "summary": "Retrieve an authorization",
    "positionalParams": [
      {
        "name": "authID",
        "description": "The ID of the authorization to get.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Authorization details",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Authorization"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/authorizations/{authID}",
    "operation": "patch",
    "operationId": "PatchAuthorizationsID",
    "basicAuth": false,
    "summary": "Update an authorization to be active or inactive",
    "positionalParams": [
      {
        "name": "authID",
        "description": "The ID of the authorization to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Authorization to update",
      "required": true,
      "mediaType": "application/json",
      "type": "AuthorizationUpdateRequest"
    },
    "responses": [
      {
        "code": "200",
        "description": "The active or inactie authorization",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Authorization"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/authorizations/{authID}",
    "operation": "delete",
    "operationId": "DeleteAuthorizationsID",
    "basicAuth": false,
    "summary": "Delete a authorization",
    "positionalParams": [
      {
        "name": "authID",
        "description": "The ID of the authorization to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Authorization deleted",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/query/analyze",
    "operation": "post",
    "operationId": "PostQueryAnalyze",
    "basicAuth": false,
    "summary": "Analyze an InfluxQL or Flux query",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      },
      {
        "name": "Content-Type",
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Flux or InfluxQL query to analyze",
      "required": false,
      "mediaType": "application/json",
      "type": "Query"
    },
    "responses": [
      {
        "code": "200",
        "description": "Query analyze results. Errors will be empty if the query is valid.",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "AnalyzeQueryResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Internal server error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/query",
    "operation": "post",
    "operationId": "PostQuery",
    "basicAuth": false,
    "summary": "Query InfluxDB",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      },
      {
        "name": "Accept-Encoding",
        "description": "The Accept-Encoding request HTTP header advertises which content encoding, usually a compression algorithm, the client is able to understand.",
        "type": "string"
      },
      {
        "name": "Content-Type",
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "org",
        "description": "Specifies the name of the organization executing the query. Takes either the ID or Name interchangeably. If both `orgID` and `org` are specified, `org` takes precedence.",
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "Specifies the ID of the organization executing the query. If both `orgID` and `org` are specified, `org` takes precedence.",
        "type": "string"
      }
    ],
    "bodyParam": {
      "description": "Flux query or specification to execute",
      "required": false,
      "mediaType": "application/json",
      "type": "Query | InfluxQLQuery"
    },
    "responses": [
      {
        "code": "200",
        "description": "Query results",
        "mediaTypes": [
          {
            "mediaType": "text/csv",
            "type": "string"
          },
          {
            "mediaType": "application/vnd.influx.arrow",
            "type": "string"
          }
        ]
      },
      {
        "code": "429",
        "description": "Token is temporarily over quota. The Retry-After header describes when to try the read again.",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Error processing query",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets",
    "operation": "get",
    "operationId": "GetBuckets",
    "basicAuth": false,
    "summary": "List all buckets",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "offset",
        "required": false,
        "type": "number"
      },
      {
        "name": "limit",
        "required": false,
        "type": "number"
      },
      {
        "name": "org",
        "description": "The organization name.",
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "The organization ID.",
        "type": "string"
      },
      {
        "name": "name",
        "description": "Only returns buckets with a specific name.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of buckets",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Buckets"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets",
    "operation": "post",
    "operationId": "PostBuckets",
    "basicAuth": false,
    "summary": "Create a bucket",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Bucket to create",
      "required": true,
      "mediaType": "application/json",
      "type": "PostBucketRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "Bucket created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Bucket"
          }
        ]
      },
      {
        "code": "422",
        "description": "Request body failed validation",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}",
    "operation": "get",
    "operationId": "GetBucketsID",
    "basicAuth": false,
    "summary": "Retrieve a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Bucket details",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Bucket"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}",
    "operation": "patch",
    "operationId": "PatchBucketsID",
    "basicAuth": false,
    "summary": "Update a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Bucket update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "Bucket"
    },
    "responses": [
      {
        "code": "200",
        "description": "An updated bucket",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Bucket"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}",
    "operation": "delete",
    "operationId": "DeleteBucketsID",
    "basicAuth": false,
    "summary": "Delete a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The ID of the bucket to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Bucket not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}/labels",
    "operation": "get",
    "operationId": "GetBucketsIDLabels",
    "basicAuth": false,
    "summary": "List all labels for a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all labels for a bucket",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}/labels",
    "operation": "post",
    "operationId": "PostBucketsIDLabels",
    "basicAuth": false,
    "summary": "Add a label to a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "The newly added label",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteBucketsIDLabelsID",
    "basicAuth": false,
    "summary": "delete a label from a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The ID of the label to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Bucket not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}/members",
    "operation": "get",
    "operationId": "GetBucketsIDMembers",
    "basicAuth": false,
    "summary": "List all users with member privileges for a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of bucket members",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMembers"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}/members",
    "operation": "post",
    "operationId": "PostBucketsIDMembers",
    "basicAuth": false,
    "summary": "Add a member to a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as member",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Member added to bucket",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMember"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}/members/{userID}",
    "operation": "delete",
    "operationId": "DeleteBucketsIDMembersID",
    "basicAuth": false,
    "summary": "Remove a member from a bucket",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the member to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Member removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}/owners",
    "operation": "get",
    "operationId": "GetBucketsIDOwners",
    "basicAuth": false,
    "summary": "List all owners of a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of bucket owners",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwners"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}/owners",
    "operation": "post",
    "operationId": "PostBucketsIDOwners",
    "basicAuth": false,
    "summary": "Add an owner to a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as owner",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Bucket owner added",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwner"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}/owners/{userID}",
    "operation": "delete",
    "operationId": "DeleteBucketsIDOwnersID",
    "basicAuth": false,
    "summary": "Remove an owner from a bucket",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the owner to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Owner removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/buckets/{bucketID}/logs",
    "operation": "get",
    "operationId": "GetBucketsIDLogs",
    "basicAuth": false,
    "summary": "Retrieve operation logs for a bucket",
    "positionalParams": [
      {
        "name": "bucketID",
        "description": "The bucket ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "offset",
        "required": false,
        "type": "number"
      },
      {
        "name": "limit",
        "required": false,
        "type": "number"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Operation logs for the bucket",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "OperationLogs"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs",
    "operation": "get",
    "operationId": "GetOrgs",
    "basicAuth": false,
    "summary": "List all organizations",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "org",
        "description": "Filter organizations to a specific organization name.",
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "Filter organizations to a specific organization ID.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of organizations",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Organizations"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs",
    "operation": "post",
    "operationId": "PostOrgs",
    "basicAuth": false,
    "summary": "Create an organization",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Organization to create",
      "required": true,
      "mediaType": "application/json",
      "type": "Organization"
    },
    "responses": [
      {
        "code": "201",
        "description": "Organization created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Organization"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}",
    "operation": "get",
    "operationId": "GetOrgsID",
    "basicAuth": false,
    "summary": "Retrieve an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The ID of the organization to get.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Organization details",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Organization"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}",
    "operation": "patch",
    "operationId": "PatchOrgsID",
    "basicAuth": false,
    "summary": "Update an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The ID of the organization to get.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Organization update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "Organization"
    },
    "responses": [
      {
        "code": "200",
        "description": "Organization updated",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Organization"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}",
    "operation": "delete",
    "operationId": "DeleteOrgsID",
    "basicAuth": false,
    "summary": "Delete an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The ID of the organization to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Organization not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/labels",
    "operation": "get",
    "operationId": "GetOrgsIDLabels",
    "basicAuth": false,
    "summary": "List all labels for a organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all labels for an organization",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/labels",
    "operation": "post",
    "operationId": "PostOrgsIDLabels",
    "basicAuth": false,
    "summary": "Add a label to an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "Returns the created label",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteOrgsIDLabelsID",
    "basicAuth": false,
    "summary": "Delete a label from an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The label ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Organization not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/secrets",
    "operation": "get",
    "operationId": "GetOrgsIDSecrets",
    "basicAuth": false,
    "summary": "List all secret keys for an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all secret keys",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "SecretKeysResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/secrets",
    "operation": "patch",
    "operationId": "PatchOrgsIDSecrets",
    "basicAuth": false,
    "summary": "Update secrets in an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Secret key value pairs to update/add",
      "required": true,
      "mediaType": "application/json",
      "type": "Secrets"
    },
    "responses": [
      {
        "code": "204",
        "description": "Keys successfully patched",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/secrets/delete",
    "operation": "post",
    "operationId": "PostOrgsIDSecrets",
    "basicAuth": false,
    "summary": "Delete secrets from an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Secret key to delete",
      "required": true,
      "mediaType": "application/json",
      "type": "SecretKeys"
    },
    "responses": [
      {
        "code": "204",
        "description": "Keys successfully patched",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/members",
    "operation": "get",
    "operationId": "GetOrgsIDMembers",
    "basicAuth": false,
    "summary": "List all members of an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of organization members",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMembers"
          }
        ]
      },
      {
        "code": "404",
        "description": "Organization not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/members",
    "operation": "post",
    "operationId": "PostOrgsIDMembers",
    "basicAuth": false,
    "summary": "Add a member to an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as member",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Added to organization created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMember"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/members/{userID}",
    "operation": "delete",
    "operationId": "DeleteOrgsIDMembersID",
    "basicAuth": false,
    "summary": "Remove a member from an organization",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the member to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Member removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/owners",
    "operation": "get",
    "operationId": "GetOrgsIDOwners",
    "basicAuth": false,
    "summary": "List all owners of an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of organization owners",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwners"
          }
        ]
      },
      {
        "code": "404",
        "description": "Organization not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/owners",
    "operation": "post",
    "operationId": "PostOrgsIDOwners",
    "basicAuth": false,
    "summary": "Add an owner to an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as owner",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Organization owner added",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwner"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/owners/{userID}",
    "operation": "delete",
    "operationId": "DeleteOrgsIDOwnersID",
    "basicAuth": false,
    "summary": "Remove an owner from an organization",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the owner to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Owner removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/orgs/{orgID}/logs",
    "operation": "get",
    "operationId": "GetOrgsIDLogs",
    "basicAuth": false,
    "summary": "Retrieve operation logs for an organization",
    "positionalParams": [
      {
        "name": "orgID",
        "description": "The organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "offset",
        "required": false,
        "type": "number"
      },
      {
        "name": "limit",
        "required": false,
        "type": "number"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Operation logs for the organization",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "OperationLogs"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/packages",
    "operation": "post",
    "operationId": "CreatePkg",
    "basicAuth": false,
    "summary": "Create a new Influx package",
    "positionalParams": [],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": {
      "description": "Influx package to create.",
      "required": false,
      "mediaType": "application/json",
      "type": "PkgCreate"
    },
    "responses": [
      {
        "code": "200",
        "description": "Influx package created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Pkg"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/packages/apply",
    "operation": "post",
    "operationId": "ApplyPkg",
    "basicAuth": false,
    "summary": "Apply or dry-run an Influx package",
    "positionalParams": [],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": {
      "required": true,
      "mediaType": "application/json",
      "type": "PkgApply"
    },
    "responses": [
      {
        "code": "200",
        "description": "Influx package dry-run successful, no new resources created. The provided diff and summary will not have IDs for resources that do not exist at the time of the dry run.\n",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "PkgSummary"
          }
        ]
      },
      {
        "code": "201",
        "description": "Influx package applied successfully. Newly created resources created available in summary. The diff compares the state of the world before the package is applied with the changes the application will impose. This corresponds to `\"dryRun\": true`\n",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "PkgSummary"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks",
    "operation": "get",
    "operationId": "GetTasks",
    "basicAuth": false,
    "summary": "List all tasks",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "name",
        "description": "Returns task with a specific name.",
        "type": "string"
      },
      {
        "name": "after",
        "description": "Return tasks after a specified ID.",
        "type": "string"
      },
      {
        "name": "user",
        "description": "Filter tasks to a specific user ID.",
        "type": "string"
      },
      {
        "name": "org",
        "description": "Filter tasks to a specific organization name.",
        "type": "string"
      },
      {
        "name": "orgID",
        "description": "Filter tasks to a specific organization ID.",
        "type": "string"
      },
      {
        "name": "status",
        "description": "Filter tasks by a status--\"inactive\" or \"active\".",
        "type": "string"
      },
      {
        "name": "limit",
        "description": "The number of tasks to return",
        "type": "number"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of tasks",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Tasks"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks",
    "operation": "post",
    "operationId": "PostTasks",
    "basicAuth": false,
    "summary": "Create a new task",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Task to create",
      "required": true,
      "mediaType": "application/json",
      "type": "TaskCreateRequest"
    },
    "responses": [
      {
        "code": "201",
        "description": "Task created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Task"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}",
    "operation": "get",
    "operationId": "GetTasksID",
    "basicAuth": false,
    "summary": "Retrieve a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Task details",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Task"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}",
    "operation": "patch",
    "operationId": "PatchTasksID",
    "basicAuth": false,
    "summary": "Update a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Task update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "TaskUpdateRequest"
    },
    "responses": [
      {
        "code": "200",
        "description": "Task updated",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Task"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}",
    "operation": "delete",
    "operationId": "DeleteTasksID",
    "basicAuth": false,
    "summary": "Delete a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The ID of the task to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Task deleted",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/runs",
    "operation": "get",
    "operationId": "GetTasksIDRuns",
    "basicAuth": false,
    "summary": "List runs for a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The ID of the task to get runs for.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "after",
        "description": "Returns runs after a specific ID.",
        "type": "string"
      },
      {
        "name": "limit",
        "description": "The number of runs to return",
        "type": "number"
      },
      {
        "name": "afterTime",
        "description": "Filter runs to those scheduled after this time, RFC3339",
        "type": "string"
      },
      {
        "name": "beforeTime",
        "description": "Filter runs to those scheduled before this time, RFC3339",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of task runs",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Runs"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/runs",
    "operation": "post",
    "operationId": "PostTasksIDRuns",
    "basicAuth": false,
    "summary": "Manually start a task run, overriding the current schedule",
    "positionalParams": [
      {
        "name": "taskID",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "required": false,
      "mediaType": "application/json",
      "type": "RunManually"
    },
    "responses": [
      {
        "code": "201",
        "description": "Run scheduled to start",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Run"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/runs/{runID}",
    "operation": "get",
    "operationId": "GetTasksIDRunsID",
    "basicAuth": false,
    "summary": "Retrieve a single run for a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "runID",
        "description": "The run ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The run record",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Run"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/runs/{runID}",
    "operation": "delete",
    "operationId": "DeleteTasksIDRunsID",
    "basicAuth": false,
    "summary": "Cancel a running task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "runID",
        "description": "The run ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/runs/{runID}/retry",
    "operation": "post",
    "operationId": "PostTasksIDRunsIDRetry",
    "basicAuth": false,
    "summary": "Retry a task run",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "runID",
        "description": "The run ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Run that has been queued",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Run"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/logs",
    "operation": "get",
    "operationId": "GetTasksIDLogs",
    "basicAuth": false,
    "summary": "Retrieve all logs for a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "All logs for a task",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Logs"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/runs/{runID}/logs",
    "operation": "get",
    "operationId": "GetTasksIDRunsIDLogs",
    "basicAuth": false,
    "summary": "Retrieve all logs for a run",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "ID of task to get logs for.",
        "required": true,
        "type": "string"
      },
      {
        "name": "runID",
        "description": "ID of run to get logs for.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "All logs for a run",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Logs"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/labels",
    "operation": "get",
    "operationId": "GetTasksIDLabels",
    "basicAuth": false,
    "summary": "List all labels for a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all labels for a task",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/labels",
    "operation": "post",
    "operationId": "PostTasksIDLabels",
    "basicAuth": false,
    "summary": "Add a label to a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "A list of all labels for a task",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteTasksIDLabelsID",
    "basicAuth": false,
    "summary": "Delete a label from a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The label ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Task not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/me",
    "operation": "get",
    "operationId": "GetMe",
    "basicAuth": false,
    "summary": "Return the current authenticated user",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Currently authenticated user",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "User"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/me/password",
    "operation": "put",
    "operationId": "PutMePassword",
    "basicAuth": true,
    "summary": "Update a password",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "New password",
      "required": true,
      "mediaType": "application/json",
      "type": "PasswordResetBody"
    },
    "responses": [
      {
        "code": "204",
        "description": "Password successfully updated",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unsuccessful authentication",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/members",
    "operation": "get",
    "operationId": "GetTasksIDMembers",
    "basicAuth": false,
    "summary": "List all task members",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of users who have member privileges for a task",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMembers"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/members",
    "operation": "post",
    "operationId": "PostTasksIDMembers",
    "basicAuth": false,
    "summary": "Add a member to a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as member",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Added to task members",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceMember"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/members/{userID}",
    "operation": "delete",
    "operationId": "DeleteTasksIDMembersID",
    "basicAuth": false,
    "summary": "Remove a member from a task",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the member to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Member removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/owners",
    "operation": "get",
    "operationId": "GetTasksIDOwners",
    "basicAuth": false,
    "summary": "List all owners of a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of users who have owner privileges for a task",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwners"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/owners",
    "operation": "post",
    "operationId": "PostTasksIDOwners",
    "basicAuth": false,
    "summary": "Add an owner to a task",
    "positionalParams": [
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to add as owner",
      "required": true,
      "mediaType": "application/json",
      "type": "AddResourceMemberRequestBody"
    },
    "responses": [
      {
        "code": "201",
        "description": "Added to task owners",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "ResourceOwner"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/tasks/{taskID}/owners/{userID}",
    "operation": "delete",
    "operationId": "DeleteTasksIDOwnersID",
    "basicAuth": false,
    "summary": "Remove an owner from a task",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the owner to remove.",
        "required": true,
        "type": "string"
      },
      {
        "name": "taskID",
        "description": "The task ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Owner removed",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/users",
    "operation": "get",
    "operationId": "GetUsers",
    "basicAuth": false,
    "summary": "List all users",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of users",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Users"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/users",
    "operation": "post",
    "operationId": "PostUsers",
    "basicAuth": false,
    "summary": "Create a user",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User to create",
      "required": true,
      "mediaType": "application/json",
      "type": "User"
    },
    "responses": [
      {
        "code": "201",
        "description": "User created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "User"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/users/{userID}",
    "operation": "get",
    "operationId": "GetUsersID",
    "basicAuth": false,
    "summary": "Retrieve a user",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The user ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "User details",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "User"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/users/{userID}",
    "operation": "patch",
    "operationId": "PatchUsersID",
    "basicAuth": false,
    "summary": "Update a user",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the user to update.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "User update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "User"
    },
    "responses": [
      {
        "code": "200",
        "description": "User updated",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "User"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/users/{userID}",
    "operation": "delete",
    "operationId": "DeleteUsersID",
    "basicAuth": false,
    "summary": "Delete a user",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The ID of the user to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "User deleted",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/users/{userID}/password",
    "operation": "put",
    "operationId": "PutUsersIDPassword",
    "basicAuth": true,
    "summary": "Update a password",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The user ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "New password",
      "required": true,
      "mediaType": "application/json",
      "type": "PasswordResetBody"
    },
    "responses": [
      {
        "code": "204",
        "description": "Password successfully updated",
        "mediaTypes": []
      },
      {
        "code": "default",
        "description": "Unsuccessful authentication",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/users/{userID}/logs",
    "operation": "get",
    "operationId": "GetUsersIDLogs",
    "basicAuth": false,
    "summary": "Retrieve operation logs for a user",
    "positionalParams": [
      {
        "name": "userID",
        "description": "The user ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "offset",
        "required": false,
        "type": "number"
      },
      {
        "name": "limit",
        "required": false,
        "type": "number"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "Operation logs for the user",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "OperationLogs"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks",
    "operation": "get",
    "operationId": "GetChecks",
    "basicAuth": false,
    "summary": "Get all checks",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "offset",
        "required": false,
        "type": "number"
      },
      {
        "name": "limit",
        "required": false,
        "type": "number"
      },
      {
        "name": "orgID",
        "description": "Only show checks that belong to a specific organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of checks",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Checks"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks",
    "operation": "post",
    "operationId": "CreateCheck",
    "basicAuth": false,
    "summary": "Add new check",
    "positionalParams": [],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": {
      "description": "Check to create",
      "required": true,
      "mediaType": "application/json",
      "type": "PostCheck"
    },
    "responses": [
      {
        "code": "201",
        "description": "Check created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Check"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks/{checkID}",
    "operation": "get",
    "operationId": "GetChecksID",
    "basicAuth": false,
    "summary": "Get a check",
    "positionalParams": [
      {
        "name": "checkID",
        "description": "The check ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The check requested",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Check"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks/{checkID}",
    "operation": "put",
    "operationId": "PutChecksID",
    "basicAuth": false,
    "summary": "Update a check",
    "positionalParams": [
      {
        "name": "checkID",
        "description": "The check ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Check update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "Check"
    },
    "responses": [
      {
        "code": "200",
        "description": "An updated check",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Check"
          }
        ]
      },
      {
        "code": "404",
        "description": "The check was not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks/{checkID}",
    "operation": "patch",
    "operationId": "PatchChecksID",
    "basicAuth": false,
    "summary": "Update a check",
    "positionalParams": [
      {
        "name": "checkID",
        "description": "The check ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Check update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "CheckPatch"
    },
    "responses": [
      {
        "code": "200",
        "description": "An updated check",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Check"
          }
        ]
      },
      {
        "code": "404",
        "description": "The check was not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks/{checkID}",
    "operation": "delete",
    "operationId": "DeleteChecksID",
    "basicAuth": false,
    "summary": "Delete a check",
    "positionalParams": [
      {
        "name": "checkID",
        "description": "The check ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "The check was not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks/{checkID}/labels",
    "operation": "get",
    "operationId": "GetChecksIDLabels",
    "basicAuth": false,
    "summary": "List all labels for a check",
    "positionalParams": [
      {
        "name": "checkID",
        "description": "The check ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all labels for a check",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks/{checkID}/labels",
    "operation": "post",
    "operationId": "PostChecksIDLabels",
    "basicAuth": false,
    "summary": "Add a label to a check",
    "positionalParams": [
      {
        "name": "checkID",
        "description": "The check ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "The label was added to the check",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks/{checkID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteChecksIDLabelsID",
    "basicAuth": false,
    "summary": "Delete label from a check",
    "positionalParams": [
      {
        "name": "checkID",
        "description": "The check ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The ID of the label to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Check or label not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules",
    "operation": "get",
    "operationId": "GetNotificationRules",
    "basicAuth": false,
    "summary": "Get all notification rules",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "offset",
        "required": false,
        "type": "number"
      },
      {
        "name": "limit",
        "required": false,
        "type": "number"
      },
      {
        "name": "orgID",
        "description": "Only show notification rules that belong to a specific organization ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "checkID",
        "description": "Only show notifications that belong to the specific check ID.",
        "type": "string"
      },
      {
        "name": "tag",
        "description": "Only return notification rules that \"would match\" statuses which contain the tag key value pairs provided.",
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of notification rules",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationRules"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules",
    "operation": "post",
    "operationId": "CreateNotificationRule",
    "basicAuth": false,
    "summary": "Add a notification rule",
    "positionalParams": [],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": {
      "description": "Notification rule to create",
      "required": true,
      "mediaType": "application/json",
      "type": "PostNotificationRule"
    },
    "responses": [
      {
        "code": "201",
        "description": "Notification rule created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationRule"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/checks/{checkID}/query",
    "operation": "get",
    "operationId": "GetChecksIDQuery",
    "basicAuth": false,
    "summary": "Get a check query",
    "positionalParams": [
      {
        "name": "checkID",
        "description": "The check ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The check query requested",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "FluxResponse"
          }
        ]
      },
      {
        "code": "400",
        "description": "Invalid request",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "404",
        "description": "Check not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules/{ruleID}",
    "operation": "get",
    "operationId": "GetNotificationRulesID",
    "basicAuth": false,
    "summary": "Get a notification rule",
    "positionalParams": [
      {
        "name": "ruleID",
        "description": "The notification rule ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The notification rule requested",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationRule"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules/{ruleID}",
    "operation": "put",
    "operationId": "PutNotificationRulesID",
    "basicAuth": false,
    "summary": "Update a notification rule",
    "positionalParams": [
      {
        "name": "ruleID",
        "description": "The notification rule ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Notification rule update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "NotificationRule"
    },
    "responses": [
      {
        "code": "200",
        "description": "An updated notification rule",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationRule"
          }
        ]
      },
      {
        "code": "404",
        "description": "The notification rule was not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules/{ruleID}",
    "operation": "patch",
    "operationId": "PatchNotificationRulesID",
    "basicAuth": false,
    "summary": "Update a notification rule",
    "positionalParams": [
      {
        "name": "ruleID",
        "description": "The notification rule ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Notification rule update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "NotificationRuleUpdate"
    },
    "responses": [
      {
        "code": "200",
        "description": "An updated notification rule",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationRule"
          }
        ]
      },
      {
        "code": "404",
        "description": "The notification rule was not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules/{ruleID}",
    "operation": "delete",
    "operationId": "DeleteNotificationRulesID",
    "basicAuth": false,
    "summary": "Delete a notification rule",
    "positionalParams": [
      {
        "name": "ruleID",
        "description": "The notification rule ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "The check was not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules/{ruleID}/labels",
    "operation": "get",
    "operationId": "GetNotificationRulesIDLabels",
    "basicAuth": false,
    "summary": "List all labels for a notification rule",
    "positionalParams": [
      {
        "name": "ruleID",
        "description": "The notification rule ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all labels for a notification rule",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules/{ruleID}/labels",
    "operation": "post",
    "operationId": "PostNotificationRuleIDLabels",
    "basicAuth": false,
    "summary": "Add a label to a notification rule",
    "positionalParams": [
      {
        "name": "ruleID",
        "description": "The notification rule ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "The label was added to the notification rule",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules/{ruleID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteNotificationRulesIDLabelsID",
    "basicAuth": false,
    "summary": "Delete label from a notification rule",
    "positionalParams": [
      {
        "name": "ruleID",
        "description": "The notification rule ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The ID of the label to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Rule or label not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationRules/{ruleID}/query",
    "operation": "get",
    "operationId": "GetNotificationRulesIDQuery",
    "basicAuth": false,
    "summary": "Get a notification rule query",
    "positionalParams": [
      {
        "name": "ruleID",
        "description": "The notification rule ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The notification rule query requested",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "FluxResponse"
          }
        ]
      },
      {
        "code": "400",
        "description": "Invalid request",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "404",
        "description": "Notification rule not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationEndpoints",
    "operation": "get",
    "operationId": "GetNotificationEndpoints",
    "basicAuth": false,
    "summary": "Get all notification endpoints",
    "positionalParams": [],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [
      {
        "name": "offset",
        "required": false,
        "type": "number"
      },
      {
        "name": "limit",
        "required": false,
        "type": "number"
      },
      {
        "name": "orgID",
        "description": "Only show notification endpoints that belong to specific organization ID.",
        "required": true,
        "type": "string"
      }
    ],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of notification endpoints",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationEndpoints"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationEndpoints",
    "operation": "post",
    "operationId": "CreateNotificationEndpoint",
    "basicAuth": false,
    "summary": "Add a notification endpoint",
    "positionalParams": [],
    "headerParams": [],
    "queryParams": [],
    "bodyParam": {
      "description": "Notification endpoint to create",
      "required": true,
      "mediaType": "application/json",
      "type": "PostNotificationEndpoint"
    },
    "responses": [
      {
        "code": "201",
        "description": "Notification endpoint created",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationEndpoint"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationEndpoints/{endpointID}",
    "operation": "get",
    "operationId": "GetNotificationEndpointsID",
    "basicAuth": false,
    "summary": "Get a notification endpoint",
    "positionalParams": [
      {
        "name": "endpointID",
        "description": "The notification endpoint ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "The notification endpoint requested",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationEndpoint"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationEndpoints/{endpointID}",
    "operation": "put",
    "operationId": "PutNotificationEndpointsID",
    "basicAuth": false,
    "summary": "Update a notification endpoint",
    "positionalParams": [
      {
        "name": "endpointID",
        "description": "The notification endpoint ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "A new notification endpoint to replace the existing endpoint with",
      "required": true,
      "mediaType": "application/json",
      "type": "NotificationEndpoint"
    },
    "responses": [
      {
        "code": "200",
        "description": "An updated notification endpoint",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationEndpoint"
          }
        ]
      },
      {
        "code": "404",
        "description": "The notification endpoint was not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationEndpoints/{endpointID}",
    "operation": "patch",
    "operationId": "PatchNotificationEndpointsID",
    "basicAuth": false,
    "summary": "Update a notification endpoint",
    "positionalParams": [
      {
        "name": "endpointID",
        "description": "The notification endpoint ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Check update to apply",
      "required": true,
      "mediaType": "application/json",
      "type": "NotificationEndpointUpdate"
    },
    "responses": [
      {
        "code": "200",
        "description": "An updated notification endpoint",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "NotificationEndpoint"
          }
        ]
      },
      {
        "code": "404",
        "description": "The notification endpoint was not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationEndpoints/{endpointID}",
    "operation": "delete",
    "operationId": "DeleteNotificationEndpointsID",
    "basicAuth": false,
    "summary": "Delete a notification endpoint",
    "positionalParams": [
      {
        "name": "endpointID",
        "description": "The notification endpoint ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "The endpoint was not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationEndpoints/{endpointID}/labels",
    "operation": "get",
    "operationId": "GetNotificationEndpointsIDLabels",
    "basicAuth": false,
    "summary": "List all labels for a notification endpoint",
    "positionalParams": [
      {
        "name": "endpointID",
        "description": "The notification endpoint ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "200",
        "description": "A list of all labels for a notification endpoint",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelsResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationEndpoints/{endpointID}/labels",
    "operation": "post",
    "operationId": "PostNotificationEndpointIDLabels",
    "basicAuth": false,
    "summary": "Add a label to a notification endpoint",
    "positionalParams": [
      {
        "name": "endpointID",
        "description": "The notification endpoint ID.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": {
      "description": "Label to add",
      "required": true,
      "mediaType": "application/json",
      "type": "LabelMapping"
    },
    "responses": [
      {
        "code": "201",
        "description": "The label was added to the notification endpoint",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "LabelResponse"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  },
  {
    "server": "/api/v2",
    "path": "/notificationEndpoints/{endpointID}/labels/{labelID}",
    "operation": "delete",
    "operationId": "DeleteNotificationEndpointsIDLabelsID",
    "basicAuth": false,
    "summary": "Delete a label from a notification endpoint",
    "positionalParams": [
      {
        "name": "endpointID",
        "description": "The notification endpoint ID.",
        "required": true,
        "type": "string"
      },
      {
        "name": "labelID",
        "description": "The ID of the label to delete.",
        "required": true,
        "type": "string"
      }
    ],
    "headerParams": [
      {
        "name": "Zap-Trace-Span",
        "description": "OpenTracing span context",
        "required": false,
        "type": "string"
      }
    ],
    "queryParams": [],
    "bodyParam": null,
    "responses": [
      {
        "code": "204",
        "description": "Delete has been accepted",
        "mediaTypes": []
      },
      {
        "code": "404",
        "description": "Endpoint or label not found",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      },
      {
        "code": "default",
        "description": "Unexpected error",
        "mediaTypes": [
          {
            "mediaType": "application/json",
            "type": "Error"
          }
        ]
      }
    ]
  }
]